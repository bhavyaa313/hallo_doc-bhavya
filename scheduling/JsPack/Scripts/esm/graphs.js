var _0x54f1=['edges','inEdges','weight','clone','layer','balance','owner','removeEdge','origin','remove','outEdges','destination','incidentWith','includes','getCommonEdge','find','getOtherEnd','getCommonEdges','every','edgeTo','getNeighbors','forEach','push','degree','inDegree','length','toString','getCommonVertex','adjacentTo','changeDestination','changeVertex','changeOrigin','createReverseEdge','reversed','index','init','consecutiveNodes','reinit','modifiedNodes','root','Node','reduction','bubble','enqueue','count','queued','pertinentLeafCount','markBlocked','getBlockedSiblings','getUnblockedSiblings','parent','markUnblocked','immediateSiblings','blocked','getMaximalConsecutiveBlockedSiblings','pertinentChildCount','unmarked','markQueued','setPseudoRoot','reduce','dequeue','templateL1','templateP1','templateQ1','templateQ2','pertinentRoot','templateP2','templateP4','templateP6','templateQ3','hasChildren','label','full','type','pNode','partialChildren','fullChildren','moveFullChildrenTo','addChild','getFirstFullChild','qNode','partial','removeChild','replaceChild','emptyChildren','getFirstEmptyChild','getPartialChild','children','destroyed','destroy','templateP5','fullChildrenAreEndMost','endMostChildren','get','checkLabelDirected','empty','add','pseudoRoot','fullChildrenAreAdjacentTo','absorbPartialChild','endMostChildrenAreEmptyOrPartial','partialChildrenAtEnds','siblingOf','data','NodePair','readInReverseDirection','left','fullChildrenList','fullLeft','fullRight','partialChildrenList','partialRight','_label','right','partialLeft','childCount','circularLink','getNonDirectedSibling','getEndMostDirectedSibling','getOther','directionIndicator','fullChildrenAreAdjacent','childrenAreFull','twoChildrenLeft','addToFullList','removeFromFullList','addToPartialList','removeFromPartialList','addChildToPNode','removeChildFromPNode','addChildToQNode','contains','removeChildFromQNode','addChildToPseudoRoot','undefined','replace','getEmptyNeighbor','getEndMostChild','getPertinentNeighbor','getFullLeavesFrom','getFullLeavesTo','removeAt','becomeChild','_type','getEndmostLeaves','getLeaf','getAllNodes','getQChildren','direction','getFullLeaves','nextPSibling','childLink','nodes','trackDirection','directedTowardsIndex','indexOf','splice','slice','getVertices','enumVertices','edgeFromVertex','replaceEdge','reverse','bigAngles','_bigAngles','graph','embedding','set','addBlockEmbedding','entries','vertexCopyToOrigMap','edgeCopyToOrigMap','has','delete','getNextRightFaceEdge','createDirectedEdges','reverseEdges','replaceEdges','addEdge','getNext','getPrevious','isVertexBimodal','isBimodal','keys','contractEdge','quasiCapacity','externalFace','countSourceSwitches','enumerateFaces','_faces','faceOnLeftMap','faceOnRightMap','enumerateFaceEdges','prevInEmbedding','insertEdge','edgesBetween','faces','min','max','overlaps','intersects','getLeaves','item','addChildren','collectLeaves','insert','swim','getMin','exchange','sink','less','kess','floor','reversedLinks','parentNode','childEdges','assignPoints','toReversed','cloneSubset','createEdgeP','createReverseMaps','vertexOrigToCopyMap','edgeOrigToCopyMap','tree','level','pop','childNode','vertices','layoutTraits','Left','assistantPosition','Right','Normal','reassignLevels','treeLevels','collectLevels','childrenOf','sort','treeLayoutAssistant','removeAllEdges','createVertex','width','height','removeVertex','addVertex','setItemIndices','createEdge','temporary','findShortestPathVS','findShortestPathSS','findShortestWeightedPathVS','MAX_VALUE','lower','findShortestWeightedPathSS','value','dfsConnectivity','searchCounter','getBiconnectedComponents','getConnectedComponents','getBiconnectedComponentsOfConnectedGraph','cutVertices','visitedEdges','foundComponents','searchOrder','backMostEdges','biconnectivityDfs','secondLevel','stackToComponent2','last','addVertexAndOutEdges','getBiconnectedComponents2','processed','shift','planarMakeBiconnected','BlockCutpointGraph','directFromRoot','findPendantCut','addAll','getOutsideVertex','stillPlanar','father','getCutvertex','getOutsideVertexN','mergeBlocks','setNewParent','removeCnode','isPlanar','embedOnSameFace','DualGraph','containsAll','getOutsideVertexCPN','get3EdgeConnectedComponents','getCutPairs','test3EdgeConnectivity','cutEdge','treeEdge','edge','child','any','findBlockSeparationPairs','findBlockSeparationPairsB','spTreeEdge','replacementFor','forReverse','getEnds','depthFirstSearch','searchParent','searchComponent','getStNumbering','joins','stOrder','findPath','isCycleEdge','isPlanarSingleBicomponent','verticesInStOrder','replaceFullChildrenWith','savePqTree','getPlanarEmbedding','getPlanarEmbeddingSingleBicomp','getUpwardEmbedding','entireEmbed','tEdgeOrder','Type','savedPqTree','entireEmbedDfs','unshift','findPlanarSubgraph','findPlanarSubgraphByBookEmbedding','findPlanarSubgraphBySimpleEdgeInsertion','debugId','size','clear','minAdjacenciesNeighbor','OverlapGraph','intervals','vertexIntervals','maxIndependentSet','MAX_SAFE_INTEGER','countAdjacencies','minDegreeVertex','planarize','getDualGraph','getIncidentFaces','getFaceVertices','vertexToFaceMap','getCommonEdgeMinWeight','splitEdge','splitFace','makeAcyclic','getDualGraphE','postCounter','topologicalSortDfs','getWeightedTopologicalNumbering','topologicalSort','getWeightedTopologicalNumberingTS','splitToMaxDegree','splitToMaxDegreeV','This\x20method\x20can\x20be\x20applied\x20only\x20on\x20an\x20acyclic\x20graph.','reorderTopologically','Not\x20a\x20transitive\x20graph.','targetGraph','blockToBnodeMap','cutToCnodeMap','onComponentBlocks','cutVerticesB','isPendant','adjacentBlocks','isBnode','directFrom','isCnode','getBlock','mapVertices','cutVerticesV','getCnode','edgeToFaceMap','incidentFaces','faceToVertexMap','dgCreateVertex','dgCreateEdge','splitExternalFace','leftExFace','rightExFace','rightExVertex','leftExVertex','getReverse','getOriginalEdge','intervalVertices','maxWeightedIndependentSet','maxWeightedCliqueOfTransitiveDAG','inclusionLevels','levelVertices','setInclusionLevel','assignVertexToLevel','links','items','isNode','getWeight','isLink','_expandable','_autoRoute','findAllPaths','findPaths','getSize','findShortestPath','findLongestPath','findCycle','enumAllCyclesDirected','mark','markedStack','pointStack','vertexIdx','toDelete','deleted','enumCircuitsTarjan','anchoring','Ignore','multipleGraphsPlacement','Vertical','margins','_keepGroupLayout','_multipleGraphsPlacement','_margins','setsLinkEndPoints','requiresConnectedGraph','requiresSimpleGraph','routeRepeatingLinks','requiresBezierLinks','requiresHierarchyInfo','isStatic','levelDistance','nodeDistance','keepRootPosition','TopToBottom','linkType','Horizontal','requiresCascadingLinks','Cascading','arrange','parentEdges','rarrange','isHorizontal','isStraight','offsetBranch','Default','Straight','LeftToRight','RightToLeft','fromVertex','top','BottomToTop','bottom','getType','constructor','__typeName','_levelDistance','_nodeDistance','_keepRootPosition','_direction','_linkType','_anchoring','keepGroupLayout','_reversedLinks','call','union','points','GetLFarCenter','GetLNearCenter','GetBFarCenter','center','SetLinkPoints','_fcl_processed','_fcl_multiMerge','prototype','SetLinkPointsA','GetLinkPoints','GetBreadth','GetBCenter','GetLength','GetLCenter','GetBNear','GetBFar','GetLNearRect','GetLFar','GetLFarRect','GetBNearRect','GetBFarRect','GetB','GetL','OffsetL','OffsetOutLinks','node','fromCenterAndSize','branchPadding','linkPadding','nodeOrder','progressCounter','branchings','visitedNodes','postOrder','flowchartNodes','_mf_mm','orientation','placedNodes','furthestL','getStartNodes','topologicalOrder','deferredMerge','measure','getDownLinks','layoutRect','getGraphBounds','pullLinksApart','composeFlowChart','composeBlocks','isVisited','getIncomingDownLinks','registerMerge','getIncomingLoopLinks','setLoopDepth','getOutgoingLoopLinks','getOutgoingDownLinks','setIncomingLink','branches','followedByMergeNode','nextNodes','getSequence','getFlowchartNode','parentBlock','isStartNode','isDownLink','isBackLink','isEndNode','outDegree','segmentsFromPoints','_mf_segments','splitPaths','horizontal','abs','_branchPadding','_linkPadding','_orientation','dumpGraph','log','************************','\x20\x20\x20\x20','flowchartLayout','contentBreadth','fullBreadth','loopDepth','maxLoopDepth','arranged','incomingLink','currentLink','getInLinks','getBackLinks','disjoint','getContentBreadth','getLoopDepth','getArranged','getIncomingLink','getTopologicalOrder','getNode','_fcl_arranged','MoveNode','getOutLinks','sequence','arrangeOverflow','getFullBreadth','getLinkPadding','middleBlock','rightBlock','rootNode','mergeMap','centeredBranching','mergeNodes','centerNonEmptyBranch','twoEmptyBranches','connectNodeBorderCenters','arrangedAsMerge','intersectsWith','_fcl_center','leftBlock','GetBNearCenter','getBNearest','getBFurthest','GetLNear','sortBranches','concat','containsPoint','polylineIntersectsRect','polylinesIntersect','calcAngle','yint','xint','isEmpty','vertex','isRoot','branchCircles','arrangeCircles','measureCircles','sqrt','radius','sweepAngle','angle','sin','cos','fromPoints','centerX','centerY','childCircles','centerDelta','rotatePoint','layerDistance','siftingRounds','initialMinimizeCrossingsDown','uBaryCenter','dBaryCenter','uPriority','dPriority','gridPosition','dummy','layers','minimizeCrossings','swapPairs','layout','dedummify','setMinDist','indexInLayer','minDistances','getMinDist','computeLeftClasses','computeClasses','nodeLeftClass','nodesInLongLink','placeLeftToRight','placeLeft','POSITIVE_INFINITY','rightSibling','upNodes','downNodes','diff','dump','layer\x20','placeRightToLeft','placeRight','NEGATIVE_INFINITY','leftSibling','nodeRightClass','assignCoordinates','computeRightClasses','placeSequence','MIN_VALUE','adjustDirections','placeSingle','combineSequences','dLinkCount','layoutLayer','moveLeft','calcDownData','moveRight','mapVirtualNode','nodeToLinkMap','linkToNodeMap','uLinkCount','dummificationLevel','minimizeCrossingsDir','calcUpData','countCrossings','_layerDistance','_siftingRounds','iterations','refineStage','initialTemperature','calcRepulsionForce','calcSpringForce','temperature','moveToEpsilonCircle','random','attraction','pow','repulsion','_iterations','bendAdjacentLinks','_bendAdjacentLinks','enableAssistants','compactAssistants','treeHelper','assistantType','branchBounds','branchDistance','hasAssistants','intDiv','_enableAssistants','_compactAssistants','squarify','padding','layoutArea','containerPadding','setsLinkPoints','weights','master','arrangeSquare','arrangeSiblings','evalRatio','doSquarify','layoutRow','subordinates','layOutArea','subtractPadding','calcWeights','headerSize','inflate','_squarify','_padding','_layoutArea','_containerPadding','vertexPoints','cells','PointMap','bounds','Rectangle','MIN_SAFE_INTEGER','updateBounds','normalizePath','equals','getCell','Bend','columnWidths','rowHeights','setCellDimensions','maxWidth','maxHeight','minWidth','minHeight','columnPositions','rowPositions','getPosition','getEdgePointPosition','horizontalEdges','getEdgeBend','maxVNeighbors','verticalLane','maxHNeighbors','getEdgeLane','val','updateBoundsFromPoints','refine','removeRedundantBends','removeUnusedRows','removeUnusedColumns','refineSpace','refineCacheEdges','EdgeSegment','edgePoints','removeFromCell','content','containsVertexOrBend','removeEdgeOrBend','manhDistance','removeSegmentsFromRange','setSegmentsInRange','edgeContainsRange','containsEdgeSegment','setApartOverlappingEdges','verticalEdges','countEdges','containsVertex','setHorizontalEdgesInRange','setVerticalEdgesInRange','getBendNeighborPoints','neighborPoints','bendsToTheLeft','bendsToTheTop','lane','maxNeighbors','horizontalLane','first','PermutationSet','countHorizontalEdgesCrossings','containsEdge','list','countVerticalEdgesCrossings','permuteVerticalEdgeLanes','permuteHorizontalEdgeLanes','Cell','getEdgeSegment','permuteLanes','key','permutations','current','heapPermute','addItem','stsort','leftV','orig','dest','destF','getOutEdges','leftMostOutgoing','getOutMedian','getInMedian','getInEdges','newHSegment','newVSegment','dualGraph','edgeToPathMap','pathToVertexMap','hSegments','vSegments','minLaneSize','applyGrid','drawingGrid','convertToStGraph','leftMostIncoming','source','edgeSegments','vertexSegments','mergePaths','mergePath','alignEndsToNode','reverseRange','_refine','_minLaneSize','stretchFactor','rightBisectorData','arrangeLevel','calcBounds','calcRadius','asin','leftBisectorData','angleData'];var _0x59c5=function(_0x4c55ce,_0x13643c){_0x4c55ce=_0x4c55ce-0x0;var _0x48e92b=_0x54f1[_0x4c55ce];return _0x48e92b;};import{Utils,Queue,Grid}from'@mindfusion/collections';import{Rect,Point,Geometry,Circle}from'@mindfusion/drawing';const AssistantPosition={'Left':0x1,'Right':0x2};const AssistantType={'Normal':0x1,'Left':0x2,'Right':0x3};const Anchoring={'Ignore':0x0,'Keep':0x1,'Reassign':0x2,'Custom':0x3};const LayoutDirection={'TopToBottom':0x0,'LeftToRight':0x1,'BottomToTop':0x2,'RightToLeft':0x3};const TreeLayoutLinkType={'Default':0x0,'Straight':0x1,'Cascading':0x2};const MultipleGraphsPlacement={'Vertical':0x0,'Horizontal':0x1};const Orientation={'Vertical':0x0,'Horizontal':0x1};class Vertex{constructor(){this[_0x59c5('0x0')]=[];this['outEdges']=[];this[_0x59c5('0x1')]=[];this[_0x59c5('0x2')]=0x1;}[_0x59c5('0x3')](){var copy=new Vertex();if(this[_0x59c5('0x4')]!==undefined)copy[_0x59c5('0x4')]=this[_0x59c5('0x4')];if(this[_0x59c5('0x2')]!==undefined)copy[_0x59c5('0x2')]=this[_0x59c5('0x2')];if(this[_0x59c5('0x5')]!==undefined)copy[_0x59c5('0x5')]=this['balance'];if(this[_0x59c5('0x6')]!==undefined)copy[_0x59c5('0x6')]=this['owner'];return copy;}[_0x59c5('0x7')](edge){if(edge[_0x59c5('0x8')]==this){Utils[_0x59c5('0x9')](this['edges'],edge);Utils[_0x59c5('0x9')](this[_0x59c5('0xa')],edge);edge[_0x59c5('0x8')]=null;}if(edge[_0x59c5('0xb')]==this){Utils['remove'](this[_0x59c5('0x0')],edge);Utils[_0x59c5('0x9')](this['inEdges'],edge);edge[_0x59c5('0xb')]=null;}}[_0x59c5('0xc')](edge){return this['edges'][_0x59c5('0xd')](edge);}['adjacentTo'](vertex){return this[_0x59c5('0xe')](vertex)!=null;}[_0x59c5('0xe')](vertex){return this[_0x59c5('0x0')][_0x59c5('0xf')](edge=>edge[_0x59c5('0x10')](this)===vertex);}[_0x59c5('0x11')](vertex){return this[_0x59c5('0x0')][_0x59c5('0x12')](function(edge){return edge[_0x59c5('0x10')](this)===vertex;},this);}[_0x59c5('0x13')](vertex){return this[_0x59c5('0xa')][_0x59c5('0xf')](edge=>edge[_0x59c5('0xb')]==vertex);}[_0x59c5('0x14')](){var neighbors=[];this[_0x59c5('0x1')][_0x59c5('0x15')](function(e){neighbors[_0x59c5('0x16')](e['getOtherEnd'](this));},this);this[_0x59c5('0xa')][_0x59c5('0x15')](function(e){neighbors[_0x59c5('0x16')](e[_0x59c5('0x10')](this));},this);return neighbors;}[_0x59c5('0x17')](){return this[_0x59c5('0x0')]['length'];}[_0x59c5('0x18')](){return this[_0x59c5('0x1')][_0x59c5('0x19')];}['outDegree'](){return this[_0x59c5('0xa')][_0x59c5('0x19')];}[_0x59c5('0x1a')](){return this['index'][_0x59c5('0x1a')]();}}class Edge{constructor(origin,destination,prototype){this[_0x59c5('0x8')]=origin;this[_0x59c5('0xb')]=destination;this['weight']=0x1;if(prototype){this[_0x59c5('0x2')]=prototype[_0x59c5('0x2')];}}['getOtherEnd'](vertex){return this['origin']==vertex?this[_0x59c5('0xb')]:this['origin'];}[_0x59c5('0x1b')](edge){if(this[_0x59c5('0x8')]==edge[_0x59c5('0x8')]||this[_0x59c5('0x8')]==edge[_0x59c5('0xb')])return this[_0x59c5('0x8')];if(this[_0x59c5('0xb')]==edge[_0x59c5('0x8')]||this[_0x59c5('0xb')]==edge[_0x59c5('0xb')])return this[_0x59c5('0xb')];return null;}['joins'](v1,v2){if(this['origin']==v1&&this[_0x59c5('0xb')]==v2||this[_0x59c5('0x8')]==v2&&this[_0x59c5('0xb')]==v1)return!![];return![];}['getEnds'](){return[this[_0x59c5('0x8')],this[_0x59c5('0xb')]];}[_0x59c5('0xc')](vertex){return this[_0x59c5('0x8')]==vertex||this[_0x59c5('0xb')]==vertex;}[_0x59c5('0x1c')](edge){return this[_0x59c5('0x8')][_0x59c5('0x0')][_0x59c5('0xd')](edge)||this[_0x59c5('0xb')][_0x59c5('0x0')]['includes'](edge);}['changeOrigin'](v){Utils[_0x59c5('0x9')](this[_0x59c5('0x8')][_0x59c5('0x0')],this);Utils[_0x59c5('0x9')](this[_0x59c5('0x8')][_0x59c5('0xa')],this);v[_0x59c5('0x0')][_0x59c5('0x16')](this);v[_0x59c5('0xa')][_0x59c5('0x16')](this);this[_0x59c5('0x8')]=v;}[_0x59c5('0x1d')](v){Utils['remove'](this[_0x59c5('0xb')][_0x59c5('0x0')],this);Utils[_0x59c5('0x9')](this[_0x59c5('0xb')][_0x59c5('0x1')],this);v[_0x59c5('0x0')][_0x59c5('0x16')](this);v['inEdges'][_0x59c5('0x16')](this);this['destination']=v;}[_0x59c5('0x1e')](v,w){if(this['origin']==v)this[_0x59c5('0x1f')](w);else if(this[_0x59c5('0xb')]==v)this[_0x59c5('0x1d')](w);}['reverse'](){var oldOrigin=this[_0x59c5('0x8')];var oldDest=this[_0x59c5('0xb')];this[_0x59c5('0x8')]=oldDest;Utils[_0x59c5('0x9')](oldOrigin[_0x59c5('0xa')],this);this[_0x59c5('0x8')][_0x59c5('0xa')][_0x59c5('0x16')](this);this[_0x59c5('0xb')]=oldOrigin;Utils[_0x59c5('0x9')](oldDest[_0x59c5('0x1')],this);this[_0x59c5('0xb')][_0x59c5('0x1')]['push'](this);}['directTo'](destination){if(this[_0x59c5('0xb')]!=destination)this['reverse']();}[_0x59c5('0x20')](){var r=new Edge(this[_0x59c5('0xb')],this[_0x59c5('0x8')],this);r[_0x59c5('0x21')]=!![];return r;}[_0x59c5('0x1a')](){return this[_0x59c5('0x8')][_0x59c5('0x22')]['toString']()+'-'+this['destination'][_0x59c5('0x22')][_0x59c5('0x1a')]();}}class PQTree{constructor(){this[_0x59c5('0x23')]();}[_0x59c5('0x23')](){if(this[_0x59c5('0x24')]!=null){this[_0x59c5('0x25')]();this[_0x59c5('0x24')]=null;}this[_0x59c5('0x26')]=[];this[_0x59c5('0x27')]=new PQTree[(_0x59c5('0x28'))]();}[_0x59c5('0x25')](){for(let node of this[_0x59c5('0x26')])node['reinit']();if(this[_0x59c5('0x24')]!=null){for(let node of this[_0x59c5('0x24')])node[_0x59c5('0x25')]();}}[_0x59c5('0x29')](s){this[_0x59c5('0x24')]=s;this[_0x59c5('0x25')]();let proot=null;if(this[_0x59c5('0x2a')](s))proot=this['reduce'](s);if(proot==null)this[_0x59c5('0x23')]();return proot;}[_0x59c5('0x2a')](s){let queue=new Queue();let blockCount=0x0;let blockedNodes=0x0;let offTheTop=0x0;for(let node of s)queue[_0x59c5('0x2b')](node);let blockedList=[];while(queue['count']+blockCount+offTheTop>0x1){if(queue[_0x59c5('0x2c')]==0x0)return![];let x=queue['dequeue']();if(!x[_0x59c5('0x2d')])x[_0x59c5('0x2e')]=0x1;x[_0x59c5('0x2f')]();let bs=x[_0x59c5('0x30')]();let us=x[_0x59c5('0x31')]();if(us['length']>0x0){let y=us[0x0];x[_0x59c5('0x32')]=y[_0x59c5('0x32')];x[_0x59c5('0x33')]();}else if(x['immediateSiblings']==null||x[_0x59c5('0x34')]['count']<0x2){x['markUnblocked']();}if(!x[_0x59c5('0x35')]){let y=x[_0x59c5('0x32')];let list=[];if(bs['length']>0x0){list=x[_0x59c5('0x36')]();for(let z of list){z[_0x59c5('0x33')]();z[_0x59c5('0x32')]=y;y[_0x59c5('0x37')]=y[_0x59c5('0x37')]+0x1;}}if(y==null){offTheTop=0x1;}else{y[_0x59c5('0x37')]=y[_0x59c5('0x37')]+0x1;if(y[_0x59c5('0x38')]){queue['enqueue'](y);y[_0x59c5('0x39')]();}}blockCount-=bs['length'];blockedNodes-=list[_0x59c5('0x19')];}else{blockedList['push'](x);blockCount=blockCount+0x1-bs[_0x59c5('0x19')];blockedNodes++;}}if(blockCount>0x1)return![];if(blockCount==0x1&&blockedNodes>0x1){let z=new PQTree['Node']();z[_0x59c5('0x37')]=blockedNodes;z[_0x59c5('0x3a')](blockedList);}return!![];}[_0x59c5('0x3b')](s){let queue=new Queue();for(let x of s){queue['enqueue'](x);x[_0x59c5('0x2e')]=0x1;}while(queue[_0x59c5('0x2c')]>0x0){let x=queue[_0x59c5('0x3c')]();this[_0x59c5('0x26')][_0x59c5('0x16')](x);if(x[_0x59c5('0x2e')]<s[_0x59c5('0x19')]&&s['length']!=0x1){let y=x['parent'];y[_0x59c5('0x2e')]=y['pertinentLeafCount']+x[_0x59c5('0x2e')];y[_0x59c5('0x37')]=y[_0x59c5('0x37')]-0x1;if(y[_0x59c5('0x37')]==0x0)queue[_0x59c5('0x2b')](y);if(!(this[_0x59c5('0x3d')](x)||this[_0x59c5('0x3e')](x)||this['templateP3'](x)||this['templateP5'](x)||this[_0x59c5('0x3f')](x)||this[_0x59c5('0x40')](x))){return null;}}else{this[_0x59c5('0x41')]=x;if(!(this['templateL1'](x)||this[_0x59c5('0x3e')](x)||this[_0x59c5('0x42')](x)||this[_0x59c5('0x43')](x)||this[_0x59c5('0x44')](x)||this[_0x59c5('0x3f')](x)||this[_0x59c5('0x40')](x)||this[_0x59c5('0x45')](x))){return null;}}}return this[_0x59c5('0x41')];}['templateL1'](lNode){if(lNode[_0x59c5('0x46')]())return![];lNode[_0x59c5('0x47')]=NodeLabel[_0x59c5('0x48')];return!![];}[_0x59c5('0x3e')](pNode){if(pNode[_0x59c5('0x49')]!=NodeType[_0x59c5('0x4a')])return![];if(pNode['children']!=pNode['fullChildren'])return![];pNode[_0x59c5('0x47')]=NodeLabel[_0x59c5('0x48')];return!![];}['templateP2'](pNode){if(pNode[_0x59c5('0x49')]!=NodeType[_0x59c5('0x4a')])return![];if(pNode[_0x59c5('0x4b')]>0x0)return![];if(pNode[_0x59c5('0x4c')]==0x0)return![];if(pNode['fullChildren']>0x1&&pNode['emptyChildren']>0x0){let fullSubTree=new PQTree[(_0x59c5('0x28'))]();fullSubTree[_0x59c5('0x47')]=NodeLabel[_0x59c5('0x48')];pNode[_0x59c5('0x4d')](fullSubTree);pNode[_0x59c5('0x4e')](fullSubTree);this[_0x59c5('0x41')]=fullSubTree;}else{this['pertinentRoot']=pNode[_0x59c5('0x4f')]();}return!![];}['templateP3'](pNode){if(pNode[_0x59c5('0x49')]!=NodeType[_0x59c5('0x4a')])return![];if(pNode[_0x59c5('0x4b')]>0x0)return![];if(pNode[_0x59c5('0x4c')]==0x0)return![];let parent=pNode[_0x59c5('0x32')];let qNode=new PQTree[(_0x59c5('0x28'))]();qNode[_0x59c5('0x49')]=NodeType[_0x59c5('0x50')];qNode[_0x59c5('0x47')]=NodeLabel[_0x59c5('0x51')];if(pNode[_0x59c5('0x4c')]>0x1){let fullSubTree=new PQTree['Node']();fullSubTree['label']=NodeLabel['full'];pNode['moveFullChildrenTo'](fullSubTree);qNode[_0x59c5('0x4e')](fullSubTree);}else{let fullChild=pNode[_0x59c5('0x4f')]();pNode[_0x59c5('0x52')](fullChild);qNode[_0x59c5('0x4e')](fullChild);}parent[_0x59c5('0x53')](pNode,qNode);if(pNode[_0x59c5('0x54')]>0x1){let emptySubTree=pNode;pNode[_0x59c5('0x25')](![]);qNode[_0x59c5('0x4e')](emptySubTree);}else{let emptyChild=pNode[_0x59c5('0x55')]();pNode['removeChild'](emptyChild);qNode[_0x59c5('0x4e')](emptyChild);}return!![];}['templateP4'](pNode){if(pNode[_0x59c5('0x49')]!=NodeType[_0x59c5('0x4a')])return![];if(pNode['partialChildren']!=0x1)return![];let qNode=pNode[_0x59c5('0x56')](0x0);if(pNode[_0x59c5('0x4c')]>0x0){if(pNode[_0x59c5('0x4c')]>0x1){let fullSubTree=new PQTree[(_0x59c5('0x28'))]();fullSubTree[_0x59c5('0x47')]=NodeLabel[_0x59c5('0x48')];pNode[_0x59c5('0x4d')](fullSubTree);qNode[_0x59c5('0x4e')](fullSubTree);}else{let fullChild=pNode['getFirstFullChild']();pNode[_0x59c5('0x52')](fullChild);qNode[_0x59c5('0x4e')](fullChild);}}if(pNode[_0x59c5('0x57')]==0x1){if(pNode[_0x59c5('0x32')]!=null){if(pNode[_0x59c5('0x32')][_0x59c5('0x58')]){pNode['becomeChild'](qNode);}else{pNode[_0x59c5('0x32')][_0x59c5('0x53')](pNode,qNode);pNode[_0x59c5('0x59')]();this[_0x59c5('0x41')]=qNode;}}else{qNode[_0x59c5('0x32')]=null;this[_0x59c5('0x27')]=qNode;this[_0x59c5('0x41')]=qNode;}}else{this[_0x59c5('0x41')]=qNode;}return!![];}[_0x59c5('0x5a')](pNode){if(pNode['type']!=NodeType[_0x59c5('0x4a')])return![];if(pNode['partialChildren']!=0x1)return![];let parent=pNode['parent'];let qNode=pNode[_0x59c5('0x56')](0x0);pNode[_0x59c5('0x52')](qNode);if(pNode[_0x59c5('0x4c')]>0x0){if(pNode[_0x59c5('0x4c')]>0x1){let fullSubTree=new PQTree[(_0x59c5('0x28'))]();fullSubTree[_0x59c5('0x47')]=NodeLabel[_0x59c5('0x48')];pNode['moveFullChildrenTo'](fullSubTree);qNode[_0x59c5('0x4e')](fullSubTree);}else{let fullChild=pNode[_0x59c5('0x4f')]();pNode['removeChild'](fullChild);qNode[_0x59c5('0x4e')](fullChild);}}parent['replaceChild'](pNode,qNode);switch(pNode[_0x59c5('0x54')]){case 0x0:pNode[_0x59c5('0x59')]();break;case 0x1:{let emptyChild=pNode[_0x59c5('0x55')]();pNode[_0x59c5('0x52')](emptyChild);qNode[_0x59c5('0x4e')](emptyChild);pNode[_0x59c5('0x59')]();}break;default:pNode[_0x59c5('0x25')](![]);qNode[_0x59c5('0x4e')](pNode);break;}return!![];}[_0x59c5('0x44')](pNode){if(pNode[_0x59c5('0x49')]!=NodeType['pNode'])return![];if(pNode[_0x59c5('0x4b')]!=0x2)return![];let qNode1=pNode['getPartialChild'](0x0);let qNode2=pNode[_0x59c5('0x56')](0x1);if(!qNode1[_0x59c5('0x5b')]()||!qNode2[_0x59c5('0x5b')]())return![];qNode1[_0x59c5('0x2e')]=pNode[_0x59c5('0x2e')];if(pNode[_0x59c5('0x4c')]>0x0){if(pNode['fullChildren']>0x1){let fullSubTree=new PQTree[(_0x59c5('0x28'))]();fullSubTree[_0x59c5('0x47')]=NodeLabel[_0x59c5('0x48')];pNode['moveFullChildrenTo'](fullSubTree);qNode1[_0x59c5('0x4e')](fullSubTree);}else{let fullChild=pNode[_0x59c5('0x4f')]();pNode['removeChild'](fullChild);qNode1[_0x59c5('0x4e')](fullChild);}}if(qNode1[_0x59c5('0x47')]==NodeLabel['partial']&&qNode2[_0x59c5('0x47')]==NodeLabel[_0x59c5('0x51')]){let endMostChildren1=qNode2[_0x59c5('0x5c')];let endMostChildren2=qNode1[_0x59c5('0x5c')];if(endMostChildren1[_0x59c5('0x2c')]==0x2&&endMostChildren2[_0x59c5('0x2c')]==0x2){let tempNode=null;let fullEndMostNode1=null;let emptyEndMostNode1=null;for(let i=0x0;i<endMostChildren1[_0x59c5('0x2c')];i++){tempNode=endMostChildren1[_0x59c5('0x5d')](i);if(tempNode['checkLabelDirected'](null,NodeLabel[_0x59c5('0x48')]))fullEndMostNode1=tempNode;else if(tempNode[_0x59c5('0x5e')](null,NodeLabel[_0x59c5('0x5f')]))emptyEndMostNode1=tempNode;}let fullEndMostNode2=null;let emptyEndMostNode2=null;for(let i=0x0;i<endMostChildren2[_0x59c5('0x2c')];i++){tempNode=endMostChildren2[_0x59c5('0x5d')](i);if(tempNode[_0x59c5('0x5e')](null,NodeLabel[_0x59c5('0x48')]))fullEndMostNode2=tempNode;else if(tempNode['checkLabelDirected'](null,NodeLabel['empty']))emptyEndMostNode2=tempNode;}if(fullEndMostNode1!=null&&emptyEndMostNode1!=null&&fullEndMostNode2!=null&&emptyEndMostNode2!=null){fullEndMostNode1[_0x59c5('0x32')]=qNode1;emptyEndMostNode1[_0x59c5('0x32')]=qNode1;fullEndMostNode1[_0x59c5('0x34')]['add'](fullEndMostNode2);fullEndMostNode2['immediateSiblings'][_0x59c5('0x60')](fullEndMostNode1);endMostChildren2[_0x59c5('0x9')](fullEndMostNode2);endMostChildren2[_0x59c5('0x60')](emptyEndMostNode1);endMostChildren1[_0x59c5('0x9')](fullEndMostNode1);endMostChildren1[_0x59c5('0x9')](emptyEndMostNode1);qNode2[_0x59c5('0x4d')](qNode1);pNode[_0x59c5('0x52')](qNode2);}}}qNode2[_0x59c5('0x59')]();if(pNode[_0x59c5('0x57')]==0x1){if(pNode['parent']!=null){if(pNode[_0x59c5('0x32')][_0x59c5('0x58')]){pNode['becomeChild'](qNode1);}else{pNode['parent'][_0x59c5('0x53')](pNode,qNode1);pNode[_0x59c5('0x59')]();this[_0x59c5('0x41')]=qNode1;}}else{qNode1[_0x59c5('0x32')]=null;this['root']=qNode1;this[_0x59c5('0x41')]=qNode1;}}else{this[_0x59c5('0x41')]=qNode1;}return!![];}[_0x59c5('0x3f')](qNode){if(qNode[_0x59c5('0x49')]!=NodeType['qNode'])return![];if(qNode[_0x59c5('0x61')])return![];if(!qNode['childrenAreFull']())return![];qNode[_0x59c5('0x47')]=NodeLabel['full'];return!![];}[_0x59c5('0x40')](qNode){if(qNode[_0x59c5('0x49')]!=NodeType[_0x59c5('0x50')])return![];if(qNode['pseudoRoot'])return![];if(qNode[_0x59c5('0x4b')]>0x1)return![];if(!qNode['fullChildrenAreAdjacent']())return![];if(qNode['endMostChildrenAreEmptyOrPartial']()&&qNode['fullChildren']!=0x0)return![];qNode[_0x59c5('0x47')]=NodeLabel[_0x59c5('0x51')];if(qNode[_0x59c5('0x4b')]==0x1){let partialChild=qNode[_0x59c5('0x56')](0x0);if(!qNode[_0x59c5('0x62')](partialChild))return![];let endMostChildren=qNode[_0x59c5('0x5c')];if(qNode[_0x59c5('0x4c')]==0x0&&!endMostChildren['contains'](partialChild))return![];if(!partialChild['fullChildrenAreEndMost']())return![];qNode[_0x59c5('0x63')](partialChild);}return!![];}[_0x59c5('0x45')](qNode){if(qNode[_0x59c5('0x49')]!=NodeType['qNode'])return![];if(qNode[_0x59c5('0x4b')]>0x2)return![];if(!qNode['pseudoRoot']&&!qNode[_0x59c5('0x64')]())return![];qNode[_0x59c5('0x47')]=NodeLabel[_0x59c5('0x51')];if(qNode['partialChildren']==0x1){let partialChild=qNode[_0x59c5('0x56')](0x0);if(!qNode[_0x59c5('0x62')](partialChild))return![];if(!partialChild[_0x59c5('0x5b')]())return![];if(qNode[_0x59c5('0x61')]&&!qNode[_0x59c5('0x65')]())return![];qNode['absorbPartialChild'](partialChild);}else if(qNode[_0x59c5('0x4b')]==0x2){let partialChild1=qNode[_0x59c5('0x56')](0x0);let partialChild2=qNode['getPartialChild'](0x1);if(qNode[_0x59c5('0x4c')]==0x0&&!partialChild1[_0x59c5('0x66')](partialChild2))return![];if(!partialChild1[_0x59c5('0x5b')]()||!partialChild2[_0x59c5('0x5b')]())return![];if(!(qNode['fullChildrenAreAdjacentTo'](partialChild1)&&qNode[_0x59c5('0x62')](partialChild2)))return![];if(qNode['pseudoRoot']&&!qNode[_0x59c5('0x65')]())return![];qNode['absorbPartialChild'](partialChild1);qNode['absorbPartialChild'](partialChild2);}if(qNode[_0x59c5('0x61')])qNode[_0x59c5('0x59')]();return!![];}}PQTree[_0x59c5('0x28')]=class{constructor(type,data){if(type==null)type=NodeType['pNode'];this[_0x59c5('0x23')](type);if(data)this[_0x59c5('0x67')]=data;if(type==NodeType['directionIndicator']){this[_0x59c5('0x34')]=new PQTree[(_0x59c5('0x68'))](-0x1);this[_0x59c5('0x69')]=![];}}[_0x59c5('0x23')](nodeType){this['_type']=nodeType;this[_0x59c5('0x67')]=null;this[_0x59c5('0x32')]=null;this['immediateSiblings']=null;this[_0x59c5('0x5c')]=null;this['circularLink']=null;this[_0x59c5('0x6a')]=null;this['right']=null;this['childCount']=0x0;this[_0x59c5('0x6b')]=null;this[_0x59c5('0x6c')]=null;this[_0x59c5('0x6d')]=null;this['fullChildren']=0x0;this[_0x59c5('0x6e')]=null;this['partialLeft']=null;this[_0x59c5('0x6f')]=null;this[_0x59c5('0x4b')]=0x0;this[_0x59c5('0x37')]=0x0;this['pertinentLeafCount']=0x0;this[_0x59c5('0x70')]=NodeLabel[_0x59c5('0x5f')];this[_0x59c5('0x35')]=![];this['queued']=![];this['pseudoRoot']=![];this[_0x59c5('0x58')]=![];}[_0x59c5('0x59')](){if(this[_0x59c5('0x61')]){this[_0x59c5('0x32')]=null;this[_0x59c5('0x34')]=null;this[_0x59c5('0x6a')]=null;this[_0x59c5('0x71')]=null;this[_0x59c5('0x6c')]=null;this[_0x59c5('0x6d')]=null;this[_0x59c5('0x72')]=null;this[_0x59c5('0x6f')]=null;this[_0x59c5('0x73')]=0x0;this['partialChildren']=0x0;this[_0x59c5('0x37')]=0x0;this['pertinentLeafCount']=0x0;this[_0x59c5('0x74')]=null;this[_0x59c5('0x6e')]=null;this['queued']=![];}else{this[_0x59c5('0x23')](NodeType[_0x59c5('0x50')]);}this[_0x59c5('0x58')]=!![];}[_0x59c5('0x25')](reinitParent){if(typeof reinitParent=='undefined')reinitParent=!![];this[_0x59c5('0x47')]=NodeLabel[_0x59c5('0x5f')];this['queued']=![];this[_0x59c5('0x35')]=![];this[_0x59c5('0x37')]=0x0;this[_0x59c5('0x2e')]=0x0;let parent=this[_0x59c5('0x32')];if(reinitParent&&parent!=null&&(parent[_0x59c5('0x47')]!=NodeLabel[_0x59c5('0x5f')]||parent[_0x59c5('0x2d')]||parent[_0x59c5('0x35')]||parent[_0x59c5('0x37')]!=0x0||parent[_0x59c5('0x2e')]!=0x0||parent[_0x59c5('0x4c')]!=0x0||parent[_0x59c5('0x4b')]!=0x0)){parent['reinit']();}}[_0x59c5('0x30')](){let blockedSiblings=[];if(this[_0x59c5('0x34')]!=null){let node=this['getNonDirectedSibling'](this[_0x59c5('0x34')][_0x59c5('0x5d')](0x1));if(node!=null&&node[_0x59c5('0x35')])blockedSiblings[_0x59c5('0x16')](node);node=this[_0x59c5('0x75')](this[_0x59c5('0x34')][_0x59c5('0x5d')](0x0));if(node!=null&&node[_0x59c5('0x35')])blockedSiblings[_0x59c5('0x16')](node);}return blockedSiblings;}['getUnblockedSiblings'](){let unblockedSiblings=[];if(this[_0x59c5('0x34')]!=null){let node=this['getNonDirectedSibling'](this[_0x59c5('0x34')]['get'](0x1));if(node==null){node=this[_0x59c5('0x76')](this[_0x59c5('0x34')][_0x59c5('0x5d')](0x1));if(node!=null)unblockedSiblings[_0x59c5('0x16')](node);}else if(!node['blocked']&&node[_0x59c5('0x32')]!=null&&!node[_0x59c5('0x32')][_0x59c5('0x58')]){unblockedSiblings[_0x59c5('0x16')](node);}node=this['getNonDirectedSibling'](this[_0x59c5('0x34')][_0x59c5('0x5d')](0x0));if(node==null){node=this['getEndMostDirectedSibling'](this[_0x59c5('0x34')][_0x59c5('0x5d')](0x0));if(node!=null)unblockedSiblings[_0x59c5('0x16')](node);}else if(!node[_0x59c5('0x35')]&&node[_0x59c5('0x32')]!=null&&!node[_0x59c5('0x32')][_0x59c5('0x58')]){unblockedSiblings[_0x59c5('0x16')](node);}}return unblockedSiblings;}['getEndMostDirectedSibling'](otherSide){let endmost=null;if(this[_0x59c5('0x34')][_0x59c5('0x77')](otherSide)!=null)endmost=this['immediateSiblings'][_0x59c5('0x77')](otherSide)[_0x59c5('0x76')](this);else if(this[_0x59c5('0x49')]==NodeType[_0x59c5('0x78')])endmost=this;return endmost;}[_0x59c5('0x75')](otherSide){let sibling=null;if(this[_0x59c5('0x34')][_0x59c5('0x77')](otherSide)!=null){sibling=!(this['immediateSiblings'][_0x59c5('0x77')](otherSide)[_0x59c5('0x49')]==NodeType[_0x59c5('0x78')])?this[_0x59c5('0x34')][_0x59c5('0x77')](otherSide):this[_0x59c5('0x34')][_0x59c5('0x77')](otherSide)[_0x59c5('0x75')](this);}return sibling;}[_0x59c5('0x3a')](blockedList){this['type']=NodeType['qNode'];this[_0x59c5('0x61')]=!![];let endmostChildren=[];let prevNode=null;for(let node of blockedList){if(!node[_0x59c5('0x35')])continue;node[_0x59c5('0x32')]=this;for(let i=0x0;i<=0x1;++i){if(!node[_0x59c5('0x75')](node['immediateSiblings']['get'](i))[_0x59c5('0x35')]){if(endmostChildren[_0x59c5('0x19')]==0x0)prevNode=node[_0x59c5('0x34')]['get'](0x1-i);endmostChildren[_0x59c5('0x16')](node);break;}}}let prchildren=[];let prchild=endmostChildren[0x0];prchildren[_0x59c5('0x16')](prchild);prchild[_0x59c5('0x32')]=this;while(prchild!=endmostChildren[0x1]){let swap=prchild;prchild=prchild[_0x59c5('0x34')][_0x59c5('0x77')](prevNode);prevNode=swap;prchildren[_0x59c5('0x16')](prchild);prchild[_0x59c5('0x32')]=this;}for(let child of prchildren)this['addChild'](child,![]);this[_0x59c5('0x5c')]['add'](prchildren[0x0]);this['endMostChildren'][_0x59c5('0x60')](prchildren[prchildren[_0x59c5('0x19')]-0x1]);}['getMaximalConsecutiveBlockedSiblings'](){let blockedSiblings=[];for(let i=0x0;i<this['immediateSiblings']['count'];i++){let previousNode=this;let currentNode=this['immediateSiblings']['get'](i);while(currentNode!=null&&(currentNode[_0x59c5('0x35')]||currentNode[_0x59c5('0x49')]==NodeType[_0x59c5('0x78')])){if(!(currentNode[_0x59c5('0x49')]==NodeType[_0x59c5('0x78')]))blockedSiblings['push'](currentNode);let nextNode=currentNode[_0x59c5('0x34')][_0x59c5('0x77')](previousNode);previousNode=currentNode;currentNode=nextNode;}}return blockedSiblings;}[_0x59c5('0x2f')](){this[_0x59c5('0x35')]=!![];}[_0x59c5('0x33')](){this[_0x59c5('0x35')]=![];}[_0x59c5('0x39')](){this[_0x59c5('0x2d')]=!![];}[_0x59c5('0x79')](){if(this[_0x59c5('0x4c')]==0x0)return!![];let currentChild=null;let fullCount=0x1;for(let i=0x0;i<this[_0x59c5('0x6b')][_0x59c5('0x34')]['count'];i++){currentChild=this[_0x59c5('0x6b')]['immediateSiblings'][_0x59c5('0x5d')](i);let previousChild=this[_0x59c5('0x6b')];while(fullCount<this[_0x59c5('0x4c')]&&currentChild!=null&&(currentChild[_0x59c5('0x47')]==NodeLabel[_0x59c5('0x48')]||currentChild['type']==NodeType['directionIndicator'])){if(!(currentChild[_0x59c5('0x49')]==NodeType[_0x59c5('0x78')]))fullCount++;let nextChild=currentChild[_0x59c5('0x34')][_0x59c5('0x77')](previousChild);previousChild=currentChild;currentChild=nextChild;}}return fullCount==this[_0x59c5('0x4c')];}['fullChildrenAreAdjacentTo'](node){if(this[_0x59c5('0x4c')]==0x0)return!![];return this[_0x59c5('0x79')]()&&(node['immediateSiblings'][_0x59c5('0x5d')](0x0)!=null&&node[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)['checkLabelDirected'](node,NodeLabel[_0x59c5('0x48')])||node[_0x59c5('0x34')][_0x59c5('0x5d')](0x1)!=null&&node[_0x59c5('0x34')][_0x59c5('0x5d')](0x1)[_0x59c5('0x5e')](node,NodeLabel[_0x59c5('0x48')]));}['fullChildrenAreEndMost'](){if(this[_0x59c5('0x4c')]==0x0)return!![];if(!this['fullChildrenAreAdjacent']())return![];for(let i=0x0;i<this[_0x59c5('0x5c')][_0x59c5('0x2c')];i++){if(this['pseudoRoot']){let endNode=this[_0x59c5('0x5c')][_0x59c5('0x5d')](i);if(endNode[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)!=null&&endNode[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)['parent']!=this){endNode=endNode['immediateSiblings'][_0x59c5('0x5d')](0x0);}else if(endNode[_0x59c5('0x34')]['get'](0x1)!=null&&endNode[_0x59c5('0x34')][_0x59c5('0x5d')](0x1)[_0x59c5('0x32')]!=this){endNode=endNode[_0x59c5('0x34')][_0x59c5('0x5d')](0x1);}if(this[_0x59c5('0x5c')][_0x59c5('0x5d')](i)[_0x59c5('0x5e')](endNode,NodeLabel[_0x59c5('0x48')]))return!![];}else{if(this[_0x59c5('0x5c')]['get'](i)[_0x59c5('0x5e')](null,NodeLabel[_0x59c5('0x48')]))return!![];}}return![];}[_0x59c5('0x65')](){if(this[_0x59c5('0x4b')]==0x0)return!![];if(this[_0x59c5('0x4b')]==0x1){for(let i=0x0;i<this[_0x59c5('0x5c')]['count'];i++){if(this[_0x59c5('0x61')]){let endNode=this[_0x59c5('0x5c')][_0x59c5('0x5d')](i);if(endNode[_0x59c5('0x34')]['get'](0x0)!=null&&endNode[_0x59c5('0x34')]['get'](0x0)['parent']!=this){endNode=endNode[_0x59c5('0x34')][_0x59c5('0x5d')](0x0);}else if(endNode[_0x59c5('0x34')]['get'](0x1)!=null&&endNode['immediateSiblings'][_0x59c5('0x5d')](0x1)['parent']!=this){endNode=endNode[_0x59c5('0x34')][_0x59c5('0x5d')](0x1);}if(this[_0x59c5('0x5c')][_0x59c5('0x5d')](i)['checkLabelDirected'](endNode,NodeLabel['partial']))return!![];}else{if(this[_0x59c5('0x5c')][_0x59c5('0x5d')](i)[_0x59c5('0x5e')](null,NodeLabel[_0x59c5('0x51')]))return!![];}}return![];}for(let i=0x0;i<this[_0x59c5('0x5c')][_0x59c5('0x2c')];i++){if(this[_0x59c5('0x61')]){let endNode=this[_0x59c5('0x5c')][_0x59c5('0x5d')](i);if(endNode[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)!=null&&endNode['immediateSiblings'][_0x59c5('0x5d')](0x0)[_0x59c5('0x32')]!=this){endNode=endNode[_0x59c5('0x34')][_0x59c5('0x5d')](0x0);}else if(endNode[_0x59c5('0x34')][_0x59c5('0x5d')](0x1)!=null&&endNode[_0x59c5('0x34')][_0x59c5('0x5d')](0x1)['parent']!=this){endNode=endNode['immediateSiblings'][_0x59c5('0x5d')](0x1);}if(!this[_0x59c5('0x5c')][_0x59c5('0x5d')](i)[_0x59c5('0x5e')](endNode,NodeLabel[_0x59c5('0x51')]))return![];}else{if(!this[_0x59c5('0x5c')][_0x59c5('0x5d')](i)[_0x59c5('0x5e')](null,NodeLabel[_0x59c5('0x51')]))return![];}}return!![];}[_0x59c5('0x64')](){for(let i=0x0;i<this[_0x59c5('0x5c')][_0x59c5('0x2c')];i++){if(this[_0x59c5('0x5c')][_0x59c5('0x5d')](i)[_0x59c5('0x5e')](null,NodeLabel[_0x59c5('0x48')]))return![];}return!![];}[_0x59c5('0x7a')](){if(this[_0x59c5('0x49')]==NodeType[_0x59c5('0x50')]){let countFullEndMost=0x0;for(let i=0x0;i<this[_0x59c5('0x5c')][_0x59c5('0x2c')];i++){if(this[_0x59c5('0x5c')][_0x59c5('0x5d')](i)['checkLabelDirected'](null,NodeLabel[_0x59c5('0x48')]))countFullEndMost++;}return countFullEndMost==this['endMostChildren'][_0x59c5('0x2c')]&&this[_0x59c5('0x79')]();}return this[_0x59c5('0x4c')]==this['childCount'];}[_0x59c5('0x7b')](){if(this[_0x59c5('0x5c')][_0x59c5('0x2c')]==0x2)return this[_0x59c5('0x5c')]['get'](0x0)['immediateSiblings'][_0x59c5('0x5d')](0x0)==this['endMostChildren'][_0x59c5('0x5d')](0x1);return![];}[_0x59c5('0x56')](index){if(index==0x0)return this['partialChildrenList'];if(index==0x1)return this[_0x59c5('0x6e')][_0x59c5('0x6f')];return null;}['getFirstFullChild'](){return this[_0x59c5('0x6b')];}[_0x59c5('0x55')](){let child=this[_0x59c5('0x74')];do{if(child[_0x59c5('0x47')]==NodeLabel[_0x59c5('0x5f')])break;child=child['right'];}while(child!=this[_0x59c5('0x74')]);return child;}[_0x59c5('0x7c')](node){this[_0x59c5('0x4c')]++;node['fullLeft']=null;node[_0x59c5('0x6d')]=null;if(this['fullChildrenList']==null){this[_0x59c5('0x6b')]=node;this[_0x59c5('0x6b')][_0x59c5('0x6c')]=this[_0x59c5('0x6b')];this[_0x59c5('0x6b')]['fullRight']=this[_0x59c5('0x6b')];}else{node[_0x59c5('0x6c')]=this['fullChildrenList'][_0x59c5('0x6c')];node[_0x59c5('0x6c')]['fullRight']=node;this[_0x59c5('0x6b')][_0x59c5('0x6c')]=node;node[_0x59c5('0x6d')]=this['fullChildrenList'];this[_0x59c5('0x6b')]=node;}}[_0x59c5('0x7d')](node){this['fullChildren']--;if(node[_0x59c5('0x6d')]==node){node[_0x59c5('0x6d')]=null;node['fullLeft']=null;this[_0x59c5('0x6b')]=null;}else{if(node==this[_0x59c5('0x6b')]){this[_0x59c5('0x6b')]=this['fullChildrenList'][_0x59c5('0x6d')];}node[_0x59c5('0x6d')]['fullLeft']=node[_0x59c5('0x6c')];node['fullLeft'][_0x59c5('0x6d')]=node['fullRight'];node[_0x59c5('0x6c')]=null;node[_0x59c5('0x6d')]=null;}}[_0x59c5('0x7e')](node){this['partialChildren']++;node[_0x59c5('0x72')]=null;node[_0x59c5('0x6f')]=null;if(this['partialChildrenList']==null){this['partialChildrenList']=node;this[_0x59c5('0x6e')]['partialLeft']=this[_0x59c5('0x6e')];this[_0x59c5('0x6e')][_0x59c5('0x6f')]=this[_0x59c5('0x6e')];}else{node[_0x59c5('0x72')]=this[_0x59c5('0x6e')][_0x59c5('0x72')];node[_0x59c5('0x72')][_0x59c5('0x6f')]=node;this[_0x59c5('0x6e')][_0x59c5('0x72')]=node;node[_0x59c5('0x6f')]=this[_0x59c5('0x6e')];this[_0x59c5('0x6e')]=node;}}[_0x59c5('0x7f')](node){this[_0x59c5('0x4b')]--;if(node[_0x59c5('0x6f')]==node){node['partialRight']=null;node[_0x59c5('0x72')]=null;this[_0x59c5('0x6e')]=null;}else{if(node==this[_0x59c5('0x6e')]){this[_0x59c5('0x6e')]=this[_0x59c5('0x6e')]['partialRight'];}node[_0x59c5('0x6f')][_0x59c5('0x72')]=node['partialLeft'];node[_0x59c5('0x72')][_0x59c5('0x6f')]=node[_0x59c5('0x6f')];node[_0x59c5('0x72')]=null;node[_0x59c5('0x6f')]=null;}}[_0x59c5('0x80')](node){node[_0x59c5('0x32')]=this;this['childCount']++;node['left']=null;node[_0x59c5('0x71')]=null;node[_0x59c5('0x34')]=null;if(this[_0x59c5('0x74')]==null){this['circularLink']=node;this[_0x59c5('0x74')][_0x59c5('0x6a')]=this[_0x59c5('0x74')];this[_0x59c5('0x74')][_0x59c5('0x71')]=this[_0x59c5('0x74')];}else{node[_0x59c5('0x6a')]=this[_0x59c5('0x74')]['left'];node[_0x59c5('0x6a')][_0x59c5('0x71')]=node;this['circularLink'][_0x59c5('0x6a')]=node;node[_0x59c5('0x71')]=this[_0x59c5('0x74')];this[_0x59c5('0x74')]=node;}}[_0x59c5('0x81')](node){node['parent']=null;this[_0x59c5('0x73')]--;if(node==this['circularLink']){if(node[_0x59c5('0x71')]==node){node[_0x59c5('0x71')]=null;node[_0x59c5('0x6a')]=null;this[_0x59c5('0x74')]=null;}else{this[_0x59c5('0x74')]=this[_0x59c5('0x74')][_0x59c5('0x71')];node[_0x59c5('0x71')][_0x59c5('0x6a')]=node[_0x59c5('0x6a')];node[_0x59c5('0x6a')]['right']=node['right'];node['left']=null;node[_0x59c5('0x71')]=null;}}else{node[_0x59c5('0x71')][_0x59c5('0x6a')]=node['left'];node[_0x59c5('0x6a')]['right']=node[_0x59c5('0x71')];node['left']=null;node[_0x59c5('0x71')]=null;}}[_0x59c5('0x82')](node){node['parent']=this;let sibling=null;if(node['immediateSiblings']!=null){if(node['immediateSiblings'][_0x59c5('0x5d')](0x0)!=null&&this[_0x59c5('0x5c')][_0x59c5('0x83')](node[_0x59c5('0x34')][_0x59c5('0x5d')](0x0))){sibling=node[_0x59c5('0x34')][_0x59c5('0x5d')](0x0);}else if(node[_0x59c5('0x34')][_0x59c5('0x5d')](0x1)!=null&&this['endMostChildren'][_0x59c5('0x83')](node['immediateSiblings'][_0x59c5('0x5d')](0x1))){sibling=node[_0x59c5('0x34')][_0x59c5('0x5d')](0x1);}}else{node[_0x59c5('0x34')]=new PQTree['NodePair']();}if(sibling==null){for(let i=0x0;i<this[_0x59c5('0x5c')][_0x59c5('0x2c')];i++){if(this[_0x59c5('0x5c')]['get'](i)['label']==node[_0x59c5('0x47')]){sibling=this['endMostChildren'][_0x59c5('0x5d')](i);break;}if(this[_0x59c5('0x5c')][_0x59c5('0x5d')](i)['label']==NodeLabel[_0x59c5('0x48')]&&node[_0x59c5('0x47')]==NodeLabel[_0x59c5('0x51')]){sibling=this[_0x59c5('0x5c')]['get'](i);break;}if(this[_0x59c5('0x5c')][_0x59c5('0x5d')](i)['label']==NodeLabel['partial']&&node[_0x59c5('0x47')]==NodeLabel[_0x59c5('0x48')]){sibling=this[_0x59c5('0x5c')][_0x59c5('0x5d')](i);break;}}}if(sibling==null&&this[_0x59c5('0x5c')][_0x59c5('0x2c')]>0x0){sibling=this[_0x59c5('0x5c')][_0x59c5('0x5d')](0x0);}if(sibling!=null){if(this[_0x59c5('0x5c')][_0x59c5('0x2c')]>0x1){this[_0x59c5('0x5c')][_0x59c5('0x9')](sibling);}this['endMostChildren'][_0x59c5('0x60')](node);sibling[_0x59c5('0x34')][_0x59c5('0x60')](node);node[_0x59c5('0x34')][_0x59c5('0x60')](sibling);}else{this['endMostChildren'][_0x59c5('0x60')](node);}}[_0x59c5('0x84')](node){node[_0x59c5('0x32')]=null;if(node[_0x59c5('0x34')]['get'](0x1)==null){this[_0x59c5('0x5c')][_0x59c5('0x9')](node);if(node[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)!=null){if(!this[_0x59c5('0x5c')][_0x59c5('0x83')](node[_0x59c5('0x34')]['get'](0x0))){this[_0x59c5('0x5c')][_0x59c5('0x60')](node[_0x59c5('0x34')][_0x59c5('0x5d')](0x0));}node[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)['immediateSiblings'][_0x59c5('0x9')](node);node[_0x59c5('0x34')]=null;}}else{node[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)[_0x59c5('0x34')]['remove'](node);node['immediateSiblings'][_0x59c5('0x5d')](0x1)[_0x59c5('0x34')][_0x59c5('0x9')](node);node[_0x59c5('0x34')]=null;}}[_0x59c5('0x85')](node){node[_0x59c5('0x32')]=this;if(this[_0x59c5('0x74')]==null){this[_0x59c5('0x74')]=node;}if(node[_0x59c5('0x34')]!=null&&node[_0x59c5('0x34')][_0x59c5('0x2c')]==0x2){if(!(node['immediateSiblings'][_0x59c5('0x5d')](0x0)['parent']==this&&node['immediateSiblings']['get'](0x1)[_0x59c5('0x32')]==this)){this['endMostChildren'][_0x59c5('0x60')](node);}}}[_0x59c5('0x4e')](node,updateTree){if(typeof updateTree==_0x59c5('0x86'))updateTree=!![];if(node[_0x59c5('0x47')]==NodeLabel[_0x59c5('0x48')])this['addToFullList'](node);else if(node[_0x59c5('0x47')]==NodeLabel[_0x59c5('0x51')])this[_0x59c5('0x7e')](node);if(!updateTree)return;if(this[_0x59c5('0x49')]==NodeType[_0x59c5('0x4a')])this[_0x59c5('0x80')](node);else if(this['type']==NodeType[_0x59c5('0x50')]&&!this['pseudoRoot'])this['addChildToQNode'](node);else if(this['type']==NodeType[_0x59c5('0x50')]&&this[_0x59c5('0x61')])this[_0x59c5('0x85')](node);}[_0x59c5('0x52')](node,updateTree){if(typeof updateTree==_0x59c5('0x86'))updateTree=!![];if(node['label']==NodeLabel[_0x59c5('0x48')])this[_0x59c5('0x7d')](node);else if(node[_0x59c5('0x47')]==NodeLabel[_0x59c5('0x51')])this['removeFromPartialList'](node);if(!updateTree)return;if(this[_0x59c5('0x49')]==NodeType[_0x59c5('0x4a')])this['removeChildFromPNode'](node);else if(this['type']==NodeType['qNode'])this[_0x59c5('0x84')](node);}[_0x59c5('0x53')](node,newNode){if(this[_0x59c5('0x49')]==NodeType[_0x59c5('0x50')]){newNode[_0x59c5('0x34')]=node[_0x59c5('0x34')];if(node[_0x59c5('0x34')]['get'](0x0)!=null)node[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)[_0x59c5('0x34')][_0x59c5('0x87')](node,newNode);if(node[_0x59c5('0x34')][_0x59c5('0x5d')](0x1)!=null)node[_0x59c5('0x34')][_0x59c5('0x5d')](0x1)[_0x59c5('0x34')][_0x59c5('0x87')](node,newNode);if(this['endMostChildren'][_0x59c5('0x9')](node))this[_0x59c5('0x5c')]['add'](newNode);}else{newNode[_0x59c5('0x6a')]=node[_0x59c5('0x6a')];if(node['left']!=null)node[_0x59c5('0x6a')][_0x59c5('0x71')]=newNode;newNode[_0x59c5('0x71')]=node[_0x59c5('0x71')];if(node[_0x59c5('0x71')]!=null)node[_0x59c5('0x71')]['left']=newNode;}newNode[_0x59c5('0x32')]=this;this[_0x59c5('0x52')](node,![]);this[_0x59c5('0x4e')](newNode,![]);if(this[_0x59c5('0x74')]==node)this[_0x59c5('0x74')]=newNode;node[_0x59c5('0x32')]=null;node['immediateSiblings']=null;node[_0x59c5('0x6a')]=null;node[_0x59c5('0x71')]=null;node[_0x59c5('0x6c')]=null;node[_0x59c5('0x6d')]=null;node['partialLeft']=null;node[_0x59c5('0x6f')]=null;}['getPertinentNeighbor'](si){let node=this[_0x59c5('0x34')]['get'](si);if(node==null)return null;if(node[_0x59c5('0x5e')](this,NodeLabel[_0x59c5('0x48')])||node[_0x59c5('0x5e')](this,NodeLabel[_0x59c5('0x51')]))return node;return null;}[_0x59c5('0x88')](si){let node=this[_0x59c5('0x34')][_0x59c5('0x5d')](si);if(node==null)return null;if(node['checkLabelDirected'](this,NodeLabel[_0x59c5('0x5f')]))return node;return null;}[_0x59c5('0x89')](nodeLabel){let child=this['endMostChildren'][_0x59c5('0x5d')](0x0);if(child[_0x59c5('0x5e')](null,nodeLabel))return child;if(this[_0x59c5('0x5c')]['count']>0x1){child=this[_0x59c5('0x5c')][_0x59c5('0x5d')](0x1);if(child[_0x59c5('0x5e')](null,nodeLabel))return child;}return null;}['absorbPartialChild'](qNode){if(qNode['type']!=NodeType[_0x59c5('0x50')])return;if(qNode[_0x59c5('0x47')]!=NodeLabel[_0x59c5('0x51')])return;let fullConnectChild=qNode[_0x59c5('0x8a')](0x0)||qNode['getPertinentNeighbor'](0x1);let emptyConnectChild=qNode[_0x59c5('0x88')](0x0)||qNode['getEmptyNeighbor'](0x1);let fullJoinChild=qNode[_0x59c5('0x89')](NodeLabel[_0x59c5('0x48')]);let emptyJoinChild=qNode['getEndMostChild'](NodeLabel['empty']);if(fullConnectChild==null){this[_0x59c5('0x5c')][_0x59c5('0x9')](qNode);fullJoinChild[_0x59c5('0x32')]=this;this[_0x59c5('0x5c')][_0x59c5('0x60')](fullJoinChild);}else{fullJoinChild['immediateSiblings'][_0x59c5('0x60')](fullConnectChild);fullConnectChild[_0x59c5('0x34')][_0x59c5('0x87')](qNode,fullJoinChild);}if(emptyConnectChild==null){this[_0x59c5('0x5c')]['remove'](qNode);emptyJoinChild[_0x59c5('0x32')]=this;this[_0x59c5('0x5c')]['add'](emptyJoinChild);}else{emptyJoinChild[_0x59c5('0x34')][_0x59c5('0x60')](emptyConnectChild);emptyConnectChild[_0x59c5('0x34')][_0x59c5('0x87')](qNode,emptyJoinChild);}if(qNode[_0x59c5('0x4c')]>0x0){let node=qNode[_0x59c5('0x6b')];do{let nextFull=node['fullRight'];qNode[_0x59c5('0x52')](node,![]);this[_0x59c5('0x4e')](node,![]);node[_0x59c5('0x32')]=this;if(nextFull==node)break;node=nextFull;}while(qNode[_0x59c5('0x6b')]!=null);}this[_0x59c5('0x52')](qNode,![]);qNode[_0x59c5('0x59')]();}['replaceFullChildrenWith'](node){if(this[_0x59c5('0x4c')]==0x0)return;let newSiblings=[];let fullLeavesStart=this[_0x59c5('0x8b')]();if(fullLeavesStart!=null)newSiblings[_0x59c5('0x16')](fullLeavesStart);let fullLeavesEnd=this[_0x59c5('0x8c')]();if(fullLeavesEnd!=null)newSiblings['push'](fullLeavesEnd);if(newSiblings['length']==0x0){this[_0x59c5('0x5c')]=new PQTree[(_0x59c5('0x68'))]();this['endMostChildren'][_0x59c5('0x60')](node);}else if(newSiblings[_0x59c5('0x19')]==0x1){for(let i=0x0;i<this[_0x59c5('0x5c')][_0x59c5('0x2c')];i++){let endNode=null;if(this['pseudoRoot']){endNode=this[_0x59c5('0x5c')]['get'](i);let siblings=endNode[_0x59c5('0x34')];if(siblings[_0x59c5('0x5d')](0x0)!=null&&siblings[_0x59c5('0x5d')](0x0)[_0x59c5('0x32')]!=this)endNode=siblings['get'](0x0);else if(siblings['get'](0x1)!=null&&siblings[_0x59c5('0x5d')](0x1)['parent']!=this)endNode=siblings[_0x59c5('0x5d')](0x1);}if(this['endMostChildren']['get'](i)['checkLabelDirected'](endNode,NodeLabel['full'])){this['endMostChildren'][_0x59c5('0x8d')](i);break;}}this['endMostChildren'][_0x59c5('0x60')](node);}node[_0x59c5('0x34')]=newSiblings[_0x59c5('0x19')]>0x0?new PQTree['NodePair']():null;for(let i=0x0;i<newSiblings[_0x59c5('0x19')];i++){let current=newSiblings[i];let siblings=current['immediateSiblings'];for(let j=0x0;j<=0x1;++j){if(siblings[_0x59c5('0x5d')](j)!=null&&siblings['get'](j)[_0x59c5('0x5e')](current,NodeLabel[_0x59c5('0x48')])){siblings['replace'](siblings[_0x59c5('0x5d')](j),node);node[_0x59c5('0x34')][_0x59c5('0x60')](current);break;}}}node['parent']=this;while(this[_0x59c5('0x6b')]!=null){let exFull=this[_0x59c5('0x6b')];this[_0x59c5('0x52')](exFull,![]);exFull[_0x59c5('0x70')]=NodeLabel[_0x59c5('0x5f')];}}[_0x59c5('0x8e')](theChild){this[_0x59c5('0x74')]=theChild[_0x59c5('0x74')];this[_0x59c5('0x6b')]=theChild[_0x59c5('0x6b')];this[_0x59c5('0x6e')]=theChild[_0x59c5('0x6e')];this[_0x59c5('0x5c')]=theChild[_0x59c5('0x5c')];this[_0x59c5('0x73')]=theChild[_0x59c5('0x73')];this[_0x59c5('0x4c')]=theChild[_0x59c5('0x4c')];this[_0x59c5('0x4b')]=theChild['partialChildren'];this['pertinentChildCount']=theChild['pertinentChildCount'];this[_0x59c5('0x2e')]=theChild[_0x59c5('0x2e')];this[_0x59c5('0x8f')]=theChild[_0x59c5('0x49')];this['data']=theChild[_0x59c5('0x67')];this['destroyed']=theChild['destroyed'];this[_0x59c5('0x61')]=theChild[_0x59c5('0x61')];if(this[_0x59c5('0x49')]==NodeType[_0x59c5('0x50')]){for(let i=0x0;i<this[_0x59c5('0x5c')][_0x59c5('0x2c')];i++)this[_0x59c5('0x5c')][_0x59c5('0x5d')](i)['parent']=this;if(this[_0x59c5('0x4c')]>0x0){let currentNode=this[_0x59c5('0x6b')];do{let nextNode=currentNode[_0x59c5('0x6d')];currentNode[_0x59c5('0x32')]=this;if(nextNode!=currentNode)currentNode=nextNode;else break;}while(currentNode!=this[_0x59c5('0x6b')]);}}theChild[_0x59c5('0x59')]();}[_0x59c5('0x4d')](newParent){if(this[_0x59c5('0x4c')]>0x0){if(this[_0x59c5('0x49')]==NodeType['pNode']){let currentNode=this[_0x59c5('0x6b')];do{let nextNode=currentNode[_0x59c5('0x6d')];this[_0x59c5('0x52')](currentNode);newParent[_0x59c5('0x4e')](currentNode);currentNode=nextNode;}while(this['fullChildrenList']!=null);}if(this[_0x59c5('0x49')]==NodeType['qNode']){let currentNode=this['fullChildrenList'];do{let nextNode=currentNode[_0x59c5('0x6d')];this[_0x59c5('0x52')](currentNode,![]);newParent[_0x59c5('0x4e')](currentNode,![]);currentNode[_0x59c5('0x32')]=newParent;if(nextNode!=currentNode)currentNode=nextNode;else break;}while(this[_0x59c5('0x6b')]!=null);}}}[_0x59c5('0x5e')](node,nodeLabel){if(this[_0x59c5('0x49')]!=NodeType[_0x59c5('0x78')])return this['label']==nodeLabel;let sibling=this['immediateSiblings'][_0x59c5('0x77')](node);return sibling!=null&&sibling[_0x59c5('0x5e')](this,nodeLabel);}[_0x59c5('0x46')](){if(this[_0x59c5('0x49')]==NodeType['pNode'])return this[_0x59c5('0x73')]>0x0;if(this[_0x59c5('0x49')]==NodeType['qNode'])return this[_0x59c5('0x5c')][_0x59c5('0x2c')]>0x0;return![];}[_0x59c5('0x90')](){return[this[_0x59c5('0x5c')][_0x59c5('0x5d')](0x0)[_0x59c5('0x91')](),this[_0x59c5('0x5c')]['get'](0x1)[_0x59c5('0x91')]()];}['getAllNodes'](list,nodeType){if(this[_0x59c5('0x49')]==nodeType)list[_0x59c5('0x16')](this);if(this[_0x59c5('0x49')]==NodeType['pNode']){if(this[_0x59c5('0x46')]()){let child=this[_0x59c5('0x74')];do{child[_0x59c5('0x92')](list,nodeType);child=child[_0x59c5('0x71')];}while(child!=this[_0x59c5('0x74')]);}}if(this[_0x59c5('0x49')]==NodeType[_0x59c5('0x50')]){for(let child of this[_0x59c5('0x93')]())child[_0x59c5('0x92')](list,nodeType);}}[_0x59c5('0x93')](){let list=[];if(this[_0x59c5('0x46')]()){let previousNode=null;let child=this[_0x59c5('0x5c')][_0x59c5('0x5d')](0x0);let lastNode=null;if(this[_0x59c5('0x61')]){if(child[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)!=null&&child[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)[_0x59c5('0x32')]!=this){previousNode=child[_0x59c5('0x34')][_0x59c5('0x5d')](0x0);}else if(child['immediateSiblings'][_0x59c5('0x5d')](0x1)!=null&&child['immediateSiblings'][_0x59c5('0x5d')](0x1)[_0x59c5('0x32')]!=this){previousNode=child[_0x59c5('0x34')]['get'](0x1);}if(this[_0x59c5('0x5c')][_0x59c5('0x2c')]>0x1){let tempNode=this[_0x59c5('0x5c')][_0x59c5('0x5d')](0x1);if(tempNode[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)!=null&&tempNode['immediateSiblings'][_0x59c5('0x5d')](0x0)[_0x59c5('0x32')]!=this){lastNode=tempNode[_0x59c5('0x34')]['get'](0x0);}else if(tempNode['immediateSiblings'][_0x59c5('0x5d')](0x1)!=null&&tempNode[_0x59c5('0x34')][_0x59c5('0x5d')](0x1)[_0x59c5('0x32')]!=this){lastNode=tempNode[_0x59c5('0x34')][_0x59c5('0x5d')](0x1);}}}do{list[_0x59c5('0x16')](child);let nextNode=child[_0x59c5('0x34')][_0x59c5('0x77')](previousNode);previousNode=child;child=nextNode;}while(child!=lastNode);}return list;}[_0x59c5('0x91')](){if(this[_0x59c5('0x57')]==0x0)return this;if(this[_0x59c5('0x49')]==NodeType[_0x59c5('0x4a')])return this[_0x59c5('0x74')][_0x59c5('0x91')]();if(this[_0x59c5('0x49')]==NodeType[_0x59c5('0x50')])return this[_0x59c5('0x5c')][_0x59c5('0x5d')](0x0);return null;}[_0x59c5('0x66')](node){if(this[_0x59c5('0x34')][_0x59c5('0x83')](node)&&node[_0x59c5('0x34')][_0x59c5('0x83')](this))return!![];if(this[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)!=null&&this[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)[_0x59c5('0x49')]==NodeType[_0x59c5('0x78')]&&this[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)['immediateSiblings']['getOther'](this)==node)return!![];if(this[_0x59c5('0x34')]['get'](0x1)!=null&&this[_0x59c5('0x34')][_0x59c5('0x5d')](0x1)['Type']==NodeType[_0x59c5('0x78')]&&this[_0x59c5('0x34')][_0x59c5('0x5d')](0x1)[_0x59c5('0x34')]['getOther'](this)==node)return!![];return![];}[_0x59c5('0x8b')](){let fullChild=this[_0x59c5('0x6b')];let prevFullChild=null;let firstFullChild=null;do{if(fullChild['immediateSiblings'][_0x59c5('0x5d')](0x0)==null||fullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)!=null&&!fullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)[_0x59c5('0x5e')](fullChild,NodeLabel[_0x59c5('0x48')])){prevFullChild=fullChild['immediateSiblings'][_0x59c5('0x5d')](0x0);firstFullChild=fullChild;break;}if(fullChild[_0x59c5('0x34')]['get'](0x1)==null||fullChild[_0x59c5('0x34')]['get'](0x1)!=null&&!fullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x1)[_0x59c5('0x5e')](fullChild,NodeLabel['full'])){prevFullChild=fullChild['immediateSiblings'][_0x59c5('0x5d')](0x1);firstFullChild=fullChild;break;}fullChild=fullChild['fullRight'];}while(fullChild!=this[_0x59c5('0x6b')]);if(prevFullChild!=null&&prevFullChild[_0x59c5('0x49')]==NodeType[_0x59c5('0x78')]){let nextNode=prevFullChild;let prevNode=firstFullChild;while(nextNode!=null&&nextNode[_0x59c5('0x49')]==NodeType[_0x59c5('0x78')]){let tempNode=nextNode;nextNode=nextNode[_0x59c5('0x34')]['getOther'](prevNode);prevNode=tempNode;}prevFullChild=nextNode;}return prevFullChild;}[_0x59c5('0x8c')](){let prevFullChild=this[_0x59c5('0x8b')]();let nextFullChild=null;let fullChild=null;let tempFullChild=null;if(prevFullChild!=null){if(prevFullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)!=null&&prevFullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)[_0x59c5('0x5e')](prevFullChild,NodeLabel[_0x59c5('0x48')])){fullChild=prevFullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x0);}else if(prevFullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x1)!=null&&prevFullChild['immediateSiblings'][_0x59c5('0x5d')](0x1)['checkLabelDirected'](prevFullChild,NodeLabel[_0x59c5('0x48')])){fullChild=prevFullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x1);}nextFullChild=fullChild;let aPrevFullChild=prevFullChild;do{tempFullChild=nextFullChild;nextFullChild=nextFullChild[_0x59c5('0x34')][_0x59c5('0x77')](aPrevFullChild);aPrevFullChild=tempFullChild;}while(nextFullChild!=null&&(nextFullChild[_0x59c5('0x5e')](aPrevFullChild,NodeLabel[_0x59c5('0x48')])||nextFullChild[_0x59c5('0x49')]==NodeType[_0x59c5('0x78')]));}else{fullChild=this[_0x59c5('0x6b')];do{if(fullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)!=null&&!fullChild[_0x59c5('0x34')]['get'](0x0)['checkLabelDirected'](fullChild,NodeLabel[_0x59c5('0x48')])){nextFullChild=fullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x0);prevFullChild=fullChild;break;}if(fullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x1)!=null&&!fullChild['immediateSiblings']['get'](0x1)['checkLabelDirected'](fullChild,NodeLabel[_0x59c5('0x48')])){nextFullChild=fullChild[_0x59c5('0x34')]['get'](0x1);prevFullChild=fullChild;break;}fullChild=fullChild[_0x59c5('0x6d')];}while(fullChild!=this[_0x59c5('0x6b')]);if(nextFullChild!=null&&nextFullChild[_0x59c5('0x49')]==NodeType[_0x59c5('0x78')]){do{tempFullChild=nextFullChild;nextFullChild=nextFullChild[_0x59c5('0x34')][_0x59c5('0x77')](prevFullChild);prevFullChild=tempFullChild;}while(nextFullChild!=null&&nextFullChild[_0x59c5('0x49')]==NodeType[_0x59c5('0x78')]);}}return nextFullChild;}['getFullLeaves'](){let fullLeaves=[];let subLeaves=null;if(this[_0x59c5('0x49')]==NodeType[_0x59c5('0x50')]){if(this[_0x59c5('0x46')]()){let firstFullChild=null;let fullChild=this[_0x59c5('0x6b')];let prevFullChild=null;do{if(fullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)==null||fullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)!=null&&!fullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x0)[_0x59c5('0x5e')](fullChild,NodeLabel[_0x59c5('0x48')])){prevFullChild=fullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x0);firstFullChild=fullChild;break;}if(fullChild['immediateSiblings'][_0x59c5('0x5d')](0x1)==null||fullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x1)!=null&&!fullChild['immediateSiblings'][_0x59c5('0x5d')](0x1)[_0x59c5('0x5e')](fullChild,NodeLabel[_0x59c5('0x48')])){prevFullChild=fullChild[_0x59c5('0x34')][_0x59c5('0x5d')](0x1);firstFullChild=fullChild;break;}fullChild=fullChild['fullRight'];}while(fullChild!=this[_0x59c5('0x6b')]);if(prevFullChild!=null&&prevFullChild['type']==NodeType[_0x59c5('0x78')]){let directedNodes=[];let nextNode=prevFullChild;let prevNode=firstFullChild;while(nextNode!=null&&nextNode[_0x59c5('0x49')]==NodeType['directionIndicator']){if(prevNode==nextNode[_0x59c5('0x94')])nextNode[_0x59c5('0x69')]=![];else if(nextNode[_0x59c5('0x34')][_0x59c5('0x77')](prevNode)==nextNode['direction'])nextNode['readInReverseDirection']=!![];directedNodes[_0x59c5('0x16')](nextNode);let tempNode=nextNode;nextNode=nextNode['immediateSiblings'][_0x59c5('0x77')](prevNode);prevNode=tempNode;}for(let i=directedNodes[_0x59c5('0x19')];i>0x0;i--){fullLeaves[_0x59c5('0x16')](directedNodes[i-0x1]);}}fullChild=firstFullChild;do{if(fullChild[_0x59c5('0x49')]==NodeType[_0x59c5('0x78')]){if(prevFullChild==fullChild[_0x59c5('0x94')])fullChild[_0x59c5('0x69')]=!![];else if(fullChild[_0x59c5('0x34')][_0x59c5('0x77')](prevFullChild)==fullChild[_0x59c5('0x94')])fullChild[_0x59c5('0x69')]=![];}subLeaves=fullChild[_0x59c5('0x95')]();fullLeaves[_0x59c5('0x16')](...subLeaves);let tempFullChild=fullChild;fullChild=fullChild[_0x59c5('0x34')][_0x59c5('0x77')](prevFullChild);prevFullChild=tempFullChild;}while(fullChild!=null&&(fullChild[_0x59c5('0x5e')](prevFullChild,NodeLabel[_0x59c5('0x48')])||fullChild[_0x59c5('0x49')]==NodeType[_0x59c5('0x78')]));}}else{if(this[_0x59c5('0x46')]()){let fullChild=this[_0x59c5('0x6b')];do{subLeaves=fullChild[_0x59c5('0x95')]();fullLeaves[_0x59c5('0x16')](...subLeaves);fullChild=fullChild['fullRight'];}while(fullChild!=this[_0x59c5('0x6b')]);}else{fullLeaves['push'](this);}}return fullLeaves;}get[_0x59c5('0x49')](){return this['_type'];}set[_0x59c5('0x49')](value){if(this[_0x59c5('0x8f')]!=value){if(value==NodeType['qNode']){this['endMostChildren']=new PQTree['NodePair']();}if(value==NodeType[_0x59c5('0x4a')]){let endMost1=this[_0x59c5('0x5c')][_0x59c5('0x5d')](0x0);let endMost2=this[_0x59c5('0x5c')][_0x59c5('0x5d')](0x1);this['_type']=NodeType['pNode'];this[_0x59c5('0x74')]=endMost1;this[_0x59c5('0x73')]=0x2;endMost1[_0x59c5('0x34')]=null;endMost1[_0x59c5('0x6a')]=endMost2;endMost1[_0x59c5('0x71')]=endMost2;endMost2[_0x59c5('0x34')]=null;endMost2[_0x59c5('0x6a')]=endMost1;endMost2['right']=endMost1;this['endMostChildren']=null;}this['_type']=value;}}get[_0x59c5('0x96')](){return this[_0x59c5('0x71')];}get[_0x59c5('0x97')](){return this[_0x59c5('0x74')];}get['children'](){return this[_0x59c5('0x73')];}get[_0x59c5('0x54')](){return this[_0x59c5('0x73')]-this[_0x59c5('0x4c')]-this[_0x59c5('0x4b')];}get[_0x59c5('0x47')](){return this['_label'];}set[_0x59c5('0x47')](value){if(this[_0x59c5('0x70')]!=value){if(this['parent']!=null)this[_0x59c5('0x32')]['removeChild'](this,![]);this[_0x59c5('0x70')]=value;if(this[_0x59c5('0x32')]!=null)this['parent'][_0x59c5('0x4e')](this,![]);}}get[_0x59c5('0x38')](){return!this['blocked']&&!this[_0x59c5('0x2d')];}get[_0x59c5('0x94')](){return this[_0x59c5('0x34')]['direction'];}set[_0x59c5('0x94')](value){if(this[_0x59c5('0x34')][_0x59c5('0x83')](value))this['immediateSiblings']['direction']=value;}};PQTree[_0x59c5('0x68')]=class{constructor(directionIndex){this[_0x59c5('0x98')]=[];this['trackDirection']=![];if(typeof directionIndex!=_0x59c5('0x86')){this[_0x59c5('0x99')]=!![];this['directedTowardsIndex']=directionIndex;}}[_0x59c5('0x60')](node){if(this[_0x59c5('0x98')]['length']<0x2)this[_0x59c5('0x98')][_0x59c5('0x16')](node);if(this[_0x59c5('0x99')]&&this[_0x59c5('0x9a')]==-0x1)this['directedTowardsIndex']=this['indexOf'](node);}['remove'](node){if(this[_0x59c5('0x99')]){if(this[_0x59c5('0x9a')]==0x1&&this[_0x59c5('0x9b')](node)==0x0)this['directedTowardsIndex']=0x0;else if(this[_0x59c5('0x9b')](node)==this[_0x59c5('0x9a')])this['directedTowardsIndex']=-0x1;}let index=this[_0x59c5('0x98')]['indexOf'](node);if(index>-0x1){this['nodes'][_0x59c5('0x9c')](index,0x1);return!![];}else{return![];}}[_0x59c5('0x8d')](index){if(index>=this[_0x59c5('0x98')][_0x59c5('0x19')])return![];this['nodes'][_0x59c5('0x9c')](index,0x1);return!![];}[_0x59c5('0x77')](node){if(this[_0x59c5('0x98')][_0x59c5('0x19')]==0x1){if(node==null)return this[_0x59c5('0x98')][0x0];if(node==this[_0x59c5('0x98')][0x0])return null;}if(this['nodes'][_0x59c5('0x19')]==0x2){if(node==this['nodes'][0x0])return this['nodes'][0x1];if(node==this['nodes'][0x1])return this[_0x59c5('0x98')][0x0];}return null;}[_0x59c5('0x87')](oldNode,newNode){for(let i=0x0;i<this[_0x59c5('0x98')][_0x59c5('0x19')];++i){if(this[_0x59c5('0x98')][i]==oldNode){this[_0x59c5('0x98')][i]=newNode;break;}}}[_0x59c5('0x9b')](node){return this[_0x59c5('0x98')][_0x59c5('0x9b')](node);}[_0x59c5('0x83')](node){return this[_0x59c5('0x98')][_0x59c5('0xd')](node);}[_0x59c5('0x5d')](index){if(index<this[_0x59c5('0x98')][_0x59c5('0x19')])return this[_0x59c5('0x98')][index];return null;}get['count'](){return this[_0x59c5('0x98')][_0x59c5('0x19')];}get['direction'](){if(this[_0x59c5('0x9a')]==-0x1)return null;return this['get'](this[_0x59c5('0x9a')]);}set[_0x59c5('0x94')](value){if(value==null)this[_0x59c5('0x9a')]=-0x1;else if(this['contains'](value))this[_0x59c5('0x9a')]=this[_0x59c5('0x9b')](value);else this['directedTowardsIndex']=-0x1;}};const NodeType={'pNode':0x0,'qNode':0x1,'directionIndicator':0x2};const NodeLabel={'empty':0x0,'partial':0x1,'full':0x2};class Face{constructor(prototype){if(prototype==null)this[_0x59c5('0x0')]=[];else this['edges']=prototype[_0x59c5('0x0')][_0x59c5('0x9d')]();}[_0x59c5('0xc')](v){for(let e of this[_0x59c5('0x0')])if(e[_0x59c5('0xc')](v))return!![];return![];}[_0x59c5('0x1c')](face){for(let e1 of this['edges'])for(let e2 of face[_0x59c5('0x0')])if(e1==e2)return!![];return![];}[_0x59c5('0xe')](face){for(let e1 of this[_0x59c5('0x0')])for(let e2 of face['edges'])if(e1==e2)return e1;return null;}get[_0x59c5('0x17')](){return this[_0x59c5('0x0')][_0x59c5('0x19')];}[_0x59c5('0x9e')](){let vertices=new Set();for(let edge of this[_0x59c5('0x0')]){vertices['add'](edge['origin']);vertices[_0x59c5('0x60')](edge[_0x59c5('0xb')]);}return vertices;}[_0x59c5('0x9f')](){let vertices=[];for(let i=0x0;i<this[_0x59c5('0x0')][_0x59c5('0x19')];i++){let edge1=this[_0x59c5('0x0')][i];let edge2=this[_0x59c5('0x0')][(i+0x1)%this[_0x59c5('0x0')][_0x59c5('0x19')]];let v=edge1[_0x59c5('0x1b')](edge2);vertices[_0x59c5('0x16')](v);}return vertices;}['isCycle'](){for(let i=0x0;i<this[_0x59c5('0x0')][_0x59c5('0x19')];i++){let e1=this[_0x59c5('0x0')][i];let e2=this[_0x59c5('0x0')][(i+0x1)%this[_0x59c5('0x0')][_0x59c5('0x19')]];if(e1[_0x59c5('0xb')]==e2['destination']||e1[_0x59c5('0x8')]==e2[_0x59c5('0x8')])return![];}return!![];}[_0x59c5('0xa0')](vertex){for(let i=0x0;i<this[_0x59c5('0x0')][_0x59c5('0x19')];i++){let e1=this[_0x59c5('0x0')][i];let e2=this[_0x59c5('0x0')][(i+0x1)%this['edges'][_0x59c5('0x19')]];if(e1[_0x59c5('0xc')](vertex)&&e2[_0x59c5('0xc')](vertex))return e2;}return null;}[_0x59c5('0xa1')](edge,replacement){let edgeIndex=this[_0x59c5('0x0')][_0x59c5('0x9b')](edge);if(edgeIndex==-0x1)return;let nextIndex=(edgeIndex+0x1)%this[_0x59c5('0x0')][_0x59c5('0x19')];let reverse=replacement[0x0][_0x59c5('0x1c')](this['edges'][nextIndex]);if(reverse){replacement=replacement[_0x59c5('0x9d')]();replacement[_0x59c5('0xa2')]();}this[_0x59c5('0x0')]['splice'](edgeIndex,0x1,...replacement);}get[_0x59c5('0xa3')](){if(this['_bigAngles']==null)this[_0x59c5('0xa4')]=[];return this[_0x59c5('0xa4')];}}class Embedding{constructor(graph,copy,vertexCopyToOrigMap,edgeCopyToOrigMap){if(graph){this[_0x59c5('0xa5')]=graph;this[_0x59c5('0xa6')]=new Map();}if(copy){this[_0x59c5('0xa5')]=copy[_0x59c5('0xa5')];this['embedding']=copy[_0x59c5('0xa6')];}if(vertexCopyToOrigMap){this[_0x59c5('0xa6')]=new Map();for(const [vertex,edges]of copy[_0x59c5('0xa6')]['entries']()){let originalEdges=[];for(let edge of edges)originalEdges[_0x59c5('0x16')](edgeCopyToOrigMap[_0x59c5('0x5d')](edge));this[_0x59c5('0xa6')][_0x59c5('0xa7')](vertexCopyToOrigMap[_0x59c5('0x5d')](vertex),originalEdges);}}}[_0x59c5('0xa8')](block,blockEmbedding){for(const [vertex,edges]of blockEmbedding[_0x59c5('0xa9')]()){let v=block[_0x59c5('0xaa')]['get'](vertex);this[_0x59c5('0x60')](v);for(let edgeCopy of edges){let e=block[_0x59c5('0xab')][_0x59c5('0x5d')](edgeCopy);this['embedding'][_0x59c5('0x5d')](v)[_0x59c5('0x16')](e);}}}['add'](v){if(!this['embedding']['has'](v))this[_0x59c5('0xa6')][_0x59c5('0xa7')](v,[]);}[_0x59c5('0x9')](v){if(this[_0x59c5('0xa6')][_0x59c5('0xac')](v)){for(let e of this[_0x59c5('0xa6')][_0x59c5('0x5d')](v)){let w=e[_0x59c5('0x10')](v);Utils['remove'](this[_0x59c5('0xa6')]['get'](w),e);}this[_0x59c5('0xa6')][_0x59c5('0xad')](v);}}[_0x59c5('0xae')](e){let r=this['reverseEdges']['get'](e);let adjacentEdges=this[_0x59c5('0xa6')]['get'](r[_0x59c5('0x8')]);let position=adjacentEdges['indexOf'](r);return adjacentEdges[(position+0x1)%adjacentEdges[_0x59c5('0x19')]];}[_0x59c5('0xaf')](){this[_0x59c5('0xb0')]=new Map();for(const [v,edges]of this['embedding']['entries']()){for(let i=0x0;i<edges[_0x59c5('0x19')];++i){let e=edges[i];if(e[_0x59c5('0x8')]!=v){let r=e['createReverseEdge']();this[_0x59c5('0xb0')][_0x59c5('0xa7')](e,r);this[_0x59c5('0xb0')][_0x59c5('0xa7')](r,e);edges[i]=r;}}}}[_0x59c5('0xb1')](e,e1,e2,r,r1,r2,newVertex){let originEm=this[_0x59c5('0xa6')][_0x59c5('0x5d')](e[_0x59c5('0x8')]);let destEm=this[_0x59c5('0xa6')][_0x59c5('0x5d')](e[_0x59c5('0xb')]);let ei=originEm[_0x59c5('0x9b')](e);let ri=destEm['indexOf'](r);originEm[ei]=e1;destEm[ri]=r1;this['reverseEdges'][_0x59c5('0xad')](e);this[_0x59c5('0xb0')][_0x59c5('0xad')](r);this[_0x59c5('0xb0')][_0x59c5('0xa7')](e1,r2);this['reverseEdges']['set'](e2,r1);this['reverseEdges'][_0x59c5('0xa7')](r2,e1);this['reverseEdges'][_0x59c5('0xa7')](r1,e2);this[_0x59c5('0xa6')][_0x59c5('0xa7')](newVertex,[e2,r2]);}[_0x59c5('0xb2')](e,r,fromEdge,toEdge){this['reverseEdges'][_0x59c5('0xa7')](e,r);this[_0x59c5('0xb0')]['set'](r,e);let v1=e['origin'];toEdge=this[_0x59c5('0xb0')][_0x59c5('0x5d')](toEdge);let em1=this[_0x59c5('0xa6')]['get'](v1);let pos1=em1[_0x59c5('0x9b')](toEdge);em1['splice'](pos1+0x1,0x0,e);let v2=e[_0x59c5('0xb')];let em2=this['embedding'][_0x59c5('0x5d')](v2);let pos2=em2[_0x59c5('0x9b')](fromEdge);em2[_0x59c5('0x9c')](pos2,0x0,r);}[_0x59c5('0xb3')](v,e){let vem=this[_0x59c5('0xa6')][_0x59c5('0x5d')](v);let next=null;if(e[_0x59c5('0x8')]==v){let i=vem[_0x59c5('0x9b')](e);next=vem[(i+0x1)%vem[_0x59c5('0x19')]];}if(e[_0x59c5('0xb')]==v){let i=vem['indexOf'](this[_0x59c5('0xb0')][_0x59c5('0x5d')](e));next=vem[(i+0x1)%vem['length']];}if(next!=null)return next[_0x59c5('0x21')]?this[_0x59c5('0xb0')]['get'](next):next;return null;}[_0x59c5('0xb4')](v,e){let vem=this[_0x59c5('0xa6')][_0x59c5('0x5d')](v);let prev=null;if(e[_0x59c5('0x8')]==v){let i=vem[_0x59c5('0x9b')](e);i--;if(i<0x0)i=vem['length']-0x1;prev=vem[i];}if(e['destination']==v){let i=vem[_0x59c5('0x9b')](this['reverseEdges'][_0x59c5('0x5d')](e));i--;if(i<0x0)i=vem['length']-0x1;prev=vem[i];}if(prev!=null)return prev[_0x59c5('0x21')]?this[_0x59c5('0xb0')]['get'](prev):prev;return null;}['setReverseEdges'](e,r){this[_0x59c5('0xb0')][_0x59c5('0xa7')](e,r);this['reverseEdges']['set'](r,e);}[_0x59c5('0xb5')](v){let edges=this[_0x59c5('0xa6')][_0x59c5('0x5d')](v);if(edges[_0x59c5('0x19')]<0x4)return!![];let directionChanges=0x0;for(let i=0x0;i<edges[_0x59c5('0x19')];i++){let e1=edges[i];let e2=edges[(i+0x1)%edges['length']];if(e1['origin']==v&&e2[_0x59c5('0xb')]==v||e1[_0x59c5('0xb')]==v&&e2['origin']==v)directionChanges++;}return directionChanges<=0x2;}[_0x59c5('0xb6')](){for(let v of this[_0x59c5('0xa6')][_0x59c5('0xb7')]()){if(!this['isVertexBimodal'](v))return![];}return!![];}[_0x59c5('0xb8')](edge,vertex){this[_0x59c5('0x60')](vertex);let oem=this[_0x59c5('0x5d')](edge['origin']);let oi=oem['indexOf'](edge);for(let i=0x0;i<oem[_0x59c5('0x19')];i++){let ei=(i+oi)%oem[_0x59c5('0x19')];let e=oem[ei];if(e!=edge)this['get'](vertex)[_0x59c5('0x16')](e);}let dem=this[_0x59c5('0x5d')](edge['destination']);let di=dem[_0x59c5('0x9b')](edge);for(let i=0x0;i<dem['length'];i++){let ei=(i+di)%dem[_0x59c5('0x19')];let e=dem[ei];if(e!=edge)this[_0x59c5('0x5d')](vertex)[_0x59c5('0x16')](e);}this['embedding'][_0x59c5('0xad')](edge['origin']);this[_0x59c5('0xa6')][_0x59c5('0xad')](edge[_0x59c5('0xb')]);}[_0x59c5('0xa1')](edge,vertex){this['add'](vertex);this[_0x59c5('0xa6')][_0x59c5('0x5d')](vertex)[_0x59c5('0x16')](...vertex[_0x59c5('0x0')]);let oem=this[_0x59c5('0x5d')](edge[_0x59c5('0x8')]);let oi=oem[_0x59c5('0x9b')](edge);oem[oi]=vertex[_0x59c5('0x0')][0x0];let dem=this[_0x59c5('0x5d')](edge[_0x59c5('0xb')]);let di=dem['indexOf'](edge);dem[di]=vertex['edges'][0x1];}[_0x59c5('0xb9')](face){return face!=this[_0x59c5('0xba')]?this[_0x59c5('0xbb')](face)-0x1:this[_0x59c5('0xbb')](face)+0x1;}[_0x59c5('0xbb')](face){let count=0x0;for(let i=0x0;i<face[_0x59c5('0x0')][_0x59c5('0x19')];i++){let e1=face['edges'][i];let e2=face[_0x59c5('0x0')][(i+0x1)%face[_0x59c5('0x0')]['length']];if(e1['origin']==e2[_0x59c5('0x8')])count++;}return count;}[_0x59c5('0xbc')](){this[_0x59c5('0xbd')]=[];this[_0x59c5('0xbe')]=new Map();this[_0x59c5('0xbf')]=new Map();for(let edge of this['graph'][_0x59c5('0x0')]){if(!this[_0x59c5('0xbf')][_0x59c5('0xac')](edge))this[_0x59c5('0xbd')]['push'](this[_0x59c5('0xc0')](edge,edge[_0x59c5('0x8')]));if(!this[_0x59c5('0xbe')]['has'](edge))this[_0x59c5('0xbd')][_0x59c5('0x16')](this['enumerateFaceEdges'](edge,edge[_0x59c5('0xb')]));}if(this[_0x59c5('0xbd')][_0x59c5('0x19')]>0x0)this['externalFace']=this['_faces'][0x0];}['enumerateFaceEdges'](startEdge,startVertex){let face=new Face();let currentEdge=startEdge;let currentVertex=startVertex;do{face[_0x59c5('0x0')]['push'](currentEdge);if(currentVertex==currentEdge['origin'])this[_0x59c5('0xbf')][_0x59c5('0xa7')](currentEdge,face);else this[_0x59c5('0xbe')][_0x59c5('0xa7')](currentEdge,face);currentVertex=currentEdge['getOtherEnd'](currentVertex);currentEdge=this[_0x59c5('0xc1')](currentEdge,currentVertex);}while(currentEdge!=startEdge);return face;}['prevInEmbedding'](edge,vertex){let vem=this[_0x59c5('0xa6')]['get'](vertex);let index=vem[_0x59c5('0x9b')](edge)-0x1;if(index<0x0)index=vem['length']-0x1;return vem[index];}[_0x59c5('0xc2')](edge,vertex,face){for(let i=0x0;i<face[_0x59c5('0x0')][_0x59c5('0x19')];i++){let e1=face['edges'][i];let e2=face[_0x59c5('0x0')][(i+0x1)%face[_0x59c5('0x0')]['length']];let v=e1[_0x59c5('0x1b')](e2);if(v==vertex){let idx=this[_0x59c5('0xa6')]['get'](v)[_0x59c5('0x9b')](e2);this['embedding'][_0x59c5('0x5d')](v)[_0x59c5('0x9c')](idx+0x1,0x0,edge);return;}}}[_0x59c5('0xc3')](edge1,edge2,vertex){let edges=[];let vem=this[_0x59c5('0x5d')](vertex);let si=vem[_0x59c5('0x9b')](edge1);let ei=vem['indexOf'](edge2);for(let i=0x1;i<vem[_0x59c5('0x19')];i++){let ci=(i+si)%vem[_0x59c5('0x19')];if(ci==ei)break;let e=vem[ci];edges[_0x59c5('0x16')](e);}return edges;}['getReverse'](e){return this[_0x59c5('0xb0')][_0x59c5('0x5d')](e);}[_0x59c5('0x5d')](v){return this[_0x59c5('0xa6')][_0x59c5('0x5d')](v);}get['vertices'](){return this[_0x59c5('0xa6')][_0x59c5('0xb7')]();}get[_0x59c5('0xc4')](){if(this['_faces']==null)this['enumerateFaces']();return this[_0x59c5('0xbd')];}}class Interval{constructor(min,max){this[_0x59c5('0xc5')]=min;this[_0x59c5('0xc6')]=max;}['contains'](interval){return this[_0x59c5('0xc5')]<=interval[_0x59c5('0xc5')]&&interval[_0x59c5('0xc6')]<=this['max'];}['intersects'](interval){if(this[_0x59c5('0xc5')]>=interval['max'])return![];if(interval['min']>=this[_0x59c5('0xc6')])return![];return!![];}[_0x59c5('0xc7')](interval){if(interval[_0x59c5('0x83')](this)||this[_0x59c5('0x83')](interval))return![];return this[_0x59c5('0xc8')](interval);}}class BinaryTree{constructor(item){this['root']=new BinaryTree[(_0x59c5('0x28'))](item);}[_0x59c5('0xc9')](){return this[_0x59c5('0x27')]['getLeaves']();}}BinaryTree[_0x59c5('0x28')]=class{constructor(item){this[_0x59c5('0xca')]=item;}[_0x59c5('0xcb')](left,right){this[_0x59c5('0x6a')]=new BinaryTree['Node'](left);this[_0x59c5('0x71')]=new BinaryTree[(_0x59c5('0x28'))](right);}[_0x59c5('0xc9')](){let leaves=[];this[_0x59c5('0xcc')](leaves);return leaves;}[_0x59c5('0xcc')](leaves){if(this[_0x59c5('0x6a')]==null&&this[_0x59c5('0x71')]==null)leaves[_0x59c5('0x16')](this[_0x59c5('0xca')]);if(this[_0x59c5('0x6a')]!=null)this[_0x59c5('0x6a')][_0x59c5('0xcc')](leaves);if(this['right']!=null)this[_0x59c5('0x71')][_0x59c5('0xcc')](leaves);}};class PriorityQueue{constructor(maxN,array){this['a']=array;this['N']=0x0;this['d']=0x3;this['pq']=[];this['qp']=[];for(let i=0x0;i<=maxN;i++){this['pq'][i]=0x0;this['qp'][i]=0x0;}}['empty'](){return this['N']==0x0;}[_0x59c5('0xcd')](v){this['pq'][++this['N']]=v;this['qp'][v]=this['N'];this[_0x59c5('0xce')](this['N']);}[_0x59c5('0xcf')](){this[_0x59c5('0xd0')](0x1,this['N']);this[_0x59c5('0xd1')](0x1,this['N']-0x1);return this['pq'][this['N']--];}['lower'](k){this[_0x59c5('0xce')](this['qp'][k]);}[_0x59c5('0xd2')](i,j){return this['a'][this['pq'][i]]<this['a'][this['pq'][j]];}[_0x59c5('0xd0')](i,j){let t=this['pq'][i];this['pq'][i]=this['pq'][j];this['pq'][j]=t;this['qp'][this['pq'][i]]=i;this['qp'][this['pq'][j]]=j;}[_0x59c5('0xce')](k){while(k>0x1&&this[_0x59c5('0xd3')](k,Math[_0x59c5('0xd4')]((k+this['d']-0x2)/this['d']))){this[_0x59c5('0xd0')](k,Math['floor']((k+this['d']-0x2)/this['d']));k=Math[_0x59c5('0xd4')]((k+this['d']-0x2)/this['d']);}}[_0x59c5('0xd1')](k,N){let j=0x0;while((j=this['d']*(k-0x1)+0x2)<=N){for(let i=j+0x1;i<j+this['d']&&i<=N;i++){if(this[_0x59c5('0xd2')](i,j))j=i;}if(!this[_0x59c5('0xd2')](j,k))break;this[_0x59c5('0xd0')](k,j);k=j;}}}class Factory{}class TreeHelper{constructor(reversedLinks){this[_0x59c5('0xd5')]=reversedLinks;}[_0x59c5('0xd6')](edge){return this[_0x59c5('0xd5')]?edge[_0x59c5('0xb')]:edge['origin'];}['childNode'](edge){return this[_0x59c5('0xd5')]?edge[_0x59c5('0x8')]:edge[_0x59c5('0xb')];}['parentEdges'](vertex){return this[_0x59c5('0xd5')]?vertex[_0x59c5('0xa')]:vertex[_0x59c5('0x1')];}[_0x59c5('0xd7')](vertex){return this[_0x59c5('0xd5')]?vertex[_0x59c5('0x1')]:vertex[_0x59c5('0xa')];}[_0x59c5('0xd8')](edge,points){if(this[_0x59c5('0xd5')])points=points[_0x59c5('0xd9')]();edge['points']=points;}}class Graph{constructor(){this['vertices']=[];this[_0x59c5('0x0')]=[];}[_0x59c5('0x3')](saveMapping){return this[_0x59c5('0xda')](this['vertices'],saveMapping);}[_0x59c5('0xda')](vertexSubset,saveMapping){var copy=new Graph();if(saveMapping){copy[_0x59c5('0xaa')]=new Map();copy['edgeCopyToOrigMap']=new Map();}var map=new Map();for(let v of vertexSubset){var vcopy=v[_0x59c5('0x3')]();map[_0x59c5('0xa7')](v,vcopy);copy['vertices'][_0x59c5('0x16')](vcopy);if(saveMapping)copy[_0x59c5('0xaa')][_0x59c5('0xa7')](vcopy,v);}for(let e of this[_0x59c5('0x0')]){if(map[_0x59c5('0xac')](e[_0x59c5('0x8')])&&map[_0x59c5('0xac')](e[_0x59c5('0xb')])){var ecopy=copy[_0x59c5('0xdb')](map[_0x59c5('0x5d')](e[_0x59c5('0x8')]),map[_0x59c5('0x5d')](e[_0x59c5('0xb')]),e);if(saveMapping)copy['edgeCopyToOrigMap']['set'](ecopy,e);}}return copy;}[_0x59c5('0xdc')](){if(this[_0x59c5('0xaa')]!=null){this[_0x59c5('0xdd')]=new Map();for(const [c,v]of this[_0x59c5('0xaa')][_0x59c5('0xa9')]())this[_0x59c5('0xdd')][_0x59c5('0xa7')](v,c);}if(this[_0x59c5('0xab')]!=null){this['edgeOrigToCopyMap']=new Map();for(const [c,v]of this[_0x59c5('0xab')][_0x59c5('0xa9')]())this[_0x59c5('0xde')][_0x59c5('0xa7')](v,c);}}[_0x59c5('0xdf')](root,reversedLinks,enableAssistants,compactAssistants){var tree=new Graph();root[_0x59c5('0xe0')]=0x0;tree['root']=root;var visited=[];var remaining=[];tree['vertices'][_0x59c5('0x16')](root);visited[_0x59c5('0x16')](root);remaining[_0x59c5('0x16')](root);var th=new TreeHelper(reversedLinks);var levelCount=0x1;while(remaining[_0x59c5('0x19')]>0x0){var next=remaining[_0x59c5('0xe1')]();var childEdges=th[_0x59c5('0xd7')](next);childEdges[_0x59c5('0x15')](function(e){var childNode=th[_0x59c5('0xe2')](e);if(visited['includes'](childNode))return;var parentNode=th['parentNode'](e);childNode[_0x59c5('0xe0')]=parentNode[_0x59c5('0xe0')]+0x1;childNode[_0x59c5('0x32')]=parentNode;if(levelCount<childNode[_0x59c5('0xe0')]+0x1)levelCount=childNode['level']+0x1;remaining['push'](childNode);visited['push'](childNode);tree[_0x59c5('0xe3')][_0x59c5('0x16')](childNode);tree[_0x59c5('0x0')][_0x59c5('0x16')](e);});}if(enableAssistants){remaining[_0x59c5('0x16')](root);visited=[];visited[_0x59c5('0x16')](root);while(remaining[_0x59c5('0x19')]>0x0){var next=remaining[_0x59c5('0xe1')]();var lastPosition=AssistantPosition['Right'];var childEdges=th[_0x59c5('0xd7')](next);for(var i=0x0;i<childEdges[_0x59c5('0x19')];i++){var child=th[_0x59c5('0xe2')](childEdges[i]);if(visited['includes'](child))continue;remaining[_0x59c5('0x16')](child);visited[_0x59c5('0x16')](child);switch(child[_0x59c5('0x6')][_0x59c5('0xe4')]['treeLayoutAssistant']){case AssistantType[_0x59c5('0xe5')]:child[_0x59c5('0xe6')]=AssistantPosition[_0x59c5('0xe5')];break;case AssistantType[_0x59c5('0xe7')]:child['assistantPosition']=AssistantPosition[_0x59c5('0xe7')];break;case AssistantType[_0x59c5('0xe8')]:if(lastPosition===AssistantPosition[_0x59c5('0xe5')])child[_0x59c5('0xe6')]=AssistantPosition[_0x59c5('0xe7')];else child[_0x59c5('0xe6')]=AssistantPosition['Left'];break;default:continue;}lastPosition=child[_0x59c5('0xe6')];}}visited=[];levelCount=this[_0x59c5('0xe9')](visited,root,compactAssistants,th)+0x1;}var treeLevels=[];for(var i=0x0;i<levelCount;i++)treeLevels['push']([]);tree[_0x59c5('0xd5')]=reversedLinks;tree[_0x59c5('0xea')]=treeLevels;tree[_0x59c5('0xeb')](tree['root']);return tree;}['collectLevels'](parent){this[_0x59c5('0xea')][parent[_0x59c5('0xe0')]][_0x59c5('0x16')](parent);var children=this[_0x59c5('0xec')](parent);for(var child of children){this[_0x59c5('0xeb')](child);}}[_0x59c5('0xec')](node){var children=[];if(this[_0x59c5('0xd5')]){for(var e of node[_0x59c5('0x1')]){if(this[_0x59c5('0x0')]['includes'](e))children[_0x59c5('0x16')](e[_0x59c5('0x8')]);}}else{for(var e of node[_0x59c5('0xa')]){if(this[_0x59c5('0x0')]['includes'](e))children['push'](e[_0x59c5('0xb')]);}}return children;}[_0x59c5('0xe9')](visited,parent,compactAssistants,treeHelper){var th=treeHelper;var maxLeftLevel=parent['level'];var maxRightLevel=parent['level'];var maxLevel=parent['level'];var bottomLevel=-0x1;var sorted=[];var childEdges=th[_0x59c5('0xd7')](parent);for(var i=0x0;i<childEdges['length'];i++)sorted[_0x59c5('0x16')](th[_0x59c5('0xe2')](childEdges[i]));sorted[_0x59c5('0xed')](function(a,b){var aAssistantType=a[_0x59c5('0x6')]['layoutTraits'][_0x59c5('0xee')];var bAssistantType=b[_0x59c5('0x6')]['layoutTraits']['treeLayoutAssistant'];if(aAssistantType&&!bAssistantType)return-0x1;if(!aAssistantType&&bAssistantType)return 0x1;return a['index']-b['index'];});for(var i=0x0;i<sorted[_0x59c5('0x19')];i++){var child=sorted[i];if(visited[_0x59c5('0xd')](child))continue;visited[_0x59c5('0x16')](child);if(child[_0x59c5('0x6')]['layoutTraits'][_0x59c5('0xee')]){if(child[_0x59c5('0xe6')]===AssistantPosition[_0x59c5('0xe5')]){if(compactAssistants)child[_0x59c5('0xe0')]=maxLeftLevel+0x1;else child['level']=Math[_0x59c5('0xc6')](maxLeftLevel,maxRightLevel)+0x1;}else if(child[_0x59c5('0xe6')]===AssistantPosition[_0x59c5('0xe7')]){if(compactAssistants)child[_0x59c5('0xe0')]=maxRightLevel+0x1;else child[_0x59c5('0xe0')]=maxLevel+0x1;}}else{if(bottomLevel===-0x1)bottomLevel=Math[_0x59c5('0xc6')](maxLeftLevel,maxRightLevel)+0x1;child[_0x59c5('0xe0')]=bottomLevel;}var newMaxLevel=this[_0x59c5('0xe9')](visited,child,compactAssistants,th);if(child[_0x59c5('0x6')][_0x59c5('0xe4')][_0x59c5('0xee')]){if(child['assistantPosition']===AssistantPosition['Left']){maxLeftLevel=Math[_0x59c5('0xc6')](maxLeftLevel,newMaxLevel);}else{maxRightLevel=Math['max'](maxRightLevel,newMaxLevel);maxLevel=Math[_0x59c5('0xc6')](maxLeftLevel,maxRightLevel);}}else{maxLevel=Math['max'](maxLevel,newMaxLevel);}}return Math[_0x59c5('0xc6')](maxLevel,maxLeftLevel);}['createEdge'](origin,destination,owner){var edge=this[_0x59c5('0xdb')](origin,destination,null);if(owner)edge['owner']=owner;return edge;}[_0x59c5('0xdb')](origin,destination,prototype){var edge=new Edge(origin,destination,prototype);this[_0x59c5('0x0')][_0x59c5('0x16')](edge);edge['origin'][_0x59c5('0xa')][_0x59c5('0x16')](edge);edge[_0x59c5('0x8')][_0x59c5('0x0')][_0x59c5('0x16')](edge);edge[_0x59c5('0xb')]['inEdges'][_0x59c5('0x16')](edge);edge[_0x59c5('0xb')][_0x59c5('0x0')]['push'](edge);return edge;}['addEdge'](edge){this[_0x59c5('0x0')]['push'](edge);edge[_0x59c5('0x8')][_0x59c5('0xa')][_0x59c5('0x16')](edge);edge[_0x59c5('0x8')][_0x59c5('0x0')][_0x59c5('0x16')](edge);edge['destination'][_0x59c5('0x1')][_0x59c5('0x16')](edge);edge['destination'][_0x59c5('0x0')]['push'](edge);}[_0x59c5('0x7')](edge){Utils['remove'](this[_0x59c5('0x0')],edge);Utils[_0x59c5('0x9')](edge['origin'][_0x59c5('0xa')],edge);Utils[_0x59c5('0x9')](edge[_0x59c5('0x8')][_0x59c5('0x0')],edge);Utils[_0x59c5('0x9')](edge[_0x59c5('0xb')][_0x59c5('0x1')],edge);Utils['remove'](edge['destination'][_0x59c5('0x0')],edge);}[_0x59c5('0xef')](){for(let v of this['vertices']){v[_0x59c5('0x0')]['length']=0x0;v[_0x59c5('0x1')]['length']=0x0;v['outEdges'][_0x59c5('0x19')]=0x0;}this['edges'][_0x59c5('0x19')]=0x0;}[_0x59c5('0xf0')](layoutRect,owner){var vertex=new Vertex();this[_0x59c5('0xe3')][_0x59c5('0x16')](vertex);if(layoutRect){vertex['x']=layoutRect['x'];vertex['y']=layoutRect['y'];vertex[_0x59c5('0xf1')]=layoutRect[_0x59c5('0xf1')];vertex['height']=layoutRect[_0x59c5('0xf2')];}if(owner)vertex[_0x59c5('0x6')]=owner;return vertex;}[_0x59c5('0xf3')](vertex){let index=this[_0x59c5('0xe3')][_0x59c5('0x9b')](vertex);if(index>-0x1)this['vertices'][_0x59c5('0x9c')](index,0x1);}['addVertexAndOutEdges'](vertex){this[_0x59c5('0xe3')][_0x59c5('0x16')](vertex);vertex[_0x59c5('0xa')][_0x59c5('0x15')](function(edge){this['edges'][_0x59c5('0x16')](edge);},this);}[_0x59c5('0xf4')](debugId){let vertex=new Vertex();this[_0x59c5('0xe3')][_0x59c5('0x16')](vertex);if(debugId)vertex['debugId']=debugId;return vertex;}[_0x59c5('0xf5')](){for(var i=0x0;i<this[_0x59c5('0xe3')][_0x59c5('0x19')];++i){var vertex=this[_0x59c5('0xe3')][i];vertex[_0x59c5('0x22')]=i;}for(var i=0x0;i<this[_0x59c5('0x0')][_0x59c5('0x19')];++i){var edge=this[_0x59c5('0x0')][i];edge[_0x59c5('0x22')]=i;}}['splitEdge'](e){let v1=e[_0x59c5('0x8')];let v2=e[_0x59c5('0xb')];this[_0x59c5('0x7')](e);let v=new Vertex();this[_0x59c5('0xe3')][_0x59c5('0x16')](v);let e1=this[_0x59c5('0xf6')](v1,v);e1[_0x59c5('0xf7')]=!![];let e2=this[_0x59c5('0xf6')](v,v2);e2[_0x59c5('0xf7')]=!![];v['index']=this[_0x59c5('0xe3')][_0x59c5('0x19')]-0x1;return v;}[_0x59c5('0xf8')](v1,destSet){let path=[];let mark=createBoolArray(this[_0x59c5('0xe3')]['length']);let searchTree=createIdArray(this[_0x59c5('0xe3')]['length'],-0x1);this[_0x59c5('0xf5')]();for(let i=0x0;i<this[_0x59c5('0xe3')][_0x59c5('0x19')];++i){if(!mark[i])this['findShortestPathBfs'](new Edge(v1,v1),destSet,mark,searchTree,path);}path['reverse']();return path;}[_0x59c5('0xf9')](originSet,destSet){let minPath=null;for(let v of originSet){let path=this[_0x59c5('0xf8')](v,destSet);if(minPath==null)minPath=path;minPath=minPath[_0x59c5('0x19')]>path[_0x59c5('0x19')]?path:minPath;}return minPath;}['findShortestPathBfs'](e,destSet,mark,searchTree,path){let queue=new Queue();queue['enqueue'](e);mark[e[_0x59c5('0xb')][_0x59c5('0x22')]]=!![];while(queue[_0x59c5('0x2c')]>0x0){e=queue[_0x59c5('0x3c')]();let v=e[_0x59c5('0x8')];let w=e['destination'];searchTree[w[_0x59c5('0x22')]]=v[_0x59c5('0x22')];if(destSet[_0x59c5('0xac')](w)){let t=w[_0x59c5('0x22')];while(!![]){path[_0x59c5('0x16')](this['vertices'][t]);let p=searchTree[t];if(t==p)break;t=p;}return;}for(let edge of e[_0x59c5('0xb')]['edges']){let t=edge[_0x59c5('0x10')](w);if(!mark[t[_0x59c5('0x22')]]){queue[_0x59c5('0x2b')](new Edge(w,t));mark[t[_0x59c5('0x22')]]=!![];}}}}[_0x59c5('0xfa')](origin,destSet,outMinWeigth){this[_0x59c5('0xf5')]();let V=this[_0x59c5('0xe3')][_0x59c5('0x19')];let weights=[];let shortestPaths=[];for(let v=0x0;v<V;v++)weights[v]=Number[_0x59c5('0xfb')];let queue=new PriorityQueue(V,weights);for(let v=0x0;v<V;v++)queue['insert'](v);weights[origin[_0x59c5('0x22')]]=0x0;queue[_0x59c5('0xfc')](origin['index']);while(!queue['empty']()){let v=queue[_0x59c5('0xcf')]();if(v!=origin[_0x59c5('0x22')]&&shortestPaths[v]==null)break;for(let e of this[_0x59c5('0xe3')][v][_0x59c5('0x0')]){let w=e[_0x59c5('0x10')](this[_0x59c5('0xe3')][v])['index'];let P=weights[v]+e[_0x59c5('0x2')];if(P<weights[w]){weights[w]=P;queue[_0x59c5('0xfc')](w);shortestPaths[w]=e;}}}outMinWeigth['value']=Number[_0x59c5('0xfb')];let minDest=null;for(let vertex of destSet){if(weights[vertex[_0x59c5('0x22')]]<outMinWeigth['value']){minDest=vertex;outMinWeigth['value']=weights[vertex[_0x59c5('0x22')]];}}let shortestPath=[];shortestPath[_0x59c5('0x16')](minDest);do{minDest=shortestPaths[minDest['index']][_0x59c5('0x10')](minDest);shortestPath[_0x59c5('0x16')](minDest);}while(minDest!=origin);shortestPath[_0x59c5('0xa2')]();return shortestPath;}[_0x59c5('0xfd')](originSet,destSet){let minPath=null;let minWeight=Number['MAX_VALUE'];for(let v of originSet){let weight={'value':0x0};let path=this['findShortestWeightedPathVS'](v,destSet,weight);if(weight[_0x59c5('0xfe')]<minWeight){minPath=path;minWeight=weight;}}return minPath;}['getConnectedComponents'](){this['searchCounter']=0x0;this[_0x59c5('0xf5')]();var setIds=createIdArray(this[_0x59c5('0xe3')]['length'],-0x1);for(var v=0x0;v<this['vertices'][_0x59c5('0x19')];v++){if(setIds[v]==-0x1){this[_0x59c5('0xff')](setIds,v);this['searchCounter']++;}}var components=[];for(var i=0x0;i<this[_0x59c5('0x100')];++i)components[i]=new Graph();for(var i=0x0;i<setIds[_0x59c5('0x19')];++i){var graph=components[setIds[i]];graph['addVertexAndOutEdges'](this[_0x59c5('0xe3')][i]);}return components;}[_0x59c5('0xff')](setIds,vertexId){setIds[vertexId]=this['searchCounter'];var vertex=this[_0x59c5('0xe3')][vertexId];vertex[_0x59c5('0x0')][_0x59c5('0x15')](function(edge){var next=edge[_0x59c5('0x10')](vertex);var nextId=next['index'];if(setIds[nextId]==-0x1)this[_0x59c5('0xff')](setIds,nextId);},this);}[_0x59c5('0x101')](saveMapping,blocksHandler){let allComponents=[];let connectedSubgraphs=this[_0x59c5('0x102')]();for(let connectedSubgraph of connectedSubgraphs){let componentBlocks=null;if(blocksHandler!=null)componentBlocks=[];let biconnectedComponents=connectedSubgraph[_0x59c5('0x103')]();for(let biconnectedComponent of biconnectedComponents){let block=biconnectedComponent[_0x59c5('0x3')](saveMapping);allComponents[_0x59c5('0x16')](block);if(componentBlocks!=null)componentBlocks[_0x59c5('0x16')](block);}if(blocksHandler)blocksHandler(componentBlocks,connectedSubgraph[_0x59c5('0x104')]);}this[_0x59c5('0xf5')]();return allComponents;}['getBiconnectedComponentsOfConnectedGraph'](){if(this[_0x59c5('0xe3')]['length']==0x1){let g=new Graph();g['vertices'][_0x59c5('0x16')](this['vertices'][0x0]);return[g];}this[_0x59c5('0xf5')]();this['searchCounter']=0x0;this[_0x59c5('0x105')]=[];this[_0x59c5('0x104')]=[];this[_0x59c5('0x106')]=[];this['secondLevel']=[];this[_0x59c5('0x107')]=createIdArray(this[_0x59c5('0xe3')][_0x59c5('0x19')],-0x1);this[_0x59c5('0x108')]=createIdArray(this['vertices'][_0x59c5('0x19')],-0x1);for(let v=0x0;v<this['vertices'][_0x59c5('0x19')];v++){if(this[_0x59c5('0x107')][v]==-0x1)this[_0x59c5('0x109')](v,v);}if(this['secondLevel'][_0x59c5('0x19')]>=0x2&&!this['cutVertices'][_0x59c5('0xd')](this[_0x59c5('0xe3')][0x0]))this[_0x59c5('0x104')][_0x59c5('0x16')](this['vertices'][0x0]);while(this[_0x59c5('0x10a')][_0x59c5('0x19')]>0x0)this[_0x59c5('0x10b')](this[_0x59c5('0x10a')][_0x59c5('0xe1')]());return this[_0x59c5('0x106')];}['biconnectivityDfs'](parent,vertexId){let destVertex=this[_0x59c5('0xe3')][vertexId];this['searchOrder'][vertexId]=this[_0x59c5('0x100')]++;this[_0x59c5('0x108')][vertexId]=this[_0x59c5('0x107')][vertexId];for(let edge of destVertex[_0x59c5('0x0')]){let child=edge[_0x59c5('0x10')](destVertex)['index'];if(this[_0x59c5('0x107')][child]<this['searchOrder'][vertexId]&&child!=parent){this[_0x59c5('0x105')]['push'](child);this['visitedEdges']['push'](vertexId);}if(this['searchOrder'][child]==-0x1){if(vertexId==0x0)this['secondLevel'][_0x59c5('0x16')](child);this['biconnectivityDfs'](vertexId,child);if(this[_0x59c5('0x108')][vertexId]>this[_0x59c5('0x108')][child])this['backMostEdges'][vertexId]=this[_0x59c5('0x108')][child];if(vertexId!=parent&&child!=parent&&this['backMostEdges'][child]>=this[_0x59c5('0x107')][vertexId]){if(!this[_0x59c5('0x104')][_0x59c5('0xd')](this['vertices'][vertexId]))this[_0x59c5('0x104')]['push'](this['vertices'][vertexId]);this[_0x59c5('0x10b')](child);}}else if(child!=parent){if(this[_0x59c5('0x108')][vertexId]>this[_0x59c5('0x107')][child])this[_0x59c5('0x108')][vertexId]=this[_0x59c5('0x107')][child];}}}[_0x59c5('0x10b')](child){let ids=createIdArray(this[_0x59c5('0xe3')][_0x59c5('0x19')],0x0);let component=new Graph();while(this[_0x59c5('0x105')][_0x59c5('0x19')]>0x0&&this['searchOrder'][Utils[_0x59c5('0x10c')](this['visitedEdges'])]>=this[_0x59c5('0x107')][child]){let org=this[_0x59c5('0x105')]['pop']();let dest=this[_0x59c5('0x105')][_0x59c5('0xe1')]();ids[org]=0x1;ids[dest]=0x1;}if(this[_0x59c5('0x105')][_0x59c5('0x19')]>0x0){let org=this[_0x59c5('0x105')]['pop']();let dest=this[_0x59c5('0x105')][_0x59c5('0xe1')]();ids[org]=0x1;ids[dest]=0x1;}for(let i=0x0;i<ids[_0x59c5('0x19')];++i)if(ids[i]>0x0)component[_0x59c5('0x10d')](this[_0x59c5('0xe3')][i]);this[_0x59c5('0x106')]['push'](component);}[_0x59c5('0x10e')](){var blocks=[];this[_0x59c5('0xf5')]();this[_0x59c5('0x0')]['forEach'](function(edge){delete edge[_0x59c5('0x10f')];});var searchCounter=0x0;var searchOrder=[];var componentStack=[];var lowPoint=[];for(var v=0x0;v<this[_0x59c5('0xe3')]['length'];v++){var vertex=this['vertices'][v];if(searchOrder[vertex['index']]!==undefined)continue;if(vertex[_0x59c5('0x0')][_0x59c5('0x19')]==0x0){var component=new Graph();component[_0x59c5('0x10d')](vertex);blocks[_0x59c5('0x16')](component[_0x59c5('0x3')](!![]));continue;}var vertexStack=[];var edgeStack=[];searchOrder[vertex[_0x59c5('0x22')]]=searchCounter++;lowPoint[vertex['index']]=searchOrder[vertex[_0x59c5('0x22')]];vertexStack[_0x59c5('0x16')](vertex);edgeStack['push'](vertex['edges'][_0x59c5('0x9d')](0x0));while(!![]){while(edgeStack[edgeStack[_0x59c5('0x19')]-0x1][_0x59c5('0x19')]>0x0){var tail=vertexStack[vertexStack[_0x59c5('0x19')]-0x1];var edge=edgeStack[edgeStack[_0x59c5('0x19')]-0x1][_0x59c5('0x110')]();var head=edge[_0x59c5('0x10')](tail);if(edge[_0x59c5('0x10f')])continue;componentStack[_0x59c5('0x16')](edge);edge['processed']=!![];if(searchOrder[head[_0x59c5('0x22')]]===undefined){searchOrder[head[_0x59c5('0x22')]]=searchCounter++;vertexStack[_0x59c5('0x16')](head);edgeStack['push'](head[_0x59c5('0x0')][_0x59c5('0x9d')](0x0));lowPoint[head[_0x59c5('0x22')]]=searchOrder[tail[_0x59c5('0x22')]];}else{if(searchOrder[head['index']]<lowPoint[tail[_0x59c5('0x22')]])lowPoint[tail[_0x59c5('0x22')]]=searchOrder[head[_0x59c5('0x22')]];}}if(vertexStack['length']>0x1){var top=vertexStack[vertexStack[_0x59c5('0x19')]-0x1];var next=vertexStack[vertexStack[_0x59c5('0x19')]-0x2];if(lowPoint[top[_0x59c5('0x22')]]==searchOrder[next[_0x59c5('0x22')]]){var component=new Graph();var topEdge=componentStack[componentStack[_0x59c5('0x19')]-0x1];while(searchOrder[topEdge['origin'][_0x59c5('0x22')]]>=searchOrder[next['index']]&&searchOrder[topEdge[_0x59c5('0xb')][_0x59c5('0x22')]]>=searchOrder[next[_0x59c5('0x22')]]){componentStack[_0x59c5('0xe1')]();if(!component[_0x59c5('0xe3')][_0x59c5('0xd')](topEdge[_0x59c5('0x8')]))component[_0x59c5('0x10d')](topEdge[_0x59c5('0x8')]);if(!component['vertices'][_0x59c5('0xd')](topEdge['destination']))component[_0x59c5('0x10d')](topEdge[_0x59c5('0xb')]);if(componentStack[_0x59c5('0x19')]==0x0)break;topEdge=componentStack[componentStack[_0x59c5('0x19')]-0x1];}blocks[_0x59c5('0x16')](component[_0x59c5('0x3')](!![]));}else{if(lowPoint[next[_0x59c5('0x22')]]>lowPoint[top[_0x59c5('0x22')]])lowPoint[next[_0x59c5('0x22')]]=lowPoint[top['index']];}vertexStack[_0x59c5('0xe1')]();edgeStack[_0x59c5('0xe1')]();}else{break;}}}return blocks;}[_0x59c5('0x111')](){let augmentation=[];let bcGraph=new Factory[(_0x59c5('0x112'))](this);bcGraph[_0x59c5('0x113')]();while(bcGraph[_0x59c5('0xe3')][_0x59c5('0x19')]>0x1){let c=bcGraph[_0x59c5('0x114')]();let pendants=[];for(let edge of c[_0x59c5('0xa')])pendants[_0x59c5('0x16')](edge[_0x59c5('0xb')]);let bnodesToMerge=new Set();Utils[_0x59c5('0x115')](bnodesToMerge,pendants);let v=null,c1=c,c2=c;if(pendants[_0x59c5('0x19')]>0x1){for(let i=0x0;i<pendants[_0x59c5('0x19')]-0x1;++i){let out1=bcGraph['getOutsideVertex'](pendants[i]);let out2=bcGraph[_0x59c5('0x116')](pendants[i+0x1]);let newEdge=this[_0x59c5('0xf6')](out1,out2);augmentation[_0x59c5('0x16')](newEdge);if(i==0x0)v=out1;}}else{v=bcGraph[_0x59c5('0x116')](pendants[0x0]);}let cnodesOnPath=new Set();while(bcGraph['father'](c1)!=bcGraph['root']&&this[_0x59c5('0x117')](v,bcGraph['getCutvertex'](c1))){c2=c1;let bNode=bcGraph[_0x59c5('0x118')](c2);bnodesToMerge[_0x59c5('0x60')](bNode);c1=bcGraph[_0x59c5('0x118')](bNode);cnodesOnPath[_0x59c5('0x60')](c2);}if(this[_0x59c5('0x117')](v,bcGraph[_0x59c5('0x119')](c1))){c2=c1;cnodesOnPath[_0x59c5('0x60')](c2);}let bx=bcGraph[_0x59c5('0x118')](c2);bnodesToMerge[_0x59c5('0x60')](bx);let newEdge2=this[_0x59c5('0xf6')](v,bcGraph[_0x59c5('0x11a')](bx,c2));augmentation[_0x59c5('0x16')](newEdge2);bcGraph[_0x59c5('0x11b')](bnodesToMerge,bx);for(let cNode of cnodesOnPath){if(cNode!=c&&cNode['degree']()>0x2)bcGraph[_0x59c5('0x11c')](cNode,bx);else bcGraph[_0x59c5('0x11d')](cNode);}for(let bNode of bnodesToMerge)if(bNode!=bx)bcGraph['removeBnode'](bNode);}return augmentation;}[_0x59c5('0x117')](v1,v2){let temp=this[_0x59c5('0xf6')](v1,v2);let planar=this[_0x59c5('0x11e')]();this[_0x59c5('0x7')](temp);return planar;}[_0x59c5('0x118')](vertex){return vertex[_0x59c5('0x1')][0x0][_0x59c5('0x8')];}['getOutsideVertexCP'](cutpoints){let embedding=this[_0x59c5('0x11f')](cutpoints);let dualGraph=new Factory[(_0x59c5('0x120'))](this,embedding);for(let face of dualGraph[_0x59c5('0xc4')]){let faceVertices=dualGraph[_0x59c5('0x9e')](face);if(Utils[_0x59c5('0x121')](faceVertices,cutpoints)){for(let vertex of faceVertices){if(!cutpoints[_0x59c5('0xd')](vertex))return vertex;}return cutpoints[0x0];}}return null;}[_0x59c5('0x122')](cutpoints,neighbor){let embedding=this[_0x59c5('0x11f')](cutpoints);let dualGraph=new Factory[(_0x59c5('0x120'))](this,embedding);for(let face of dualGraph[_0x59c5('0xc4')]){let faceVertices=dualGraph[_0x59c5('0x9e')](face);if(Utils['containsAll'](faceVertices,cutpoints)){for(let edge of face['edges']){if(edge['incidentWith'](neighbor))return edge[_0x59c5('0x10')](neighbor);}return cutpoints[0x0];}}return null;}[_0x59c5('0x123')](){return this['test3EdgeConnectivity'](![]);}[_0x59c5('0x124')](){return this[_0x59c5('0x125')](!![]);}[_0x59c5('0x125')](returnPairs){if(this[_0x59c5('0xe3')][_0x59c5('0x19')]<0x2)return returnPairs?[]:[this];if(this[_0x59c5('0xe3')][0x0][_0x59c5('0x22')]===undefined)this['setItemIndices']();this[_0x59c5('0x0')]['forEach'](function(e){delete e[_0x59c5('0x126')];delete e[_0x59c5('0x127')];});var cutPairs=[];var dfs=0x0;var dfsNumber=[];var nd=[];var lowpt=[];var low=[];var lowpt2=[];var low2=[];var tolow=[];var stack=[];var newlink=[];var generatorBuckets=new Map();function findCutPairs(v,parentEdge){var vi=v['index'];dfsNumber[vi]=dfs++;newlink[vi]=v;nd[vi]=0x1;lowpt[vi]=dfsNumber[vi];low[vi]=v;lowpt2[vi]=dfsNumber[vi];low2[vi]=v;if(stack[vi]===undefined)stack[vi]=[];v[_0x59c5('0x0')]['forEach'](function(e){if(e==parentEdge)return;var w=e[_0x59c5('0x10')](v);var wi=w[_0x59c5('0x22')];if(dfsNumber[wi]===undefined){e[_0x59c5('0x127')]=!![];e['child']=w;findCutPairs(w,e);var s=stack[wi];var top=s[_0x59c5('0x19')]>0x0?s[s[_0x59c5('0x19')]-0x1]:null;if(top!=null&&w==top['q']){s[_0x59c5('0xe1')]();cutPairs[_0x59c5('0x16')]([e,top[_0x59c5('0x128')]]);e['cutEdge']=!![];top[_0x59c5('0x128')]['cutEdge']=!![];if(returnPairs){if(!generatorBuckets[_0x59c5('0xac')](top[_0x59c5('0x128')]))generatorBuckets[_0x59c5('0xa7')](top[_0x59c5('0x128')],[]);generatorBuckets[_0x59c5('0x5d')](top[_0x59c5('0x128')])[_0x59c5('0x16')](e);}if(v!=top['p'])s[_0x59c5('0x16')]({'edge':top[_0x59c5('0x128')],'p':top['p'],'q':v});if(top[_0x59c5('0x128')]['treeEdge']){var y=top[_0x59c5('0x128')][_0x59c5('0x129')][_0x59c5('0x22')];newlink[y]=v;}}nd[vi]=nd[vi]+nd[wi];if(lowpt[wi]<lowpt[vi]){lowpt2[vi]=lowpt[vi];lowpt[vi]=lowpt[wi];low2[vi]=low[vi];low[vi]=low[wi];stack[vi]=stack[wi][_0x59c5('0x9d')](0x0);tolow[vi]=e;}else if(lowpt[wi]<lowpt2[vi]){lowpt2[vi]=lowpt[wi];low2[vi]=low[wi];stack[wi]=[];}}else if(dfsNumber[vi]>dfsNumber[wi]){if(dfsNumber[wi]<=lowpt[vi]){lowpt2[vi]=lowpt[vi];lowpt[vi]=dfsNumber[wi];low2[vi]=low[vi];low[vi]=w;stack[vi]=[];tolow[vi]=e;}else if(dfsNumber[wi]<lowpt2[vi]){lowpt2[vi]=dfsNumber[wi];low2[vi]=w;}}});var s=stack[vi];var top=s[_0x59c5('0x19')]>0x0?s[s[_0x59c5('0x19')]-0x1]:null;if(top==null){if(lowpt2[vi]>lowpt[vi]){s[_0x59c5('0x16')]({'edge':tolow[vi],'p':low[vi],'q':low2[vi]});}}else if(lowpt2[vi]>dfsNumber[top['q'][_0x59c5('0x22')]]){s[_0x59c5('0x16')]({'edge':tolow[vi],'p':top['q'],'q':low2[vi]});}else{while(s[_0x59c5('0x19')]>0x0&&lowpt2[vi]<=dfsNumber[s[s[_0x59c5('0x19')]-0x1]['p'][_0x59c5('0x22')]])s[_0x59c5('0xe1')]();if(s['length']>0x0&&lowpt2[vi]<dfsNumber[s[s['length']-0x1]['q'][_0x59c5('0x22')]]){var se=s[_0x59c5('0xe1')]();s[_0x59c5('0x16')]({'edge':se[_0x59c5('0x128')],'p':se['p'],'q':low2[vi]});}}v['edges'][_0x59c5('0x15')](function(e){var u=e[_0x59c5('0x10')](v);var ui=u['index'];if(e[_0x59c5('0x127')]||dfsNumber[vi]>dfsNumber[ui])return;var top=s[_0x59c5('0x19')]>0x0?s[s[_0x59c5('0x19')]-0x1]:null;var y=top==null?null:top[_0x59c5('0x128')]['child'];var yi=y?y[_0x59c5('0x22')]:0x0;while(top!=null&&top[_0x59c5('0x128')]['treeEdge']&&dfsNumber[yi]<=dfsNumber[ui]&&dfsNumber[ui]<=dfsNumber[yi]+nd[yi]-0x1){s[_0x59c5('0xe1')]();top=s['length']>0x0?s[s[_0x59c5('0x19')]-0x1]:null;y=top==null?null:top[_0x59c5('0x128')]['child'];yi=y?y[_0x59c5('0x22')]:0x0;}});}findCutPairs(this[_0x59c5('0xe3')][0x0],null);if(returnPairs){generatorBuckets[_0x59c5('0x15')](function(edges){for(var i=0x0;i<edges[_0x59c5('0x19')];i++)for(var j=i+0x1;j<edges[_0x59c5('0x19')];j++)if(!cutPairs[_0x59c5('0x12a')](function(p){return p[0x0]==edges[i]&&p[0x1]==edges[j];}))cutPairs[_0x59c5('0x16')]([edges[i],edges[j]]);});return cutPairs;}var cutEdges=[];this[_0x59c5('0x0')][_0x59c5('0x15')](function(e){if(e[_0x59c5('0x126')])cutEdges[_0x59c5('0x16')](e);});cutEdges['forEach'](function(e){this[_0x59c5('0x7')](e);},this);var newEdges=[];this['vertices']['forEach'](function(v){if(newlink[v[_0x59c5('0x22')]]!=v){var e=this[_0x59c5('0xf6')](v,newlink[v[_0x59c5('0x22')]]);newEdges[_0x59c5('0x16')](e);}},this);var comps=this[_0x59c5('0x102')]();newEdges['forEach'](function(e){this[_0x59c5('0x7')](e);},this);cutEdges[_0x59c5('0x15')](function(e){this[_0x59c5('0xb2')](e);},this);return comps;}[_0x59c5('0x12b')](){var va=this['vertices'];if(va[_0x59c5('0x19')]<0x4)return[];function remainsConnectedWithout(v1,v2){var queue=[];var visited=[];var processed=0x1;va[_0x59c5('0x15')](function(v){if(v!=v1&&v!=v2){queue[_0x59c5('0x16')](v);visited[v[_0x59c5('0x22')]]=!![];return $break;}});while(queue[_0x59c5('0x19')]>0x0){var v=queue[_0x59c5('0x110')]();v[_0x59c5('0x14')]()['forEach'](function(n){if(visited[n[_0x59c5('0x22')]]||v1==n||v2==n)return;queue[_0x59c5('0x16')](n);visited[n[_0x59c5('0x22')]]=!![];processed++;});}return processed==va[_0x59c5('0x19')]-0x2;}this[_0x59c5('0xf5')]();var separationPairs=[];for(var i=0x0;i<va[_0x59c5('0x19')]-0x1;i++)for(var j=i+0x1;j<va['length'];j++)if(!remainsConnectedWithout(va[i],va[j]))separationPairs[_0x59c5('0x16')]([va[i],va[j]]);return separationPairs;}[_0x59c5('0x12c')](){var dfsCounter=0x0;var dfsNumber=[];var dfsVertex=[];var low1=[];var low2=[];var parent=[];var children=[];var nd=[];var flag=[];var separationPairs=[];var removed=[];var This=this;var VLen=This[_0x59c5('0xe3')][_0x59c5('0x19')];this[_0x59c5('0x0')]['forEach'](function(e){delete e[_0x59c5('0x12d')];});function traverse(V,P){var v=V[_0x59c5('0x22')];children[v]=[];dfsNumber[v]=dfsCounter++;dfsVertex[dfsNumber[v]]=V;parent[v]=P;low1[v]=low2[v]=dfsNumber[v];nd[v]=0x1;V[_0x59c5('0x0')][_0x59c5('0x15')](function(e){var W=e['getOtherEnd'](V);var w=W[_0x59c5('0x22')];if(dfsNumber[w]===undefined){e[_0x59c5('0x12d')]=!![];children[v][_0x59c5('0x16')](W);traverse(W,V);if(low1[w]<low1[v]){low2[v]=Math['min'](low1[v],low2[w]);low1[v]=low1[w];}else if(low1[w]==low1[v]){low2[v]=Math[_0x59c5('0xc5')](low2[v],low2[w]);}else{low2[v]=Math[_0x59c5('0xc5')](low2[v],low1[w]);}nd[v]+=nd[w];}else if(dfsNumber[w]<dfsNumber[v]&&(w!=P[_0x59c5('0x22')]||flag[v])){if(dfsNumber[w]<low1[v]){low2[v]=low1[v];low1[v]=dfsNumber[w];}else if(dfsNumber[w]>low1[v]){low2[v]=Math[_0x59c5('0xc5')](low2[v],dfsNumber[w]);}}if(W==P)flag[v]=!![];});if(P){var X=dfsVertex[low1[v]];var t3s=nd[v];if(X!=P&&low2[v]>=dfsNumber[P[_0x59c5('0x22')]]&&t3s<VLen-0x2)separationPairs[_0x59c5('0x16')]([X,P]);else if(dfsNumber[X['index']]>0x0&&intermLinksOnlyToSubtree(X,P,V))separationPairs[_0x59c5('0x16')]([X,P]);}var sameLow=![];getChildren(V)['forEach'](function(Q){if(low1[v]==low1[Q['index']]){sameLow=!![];return $break;}});if(nd[v]>0x1&&!sameLow){var vc=This[_0x59c5('0xf0')]();vc[_0x59c5('0x22')]=This[_0x59c5('0xe3')][_0x59c5('0x19')]-0x1;V[_0x59c5('0x0')][_0x59c5('0x9d')](0x0)['forEach'](function(e){if(!e[_0x59c5('0x12d')]){var W=e[_0x59c5('0x10')](V);if(dfsNumber[v]>dfsNumber[W[_0x59c5('0x22')]])e[_0x59c5('0x1e')](V,vc);}});var ce=This[_0x59c5('0xf6')](V,vc);ce[_0x59c5('0x22')]=This[_0x59c5('0x0')][_0x59c5('0x19')]-0x1;ce[_0x59c5('0x12d')]=!![];dfsNumber[vc['index']]=dfsNumber[v];low1[vc['index']]=low1[v];nd[vc[_0x59c5('0x22')]]=0x1;parent[vc[_0x59c5('0x22')]]=V;reduce(vc,V);removed['push'](vc);}var nontreeEdges=0x0;V[_0x59c5('0x0')][_0x59c5('0x15')](function(e){if(!e[_0x59c5('0x12d')])nontreeEdges++;});if(nontreeEdges>0x1){reduce(V,V);removed[_0x59c5('0x16')](V);}}function pathNodesBetween(a,d){var nodes=[];while(parent[d[_0x59c5('0x22')]]!=a){nodes[_0x59c5('0x16')](parent[d[_0x59c5('0x22')]]);d=parent[d[_0x59c5('0x22')]];}return nodes;}function intermLinksOnlyToSubtree(a,d,v){var intermNodes=pathNodesBetween(a,d);var onlyToSubtree=!![];intermNodes[_0x59c5('0x15')](function(node){node['edges']['forEach'](function(e){var w=e[_0x59c5('0x10')](node);if(w==a||w==d)return;if(dfsNumber[w['index']]===undefined)onlyToSubtree=![];else if(dfsNumber[w[_0x59c5('0x22')]]<dfsNumber[a['index']])onlyToSubtree=![];else if(dfsNumber[w[_0x59c5('0x22')]]>dfsNumber[d[_0x59c5('0x22')]]&&dfsNumber[w[_0x59c5('0x22')]]<dfsNumber[v[_0x59c5('0x22')]])onlyToSubtree=![];else if(low1[w[_0x59c5('0x22')]]<dfsNumber[a[_0x59c5('0x22')]])onlyToSubtree=![];});if(!onlyToSubtree)return $break;});return onlyToSubtree;}function getChildren(V){var v=V[_0x59c5('0x22')];var children=[];V[_0x59c5('0x0')][_0x59c5('0x15')](function(e){if(e[_0x59c5('0x12d')]){var W=e[_0x59c5('0x10')](V);if(dfsNumber[v]<dfsNumber[W['index']])children['push'](W);}});return children;}function reduce(V,rep){var v=V['index'];var outNodes=[];var inNodes=[];V[_0x59c5('0x0')][_0x59c5('0x15')](function(e){if(e[_0x59c5('0x12d')])return;var W=e[_0x59c5('0x10')](V);if(dfsNumber[v]>dfsNumber[W[_0x59c5('0x22')]]){if(!outNodes[_0x59c5('0xd')](W))outNodes[_0x59c5('0x16')](W);}else{if(!inNodes[_0x59c5('0xd')](W))inNodes[_0x59c5('0x16')](W);}});outNodes[_0x59c5('0xed')](sortByDfsNumber);inNodes[_0x59c5('0xed')](sortByDfsNumber);var outReplacement=[];outNodes[_0x59c5('0x15')](function(n){var r=This[_0x59c5('0xf0')]();r[_0x59c5('0x12e')]=rep;r[_0x59c5('0x22')]=This[_0x59c5('0xe3')]['length']-0x1;nd[r[_0x59c5('0x22')]]=nd[v];outReplacement['push'](r);});var inReplacement=[];inNodes[_0x59c5('0x15')](function(n){var r=This[_0x59c5('0xf0')]();r[_0x59c5('0x12e')]=rep;r[_0x59c5('0x22')]=This[_0x59c5('0xe3')]['length']-0x1;nd[r['index']]=nd[v];inReplacement[_0x59c5('0x16')](r);});var replacement=[];outReplacement[_0x59c5('0x12f')](function(v){replacement[_0x59c5('0x16')](v);});inReplacement[_0x59c5('0x12f')](function(v){replacement['push'](v);});for(var i=0x0;i<replacement[_0x59c5('0x19')]-0x1;i++){var e=This[_0x59c5('0xf6')](replacement[i],replacement[i+0x1]);e['index']=This[_0x59c5('0x0')][_0x59c5('0x19')]-0x1;e[_0x59c5('0x12e')]=rep;e['spTreeEdge']=!![];}var parentEdge=null;var childEdges=[];V['edges'][_0x59c5('0x15')](function(e){if(e[_0x59c5('0x12d')]){var W=e[_0x59c5('0x10')](V);if(dfsNumber[v]<dfsNumber[W['index']])childEdges['push'](e);else if(dfsNumber[v]>=dfsNumber[W[_0x59c5('0x22')]])parentEdge=e;}});if(parentEdge){parentEdge['changeVertex'](V,replacement[0x0]);parentEdge[_0x59c5('0x12e')]=rep;}childEdges[_0x59c5('0x15')](function(childEdge){childEdge['changeVertex'](V,replacement[replacement[_0x59c5('0x19')]-0x1]);childEdge[_0x59c5('0x12e')]=rep;});parent[replacement[0x0][_0x59c5('0x22')]]=parent[v];for(var i=0x0;i<outNodes[_0x59c5('0x19')];i++){var u=outNodes[i];var uiOut=V['getCommonEdges'](u);uiOut[_0x59c5('0x15')](function(e){if(!e[_0x59c5('0x12d')])e['changeVertex'](V,outReplacement[i]);});low1[outReplacement[i][_0x59c5('0x22')]]=low1[v];dfsNumber[outReplacement[i]['index']]=dfsNumber[v];}for(var i=0x0;i<inNodes[_0x59c5('0x19')];i++){var w=inNodes[i];var wiIn=V[_0x59c5('0x11')](w);wiIn[_0x59c5('0x15')](function(e){if(!e['spTreeEdge'])e['changeVertex'](V,inReplacement[i]);});low1[inReplacement[i]['index']]=low1[v];dfsNumber[inReplacement[i][_0x59c5('0x22')]]=dfsNumber[v];}}function sortByDfsNumber(v1,v2){if(dfsNumber[v1['index']]<dfsNumber[v2['index']])return-0x1;if(dfsNumber[v1['index']]>dfsNumber[v2[_0x59c5('0x22')]])return 0x1;return 0x0;}function childOnPathTo(a,d){while(parent[d[_0x59c5('0x22')]]!=a)d=parent[d[_0x59c5('0x22')]];return d;}this[_0x59c5('0xf5')]();traverse(this[_0x59c5('0xe3')][0x0],null);removed['forEach'](function(V){Utils['remove'](This[_0x59c5('0xe3')],V);});var candidates=[];var cutPairs=this[_0x59c5('0x124')]();cutPairs['forEach'](function(pair){if(!(pair[0x0][_0x59c5('0x12d')]&&pair[0x1]['spTreeEdge']))return;var e1v=pair[0x0][_0x59c5('0x130')]();var e2v=pair[0x1]['getEnds']();e1v[_0x59c5('0xed')](sortByDfsNumber);e2v[_0x59c5('0xed')](sortByDfsNumber);if(!parent[e1v[0x0]['index']]&&nd[e2v[0x1]['index']]===0x1)return;if(!parent[e2v[0x0][_0x59c5('0x22')]]&&nd[e1v[0x1][_0x59c5('0x22')]]===0x1)return;var e1Vertices=[];e1Vertices['push'](pair[0x0][_0x59c5('0x8')]);e1Vertices[_0x59c5('0x16')](pair[0x0][_0x59c5('0xb')]);var e2Vertices=[];e2Vertices[_0x59c5('0x16')](pair[0x1][_0x59c5('0x8')]);e2Vertices['push'](pair[0x1][_0x59c5('0xb')]);for(var i=0x0;i<e1Vertices[_0x59c5('0x19')];i++)for(var j=0x0;j<e2Vertices[_0x59c5('0x19')];j++)if(e1Vertices[i]!=e2Vertices[j])candidates[_0x59c5('0x16')]([e1Vertices[i],e2Vertices[j]]);});candidates[_0x59c5('0x15')](function(pair){var a,d;if(dfsNumber[pair[0x0]['index']]<dfsNumber[pair[0x1][_0x59c5('0x22')]]){a=pair[0x0];d=pair[0x1];}else{d=pair[0x0];a=pair[0x1];}if(a[_0x59c5('0x12e')])a=a[_0x59c5('0x12e')];if(d[_0x59c5('0x12e')])d=d[_0x59c5('0x12e')];if(a==d)return;var t3s=t3Sizes(a,d,children[d[_0x59c5('0x22')]][0x0],children[d[_0x59c5('0x22')]]);if(t3s[0x1]!=0x0&&t3s[0x0]+t3s[0x2]!=0x0&&!separationPairs[_0x59c5('0x12a')](function(e){return e[0x0]==a&&e[0x1]==d;}))separationPairs[_0x59c5('0x16')]([a,d]);});function t3Sizes(a,d,v,children){var sizeOfV3=children[_0x59c5('0x19')]==0x0?0x0:nd[v['index']];var U=childOnPathTo(a,d);var sizeOfV2=nd[U[_0x59c5('0x22')]]-sizeOfV3-0x1;children['forEach'](function(W){if(W==v)return;if(low1[W[_0x59c5('0x22')]]<dfsNumber[a[_0x59c5('0x22')]])sizeOfV2-=nd[W[_0x59c5('0x22')]];});var sizeOfV1=VLen-sizeOfV2-sizeOfV3-0x2;return[sizeOfV1,sizeOfV2,sizeOfV3];}return separationPairs;}[_0x59c5('0x131')](start){this['setItemIndices']();this[_0x59c5('0x100')]=0x0;this['searchOrder']=createIdArray(this[_0x59c5('0xe3')][_0x59c5('0x19')],-0x1);this[_0x59c5('0x132')]=createIdArray(this[_0x59c5('0xe3')][_0x59c5('0x19')],-0x1);this['backMostEdges']=createIdArray(this[_0x59c5('0xe3')][_0x59c5('0x19')],-0x1);if(start!=null)this['searchComponent'](start[_0x59c5('0x22')],start['index']);for(let v=0x0;v<this['vertices'][_0x59c5('0x19')];v++)if(this[_0x59c5('0x107')][v]==-0x1)this[_0x59c5('0x133')](v,v);}['searchComponent'](origin,dest){let destVertex=this['vertices'][dest];this[_0x59c5('0x107')][dest]=this['searchCounter']++;this[_0x59c5('0x132')][dest]=origin;this[_0x59c5('0x108')][dest]=this['searchOrder'][dest];for(let edge of destVertex[_0x59c5('0x0')]){let test=edge[_0x59c5('0x10')](destVertex)['index'];if(this[_0x59c5('0x107')][test]==-0x1){this[_0x59c5('0x133')](dest,test);if(this[_0x59c5('0x108')][dest]>this[_0x59c5('0x108')][test])this[_0x59c5('0x108')][dest]=this['backMostEdges'][test];}else if(test!=origin){if(this['backMostEdges'][dest]>this[_0x59c5('0x107')][test])this[_0x59c5('0x108')][dest]=this[_0x59c5('0x107')][test];}}}[_0x59c5('0x134')](sink){let verticesInStOrder=[];this['stOrder']=createIdArray(this[_0x59c5('0xe3')]['length'],-0x1);let oldVertices=createBoolArray(this[_0x59c5('0xe3')]['length']);let oldEdges=createBoolArray(this[_0x59c5('0x0')]['length']);if(this[_0x59c5('0xe3')]['length']==0x1){verticesInStOrder[_0x59c5('0x16')](this[_0x59c5('0xe3')][0x0]);return verticesInStOrder;}this[_0x59c5('0x131')](sink);let stack=[];let s=null,t=null;for(let vertex of this[_0x59c5('0xe3')]){let n=vertex['index'];if(this[_0x59c5('0x107')][n]==0x0){t=vertex;oldVertices[n]=!![];}else if(this['searchOrder'][n]==0x1){s=vertex;oldVertices[n]=!![];}else{oldVertices[n]=![];}}for(let edge of this[_0x59c5('0x0')])oldEdges[edge[_0x59c5('0x22')]]=edge[_0x59c5('0x135')](s,t);stack[_0x59c5('0x16')](t);stack[_0x59c5('0x16')](s);let i=0x0;while(!![]){let v=stack[_0x59c5('0xe1')]();if(v==t){this[_0x59c5('0x136')][v[_0x59c5('0x22')]]=i;verticesInStOrder[_0x59c5('0x16')](v);break;}let path=this[_0x59c5('0x137')](v,oldVertices,oldEdges);if(path[_0x59c5('0x19')]>0x0){let vstack=[];for(let edge of path){vstack[_0x59c5('0x16')](v);v=edge[_0x59c5('0x10')](v);}while(vstack[_0x59c5('0x19')]>0x0)stack[_0x59c5('0x16')](vstack[_0x59c5('0xe1')]());}else{this[_0x59c5('0x136')][v[_0x59c5('0x22')]]=i;verticesInStOrder[_0x59c5('0x16')](v);i++;}}return verticesInStOrder;}['convertToStGraph'](sink){let reversedEdges=[];this[_0x59c5('0x134')](sink);for(let e of this[_0x59c5('0x0')]){if(this[_0x59c5('0x136')][e[_0x59c5('0x8')][_0x59c5('0x22')]]>this[_0x59c5('0x136')][e[_0x59c5('0xb')]['index']]){e[_0x59c5('0xa2')]();reversedEdges[_0x59c5('0x16')](e);}}return reversedEdges;}['isCycleEdge'](edge){return!(this['searchParent'][edge[_0x59c5('0x8')][_0x59c5('0x22')]]==edge[_0x59c5('0xb')]['index'])&&!(this[_0x59c5('0x132')][edge[_0x59c5('0xb')][_0x59c5('0x22')]]==edge[_0x59c5('0x8')][_0x59c5('0x22')]);}[_0x59c5('0x137')](v,oldVertices,oldEdges){let path=[];for(let edge of v['edges']){let w=edge[_0x59c5('0x10')](v);if(!oldEdges[edge[_0x59c5('0x22')]]&&this[_0x59c5('0x138')](edge)&&this['searchOrder'][w[_0x59c5('0x22')]]<this[_0x59c5('0x107')][v[_0x59c5('0x22')]]){oldEdges[edge[_0x59c5('0x22')]]=!![];path[_0x59c5('0x16')](edge);return path;}}for(let edge of v['edges']){let w=edge[_0x59c5('0x10')](v);if(!oldEdges[edge[_0x59c5('0x22')]]&&!this[_0x59c5('0x138')](edge)&&this['searchParent'][w[_0x59c5('0x22')]]==v[_0x59c5('0x22')]&&this[_0x59c5('0x107')][w['index']]>this[_0x59c5('0x107')][v[_0x59c5('0x22')]]){oldEdges[edge[_0x59c5('0x22')]]=!![];path[_0x59c5('0x16')](edge);while(!oldVertices[w[_0x59c5('0x22')]]){let found=![];for(let testEdge of w[_0x59c5('0x0')]){if(!oldEdges[testEdge[_0x59c5('0x22')]]&&this['searchOrder'][testEdge[_0x59c5('0x10')](w)[_0x59c5('0x22')]]==this[_0x59c5('0x108')][w[_0x59c5('0x22')]]){oldVertices[w[_0x59c5('0x22')]]=!![];oldEdges[testEdge[_0x59c5('0x22')]]=!![];path[_0x59c5('0x16')](testEdge);found=!![];break;}}if(!found){for(let testEdge of w[_0x59c5('0x0')]){if(!oldEdges[testEdge['index']]&&this[_0x59c5('0x132')][testEdge['getOtherEnd'](w)[_0x59c5('0x22')]]==w['index']&&this[_0x59c5('0x108')][testEdge[_0x59c5('0x10')](w)['index']]==this[_0x59c5('0x108')][w[_0x59c5('0x22')]]){oldVertices[w[_0x59c5('0x22')]]=!![];oldEdges[testEdge[_0x59c5('0x22')]]=!![];path['push'](testEdge);w=testEdge[_0x59c5('0x10')](w);break;}}}}return path;}}for(let edge of v[_0x59c5('0x0')]){let w=edge[_0x59c5('0x10')](v);if(!oldEdges[edge['index']]&&this[_0x59c5('0x138')](edge)&&this['searchOrder'][v[_0x59c5('0x22')]]<this[_0x59c5('0x107')][w['index']]){oldEdges[edge[_0x59c5('0x22')]]=!![];path[_0x59c5('0x16')](edge);while(!oldVertices[w[_0x59c5('0x22')]]){for(let testEdge of w[_0x59c5('0x0')]){if(!oldEdges[testEdge[_0x59c5('0x22')]]&&testEdge[_0x59c5('0x10')](w)[_0x59c5('0x22')]==this[_0x59c5('0x132')][w['index']]){oldVertices[w[_0x59c5('0x22')]]=!![];oldEdges[testEdge['index']]=!![];path[_0x59c5('0x16')](testEdge);w=testEdge['getOtherEnd'](w);break;}}}return path;}}return path;}[_0x59c5('0x11e')](){let biconnectedComponents=this[_0x59c5('0x101')]();for(let block of biconnectedComponents){if(!block['isPlanarSingleBicomponent']({}))return![];}return!![];}[_0x59c5('0x139')](embeddingInfo){let edgePermNodes=[];if(this[_0x59c5('0xe3')][_0x59c5('0x19')]<=0x2)return!![];let verticesInStOrder=embeddingInfo[_0x59c5('0x13a')];if(verticesInStOrder==null)verticesInStOrder=this[_0x59c5('0x134')]();let pqTree=new PQTree();for(let edge of this['edges'])edgePermNodes[edge[_0x59c5('0x22')]]=new PQTree[(_0x59c5('0x28'))](edge);let currentVertex=verticesInStOrder[0x0];for(let edge of currentVertex[_0x59c5('0x0')])pqTree['root'][_0x59c5('0x4e')](edgePermNodes[edge[_0x59c5('0x22')]]);for(let j=0x1;j<verticesInStOrder[_0x59c5('0x19')];j++){let edgeNodes=[];currentVertex=verticesInStOrder[j];for(let edge of currentVertex[_0x59c5('0x0')]){if(this['stOrder'][edge[_0x59c5('0x10')](currentVertex)[_0x59c5('0x22')]]<j)edgeNodes[_0x59c5('0x16')](edgePermNodes[edge[_0x59c5('0x22')]]);}let pertRoot=pqTree[_0x59c5('0x29')](edgeNodes);if(pertRoot==null)return![];if(j<verticesInStOrder['length']-0x1){let newRoot=new PQTree['Node']();edgeNodes=[];for(let edge of currentVertex[_0x59c5('0x0')]){if(this[_0x59c5('0x136')][edge[_0x59c5('0x10')](currentVertex)[_0x59c5('0x22')]]>j)edgeNodes[_0x59c5('0x16')](edgePermNodes[edge['index']]);}if(edgeNodes[_0x59c5('0x19')]==0x1){newRoot=edgeNodes[0x0];}else{for(let pqNode of edgeNodes)newRoot[_0x59c5('0x4e')](pqNode);}let pertRootParent=pertRoot[_0x59c5('0x32')];if(pertRoot['type']==NodeType[_0x59c5('0x50')]){pertRoot[_0x59c5('0x13b')](newRoot);if(!pertRoot[_0x59c5('0x61')]){if(pertRoot[_0x59c5('0x7b')]()){pertRoot[_0x59c5('0x49')]=NodeType['pNode'];}else if(pertRoot['endMostChildren']['count']==0x1){if(pertRoot==pqTree['root']){newRoot[_0x59c5('0x32')]=null;pqTree[_0x59c5('0x27')]=newRoot;}else{pertRoot[_0x59c5('0x32')]['replaceChild'](pertRoot,newRoot);}}}}else{if(pertRoot==pqTree['root']){pqTree[_0x59c5('0x27')]=newRoot;}else{pertRoot['parent'][_0x59c5('0x53')](pertRoot,newRoot);}}pertRoot[_0x59c5('0x25')](![]);if(pertRootParent!=null)pertRootParent['reinit'](!![]);}}if(embeddingInfo[_0x59c5('0x13c')])embeddingInfo['savedPqTree']=pqTree;return!![];}[_0x59c5('0x13d')](){let entireEmbedding=new Embedding(this);let biconnectedComponents=this[_0x59c5('0x101')](!![]);for(let bic of biconnectedComponents){let bicompEmbedding=bic[_0x59c5('0x13e')]({});entireEmbedding[_0x59c5('0xa8')](bic,bicompEmbedding);}return entireEmbedding;}['getPlanarEmbeddingSingleBicomp'](embeddingInfo){let embedding=new Map();if(this[_0x59c5('0xe3')][_0x59c5('0x19')]>0x2){let tVertex=this[_0x59c5('0x13f')](embedding,embeddingInfo);if(tVertex!=null)embedding=this[_0x59c5('0x140')](embedding,tVertex);}else{for(let vertex of this[_0x59c5('0xe3')]){embedding['set'](vertex,[]);for(let edge of vertex[_0x59c5('0x0')])embedding[_0x59c5('0x5d')](vertex)[_0x59c5('0x16')](edge);}}return embedding;}[_0x59c5('0x13f')](embedding,embeddingInfo){this[_0x59c5('0xf5')]();let pqTree=new PQTree();let nodemap=new Map();let edgePQNodes=[];for(let edge of this[_0x59c5('0x0')])edgePQNodes[edge[_0x59c5('0x22')]]=new PQTree[(_0x59c5('0x28'))](null,edge);let upwardEdges=[];upwardEdges['push']([]);let verticesInStOrder=embeddingInfo[_0x59c5('0x13a')];if(verticesInStOrder==null)verticesInStOrder=this[_0x59c5('0x134')]();let currentVertex=verticesInStOrder[0x0];for(let edge of currentVertex[_0x59c5('0x0')])pqTree[_0x59c5('0x27')]['addChild'](edgePQNodes[edge[_0x59c5('0x22')]]);for(let j=0x1;j<verticesInStOrder[_0x59c5('0x19')];j++){let edgeNodes=[];currentVertex=verticesInStOrder[j];for(let edge of currentVertex['edges']){if(this[_0x59c5('0x136')][edge[_0x59c5('0x10')](currentVertex)[_0x59c5('0x22')]]<j)edgeNodes[_0x59c5('0x16')](edgePQNodes[edge[_0x59c5('0x22')]]);}let pertinentRoot=pqTree[_0x59c5('0x29')](edgeNodes);if(pertinentRoot==null)return null;let fullLeaves=pertinentRoot['getFullLeaves']();upwardEdges['push'](fullLeaves);if(j<verticesInStOrder[_0x59c5('0x19')]-0x1){edgeNodes=[];for(let edge of currentVertex[_0x59c5('0x0')]){if(this['stOrder'][edge[_0x59c5('0x10')](currentVertex)['index']]>j)edgeNodes['push'](edgePQNodes[edge[_0x59c5('0x22')]]);}let newRoot=edgeNodes[_0x59c5('0x19')]==0x1?edgeNodes[0x0]:new PQTree[(_0x59c5('0x28'))]();if(edgeNodes['length']>0x1){for(let pqNode of edgeNodes)newRoot[_0x59c5('0x4e')](pqNode);}let pertRootParent=pertinentRoot['parent'];if(pertinentRoot[_0x59c5('0x49')]==NodeType[_0x59c5('0x50')]&&(pertinentRoot[_0x59c5('0x47')]!=NodeLabel[_0x59c5('0x48')]||pertinentRoot[_0x59c5('0x61')])){let to=pertinentRoot[_0x59c5('0x8c')]();let from=pertinentRoot[_0x59c5('0x8b')]();pertinentRoot[_0x59c5('0x13b')](newRoot);let dNode=new PQTree['Node'](NodeType[_0x59c5('0x78')],null);nodemap[_0x59c5('0xa7')](dNode,currentVertex);dNode['parent']=newRoot[_0x59c5('0x32')];if(from!=null){from[_0x59c5('0x34')][_0x59c5('0x87')](newRoot,dNode);dNode['immediateSiblings']['add'](from);newRoot[_0x59c5('0x34')][_0x59c5('0x87')](from,dNode);dNode[_0x59c5('0x34')][_0x59c5('0x60')](newRoot);dNode[_0x59c5('0x94')]=newRoot;}else if(to!=null){to[_0x59c5('0x34')]['replace'](newRoot,dNode);dNode['immediateSiblings'][_0x59c5('0x60')](to);newRoot[_0x59c5('0x34')][_0x59c5('0x87')](to,dNode);dNode[_0x59c5('0x34')][_0x59c5('0x60')](newRoot);dNode[_0x59c5('0x94')]=to;}if(!pertinentRoot['pseudoRoot']){if(pertinentRoot[_0x59c5('0x7b')]()){pertinentRoot[_0x59c5('0x49')]=NodeType[_0x59c5('0x4a')];}else if(pertinentRoot[_0x59c5('0x5c')]['count']==0x1){if(pertinentRoot==pqTree['root']){newRoot['parent']=null;pqTree[_0x59c5('0x27')]=newRoot;}else{pertinentRoot['parent'][_0x59c5('0x53')](pertinentRoot,newRoot);}}}}else{if(pertinentRoot==pqTree['root'])pqTree[_0x59c5('0x27')]=newRoot;else pertinentRoot[_0x59c5('0x32')][_0x59c5('0x53')](pertinentRoot,newRoot);}pertinentRoot['reinit'](![]);if(pertRootParent!=null)pertRootParent[_0x59c5('0x25')](!![]);}}let desiredOrder=embeddingInfo[_0x59c5('0x141')];if(desiredOrder!=null){let h=verticesInStOrder[_0x59c5('0x19')]-0x1;let currentOrder=[];for(let node of upwardEdges[h])currentOrder[_0x59c5('0x16')](node[_0x59c5('0x67')]);let qNodes=[];pqTree[_0x59c5('0x27')]['getAllNodes'](qNodes,NodeType[_0x59c5('0x50')]);for(let qNode of qNodes){let leaves=qNode[_0x59c5('0x90')]();let dCurrent=currentOrder['indexOf'](leaves[0x0]['data'])-currentOrder['indexOf'](leaves[0x1][_0x59c5('0x67')]);let dDesired=desiredOrder[_0x59c5('0x9b')](leaves[0x0][_0x59c5('0x67')])-desiredOrder[_0x59c5('0x9b')](leaves[0x1][_0x59c5('0x67')]);if(dCurrent*dDesired<0x0){for(let child of qNode[_0x59c5('0x93')]())if(child[_0x59c5('0x142')]==NodeType['directionIndicator'])child[_0x59c5('0x69')]=!child[_0x59c5('0x69')];}}}for(let h=verticesInStOrder['length']-0x1;h>=0x0;h--){let fullLeaves=upwardEdges[h];for(let k=0x0;k<fullLeaves['length'];k++){let pqNode=fullLeaves[k];if(pqNode['type']==NodeType[_0x59c5('0x78')]){if(pqNode[_0x59c5('0x69')]){let indexOfNodeToReverse=this[_0x59c5('0x136')][nodemap[_0x59c5('0x5d')](pqNode)[_0x59c5('0x22')]];let edgesOfNodeToReverse=upwardEdges[indexOfNodeToReverse];let edgesOfNodeReversed=[];for(let x=edgesOfNodeToReverse['length']-0x1;x>=0x0;x--){let node=edgesOfNodeToReverse[x];if(node[_0x59c5('0x49')]==NodeType[_0x59c5('0x78')])node[_0x59c5('0x69')]=!node[_0x59c5('0x69')];edgesOfNodeReversed[_0x59c5('0x16')](node);}upwardEdges[indexOfNodeToReverse]=edgesOfNodeReversed;}}}}for(let h=0x0;h<verticesInStOrder['length'];h++){currentVertex=verticesInStOrder[h];let fullLeaves=upwardEdges[h];let orderedEdges=[];embedding[_0x59c5('0xa7')](currentVertex,orderedEdges);for(let pqNode of fullLeaves){if(pqNode[_0x59c5('0x49')]!=NodeType[_0x59c5('0x78')])orderedEdges[_0x59c5('0x16')](pqNode['data']);}}if(embeddingInfo[_0x59c5('0x13c')])embeddingInfo[_0x59c5('0x143')]=pqTree;return verticesInStOrder[verticesInStOrder['length']-0x1];}[_0x59c5('0x140')](upEmbedding,tVertex){let entireEmbedding=new Map();for(const [vertex,edges]of upEmbedding['entries']())entireEmbedding[_0x59c5('0xa7')](vertex,edges[_0x59c5('0x9d')]());let oldVertices=createBoolArray(this[_0x59c5('0xe3')][_0x59c5('0x19')]);this[_0x59c5('0x144')](upEmbedding,entireEmbedding,tVertex,oldVertices);return entireEmbedding;}[_0x59c5('0x144')](upEmbedding,entireEmbedding,vertex,oldVertices){oldVertices[vertex[_0x59c5('0x22')]]=!![];for(let currentEdge of upEmbedding[_0x59c5('0x5d')](vertex)){let otherVertex=currentEdge[_0x59c5('0x10')](vertex);entireEmbedding[_0x59c5('0x5d')](otherVertex)[_0x59c5('0x145')](currentEdge);if(!oldVertices[otherVertex[_0x59c5('0x22')]])this[_0x59c5('0x144')](upEmbedding,entireEmbedding,otherVertex,oldVertices);}}[_0x59c5('0x146')](edgesToDelete,crossingConstrainedEdges){return this[_0x59c5('0x147')](edgesToDelete,crossingConstrainedEdges);}[_0x59c5('0x148')](edgesToDelete,knownPlanarEdges,crossingConstrainedEdges){let planarSubgraph=new Graph();this[_0x59c5('0xf5')]();let vmap=new Map();let cvmap=new Map();for(let v of this[_0x59c5('0xe3')]){let copy=new Vertex();copy[_0x59c5('0x149')]=v[_0x59c5('0x149')];vmap[_0x59c5('0xa7')](v,copy);cvmap['set'](copy,v);planarSubgraph['vertices'][_0x59c5('0x16')](copy);}let emap=new Map();let cemap=new Map();planarSubgraph[_0x59c5('0xdd')]=vmap;planarSubgraph[_0x59c5('0xaa')]=cvmap;planarSubgraph[_0x59c5('0xde')]=emap;planarSubgraph[_0x59c5('0xab')]=cemap;if(knownPlanarEdges!=null){for(let e of knownPlanarEdges){let copy=planarSubgraph[_0x59c5('0xf6')](vmap[_0x59c5('0x5d')](e[_0x59c5('0x8')]),vmap[_0x59c5('0x5d')](e[_0x59c5('0xb')]));copy[_0x59c5('0x149')]=e[_0x59c5('0x149')];copy['weight']=e['weight'];emap[_0x59c5('0xa7')](e,copy);cemap[_0x59c5('0xa7')](copy,e);}if(knownPlanarEdges[_0x59c5('0x14a')]==this[_0x59c5('0x0')][_0x59c5('0x19')])return planarSubgraph;}if(crossingConstrainedEdges!=null){if(knownPlanarEdges==null)knownPlanarEdges=new Set();for(let e of crossingConstrainedEdges){if(knownPlanarEdges[_0x59c5('0xac')](e))continue;let copy=planarSubgraph['createEdge'](vmap[_0x59c5('0x5d')](e[_0x59c5('0x8')]),vmap[_0x59c5('0x5d')](e[_0x59c5('0xb')]));copy[_0x59c5('0x149')]=e[_0x59c5('0x149')];if(!planarSubgraph[_0x59c5('0x11e')]()){edgesToDelete[_0x59c5('0x14b')]();return this[_0x59c5('0x148')](edgesToDelete,null,crossingConstrainedEdges);}knownPlanarEdges[_0x59c5('0x60')](e);copy['weight']=e[_0x59c5('0x2')];emap[_0x59c5('0xa7')](e,copy);cemap[_0x59c5('0xa7')](copy,e);}}for(let e of this[_0x59c5('0x0')]){if(knownPlanarEdges!=null&&knownPlanarEdges[_0x59c5('0xac')](e))continue;let copy=planarSubgraph[_0x59c5('0xf6')](vmap[_0x59c5('0x5d')](e[_0x59c5('0x8')]),vmap[_0x59c5('0x5d')](e['destination']));copy[_0x59c5('0x149')]=e[_0x59c5('0x149')];if(!planarSubgraph[_0x59c5('0x11e')]()){planarSubgraph['removeEdge'](copy);edgesToDelete['add'](e);}copy[_0x59c5('0x2')]=e[_0x59c5('0x2')];emap[_0x59c5('0xa7')](e,copy);cemap[_0x59c5('0xa7')](copy,e);}return planarSubgraph;}[_0x59c5('0x147')](edgesToDelete,crossingConstrainedEdges){this['setItemIndices']();let order=createIdArray(this[_0x59c5('0xe3')][_0x59c5('0x19')],-0x1);let remaining=new Set();for(let v of this[_0x59c5('0xe3')])remaining[_0x59c5('0x60')](v);let last=null;for(let i=0x0;i<this[_0x59c5('0xe3')][_0x59c5('0x19')];++i){last=this[_0x59c5('0x14c')](last,remaining);order[last[_0x59c5('0x22')]]=i;remaining[_0x59c5('0xad')](last);}let intervals=[];for(let e of this[_0x59c5('0x0')]){let originPos=order[e[_0x59c5('0x8')][_0x59c5('0x22')]];let destPos=order[e[_0x59c5('0xb')][_0x59c5('0x22')]];intervals[_0x59c5('0x16')](new Interval(Math[_0x59c5('0xc5')](originPos,destPos),Math[_0x59c5('0xc6')](originPos,destPos)));}let overlapGraph=new Factory[(_0x59c5('0x14d'))](intervals);let veMap=new Map();for(let i=0x0;i<this[_0x59c5('0x0')][_0x59c5('0x19')];++i)veMap[_0x59c5('0xa7')](overlapGraph[_0x59c5('0xe3')][i],this[_0x59c5('0x0')][i]);let maxIndependentSet=overlapGraph['maxIndependentSet']();let planarEdges=new Set();for(let v of maxIndependentSet)planarEdges[_0x59c5('0x60')](veMap[_0x59c5('0x5d')](v));for(let v of maxIndependentSet){Utils[_0x59c5('0x9')](overlapGraph[_0x59c5('0x14e')],overlapGraph[_0x59c5('0x14f')][_0x59c5('0x5d')](v));overlapGraph[_0x59c5('0xf3')](v);}maxIndependentSet=overlapGraph[_0x59c5('0x150')]();for(let v of maxIndependentSet)planarEdges[_0x59c5('0x60')](veMap['get'](v));return this[_0x59c5('0x148')](edgesToDelete,planarEdges,crossingConstrainedEdges);}[_0x59c5('0x14c')](vertex,vset){if(vertex==null)return this['minDegreeVertex'](vset);let minAdjNeighbor=null;let minAdj=Number[_0x59c5('0x151')];for(let e of vertex['edges']){let neighbor=e[_0x59c5('0x10')](vertex);if(!vset[_0x59c5('0xac')](neighbor))continue;let adj=this[_0x59c5('0x152')](neighbor,vset);if(adj<minAdj){minAdj=adj;minAdjNeighbor=neighbor;}}return minAdjNeighbor||this[_0x59c5('0x153')](vset);}[_0x59c5('0x153')](vset){let minDegree=Number['MAX_SAFE_INTEGER'];let minDegreeVertex=null;for(let v of vset){if(v[_0x59c5('0x17')]()<minDegree){minDegreeVertex=v;minDegree=v['degree']();}}return minDegreeVertex;}[_0x59c5('0x152')](vertex,vset){let count=0x0;for(let e of vertex[_0x59c5('0x0')]){if(vset[_0x59c5('0xac')](e[_0x59c5('0x10')](vertex)))count++;}return count;}[_0x59c5('0x11f')](faceVertices){if(faceVertices[_0x59c5('0x19')]<0x2)return this[_0x59c5('0x13d')]();let virtualVertex=this[_0x59c5('0xf4')]();let virtualEdges=[];for(let vertex of faceVertices){let virtualEdge=this[_0x59c5('0xf6')](virtualVertex,vertex);virtualEdges[_0x59c5('0x16')](virtualEdge);}let planarization=this[_0x59c5('0x154')](null,virtualEdges);planarization[_0x59c5('0xdc')]();let embedding=planarization[_0x59c5('0x13d')]();this[_0x59c5('0xf3')](virtualVertex);let virtualCopy=planarization[_0x59c5('0xdd')][_0x59c5('0x5d')](virtualVertex);embedding[_0x59c5('0x9')](virtualCopy);return new Embedding(null,embedding,planarization['vertexCopyToOrigMap'],planarization[_0x59c5('0xab')]);}[_0x59c5('0x154')](edgeToDummyEdgesMap,crossingConstrainedEdges){if(crossingConstrainedEdges!=null){for(let e of this['edges'])e[_0x59c5('0x2')]=0x1;for(let e of crossingConstrainedEdges)e[_0x59c5('0x2')]=this[_0x59c5('0x0')][_0x59c5('0x19')]*0x3e8;}let splitMap=new Map();let splitTrees=new Map();let edgesToDelete=new Set();let planarSubgraph=this[_0x59c5('0x146')](edgesToDelete,crossingConstrainedEdges);if(edgesToDelete['size']==0x0)return planarSubgraph;let dualGraph=planarSubgraph[_0x59c5('0x155')](!![]);for(let e of edgesToDelete){let v1=planarSubgraph['vertexOrigToCopyMap'][_0x59c5('0x5d')](e[_0x59c5('0x8')]);let v2=planarSubgraph[_0x59c5('0xdd')][_0x59c5('0x5d')](e[_0x59c5('0xb')]);let oFaces=dualGraph['getIncidentFaces'](v1);let dFaces=dualGraph[_0x59c5('0x156')](v2);let oFaceVertices=dualGraph[_0x59c5('0x157')](oFaces);let dFaceVertices=dualGraph['getFaceVertices'](dFaces);let commonEdges=[];let dummyEdges=[];let dummyEdgePath=[];dummyEdgePath[_0x59c5('0x16')](v1);let pathInDualGraph=crossingConstrainedEdges==null?dualGraph[_0x59c5('0xf9')](oFaceVertices,dFaceVertices):dualGraph[_0x59c5('0xfd')](oFaceVertices,dFaceVertices);for(let i=0x0;i<pathInDualGraph[_0x59c5('0x19')]-0x1;++i){let f1=dualGraph['vertexToFaceMap'][_0x59c5('0x5d')](pathInDualGraph[i]);let f2=dualGraph[_0x59c5('0x158')][_0x59c5('0x5d')](pathInDualGraph[i+0x1]);let commonEdge=crossingConstrainedEdges==null?dualGraph['getCommonEdge'](f1,f2):dualGraph[_0x59c5('0x159')](f1,f2);commonEdges[_0x59c5('0x16')](commonEdge);let splitParent=null;if(splitMap['has'](commonEdge)){splitParent=splitMap[_0x59c5('0x5d')](commonEdge);}else{let tree=new BinaryTree(commonEdge);splitParent=tree[_0x59c5('0x27')];splitMap[_0x59c5('0xa7')](commonEdge,splitParent);if(!commonEdge[_0x59c5('0xf7')])splitTrees[_0x59c5('0xa7')](commonEdge,tree);}let dummy=planarSubgraph[_0x59c5('0x15a')](commonEdge);dummyEdgePath[_0x59c5('0x16')](dummy);if(splitParent!=null){splitParent[_0x59c5('0xcb')](dummy[_0x59c5('0x1')][0x0],dummy[_0x59c5('0xa')][0x0]);splitMap[_0x59c5('0xa7')](dummy[_0x59c5('0x1')][0x0],splitParent[_0x59c5('0x6a')]);splitMap[_0x59c5('0xa7')](dummy[_0x59c5('0xa')][0x0],splitParent[_0x59c5('0x71')]);}}dummyEdgePath[_0x59c5('0x16')](v2);for(let i=0x0;i<dummyEdgePath[_0x59c5('0x19')]-0x1;++i){let dummy=planarSubgraph[_0x59c5('0xf6')](dummyEdgePath[i],dummyEdgePath[i+0x1]);dummy['temporary']=!![];dummyEdges['push'](dummy);}for(let i=0x0;i<commonEdges[_0x59c5('0x19')];++i){let replaceInFaces=commonEdges[i];let addedVertex=dummyEdgePath[i+0x1];dualGraph['replaceEdge'](replaceInFaces,addedVertex);}for(let i=0x0;i<dummyEdges['length'];++i){dualGraph[_0x59c5('0x15b')](dualGraph[_0x59c5('0x158')][_0x59c5('0x5d')](pathInDualGraph[i]),dummyEdges[i]);}if(edgeToDummyEdgesMap!=null)edgeToDummyEdgesMap[_0x59c5('0xa7')](e,dummyEdges);dualGraph[_0x59c5('0xf5')]();}if(edgeToDummyEdgesMap!=null){for(const [edge,tree]of splitTrees[_0x59c5('0xa9')]()){edgeToDummyEdgesMap[_0x59c5('0xa7')](planarSubgraph['edgeCopyToOrigMap'][_0x59c5('0x5d')](edge),tree[_0x59c5('0xc9')]());}for(let e of edgesToDelete){let dl=edgeToDummyEdgesMap['get'](e)[_0x59c5('0x9d')]();edgeToDummyEdgesMap[_0x59c5('0xa7')](e,[]);for(let d of dl){if(splitMap['has'](d))edgeToDummyEdgesMap['get'](e)[_0x59c5('0x16')](...splitMap[_0x59c5('0x5d')](d)[_0x59c5('0xc9')]());else edgeToDummyEdgesMap[_0x59c5('0x5d')](e)[_0x59c5('0x16')](d);}}}return planarSubgraph;}[_0x59c5('0x15c')](){if(this['vertices']['length']<=0x1||this[_0x59c5('0x0')][_0x59c5('0x19')]<=0x1)return[];if(this['vertices'][_0x59c5('0x19')]==0x2){var result=[];var edge=this[_0x59c5('0x0')][0x0];edge['reverse']();result[_0x59c5('0x16')](edge);return result;}var copy=this[_0x59c5('0x3')](!![]);var n=this[_0x59c5('0xe3')]['length'];var vertexBuckets=new Map();copy[_0x59c5('0xe3')]['forEach'](function(v){addVertexToBucket(v,n,vertexBuckets);});var sl=[];var sr=[];while(copy[_0x59c5('0xe3')][_0x59c5('0x19')]>0x0){if(vertexBuckets['has'](0x2-n)){var sinks=vertexBuckets['get'](0x2-n);while(sinks[_0x59c5('0x19')]>0x0){var sink=sinks[_0x59c5('0xe1')]();sink[_0x59c5('0x0')]['forEach'](function(e){var neighbor=e['getOtherEnd'](sink);var bucket=getBucket(neighbor,n);Utils[_0x59c5('0x9')](vertexBuckets[_0x59c5('0x5d')](bucket),neighbor);neighbor[_0x59c5('0x7')](e);addVertexToBucket(neighbor,n,vertexBuckets);});Utils[_0x59c5('0x9')](copy[_0x59c5('0xe3')],sink);sr[_0x59c5('0x145')](sink);}}if(vertexBuckets[_0x59c5('0xac')](n-0x2)){var sources=vertexBuckets[_0x59c5('0x5d')](n-0x2);while(sources['length']>0x0){var source=sources[_0x59c5('0xe1')]();source['edges']['forEach'](function(e){var neighbor=e['getOtherEnd'](source);var bucket=getBucket(neighbor,n);Utils[_0x59c5('0x9')](vertexBuckets[_0x59c5('0x5d')](bucket),neighbor);neighbor[_0x59c5('0x7')](e);addVertexToBucket(neighbor,n,vertexBuckets);});Utils[_0x59c5('0x9')](copy[_0x59c5('0xe3')],source);sl[_0x59c5('0x16')](source);}}if(copy[_0x59c5('0xe3')][_0x59c5('0x19')]>0x0){for(var i=n-0x3;i>0x2-n;i--){if(vertexBuckets[_0x59c5('0xac')](i)&&vertexBuckets['get'](i)['length']>0x0){var maxdiff=vertexBuckets[_0x59c5('0x5d')](i);var v=maxdiff[_0x59c5('0xe1')]();v[_0x59c5('0x0')][_0x59c5('0x15')](function(e){var neighbor=e[_0x59c5('0x10')](v);var bucket=getBucket(neighbor,n);Utils[_0x59c5('0x9')](vertexBuckets[_0x59c5('0x5d')](bucket),neighbor);neighbor[_0x59c5('0x7')](e);addVertexToBucket(neighbor,n,vertexBuckets);});Utils['remove'](copy['vertices'],v);sl['push'](v);break;}}}}sl[_0x59c5('0x16')](...sr);var vertexOrder=new Map();for(var i=0x0;i<this['vertices']['length'];i++)vertexOrder[_0x59c5('0xa7')](copy[_0x59c5('0xaa')]['get'](sl[i]),i);var reversedEdges=[];this[_0x59c5('0x0')][_0x59c5('0x15')](function(e){if(vertexOrder[_0x59c5('0x5d')](e[_0x59c5('0x8')])>vertexOrder[_0x59c5('0x5d')](e[_0x59c5('0xb')])){e['reverse']();reversedEdges['push'](e);}});return reversedEdges;}['getDualGraph'](cacheIncidentFaces){let embedding=this[_0x59c5('0x13d')]();return new Factory['DualGraph'](this,embedding,cacheIncidentFaces);}[_0x59c5('0x15d')](embedding,s,t){return new Factory[(_0x59c5('0x120'))](this,embedding,!![],s,t);}['topologicalSort'](){this[_0x59c5('0xf5')]();this[_0x59c5('0x100')]=0x0;this[_0x59c5('0x15e')]=0x0;var vertices=this[_0x59c5('0xe3')];var postOrder=createIdArray(vertices[_0x59c5('0x19')],-0x1);var topologicalOrder=createIdArray(vertices['length'],-0x1);this['searchOrder']=createIdArray(vertices[_0x59c5('0x19')],-0x1);for(var v=0x0;v<vertices['length'];v++){if(this['searchOrder'][v]==-0x1){var acyclic=this[_0x59c5('0x15f')](postOrder,topologicalOrder,v);if(!acyclic)return null;}}topologicalOrder['reverse']();return topologicalOrder;}[_0x59c5('0x15f')](postOrder,topologicalOrder,dest){var destVertex=this[_0x59c5('0xe3')][dest];this['searchOrder'][dest]=this[_0x59c5('0x100')]++;for(var e=0x0;e<destVertex[_0x59c5('0xa')][_0x59c5('0x19')];e++){var edge=destVertex[_0x59c5('0xa')][e];var test=edge[_0x59c5('0xb')][_0x59c5('0x22')];if(this[_0x59c5('0x107')][test]==-0x1){var acyclic=this[_0x59c5('0x15f')](postOrder,topologicalOrder,test);if(!acyclic)return![];}else if(postOrder[test]==-0x1){return![];}}topologicalOrder[this[_0x59c5('0x15e')]]=dest;postOrder[dest]=this['postCounter']++;return!![];}[_0x59c5('0x160')](minNumber){if(minNumber==null)minNumber=0x0;let tsort=this[_0x59c5('0x161')]();return this[_0x59c5('0x162')](tsort,minNumber);}[_0x59c5('0x162')](tsort,minNumber){if(tsort==null)return null;let wtn=createIdArray(this[_0x59c5('0xe3')][_0x59c5('0x19')],minNumber);for(let i=0x0;i<this['vertices']['length'];++i){let v=this[_0x59c5('0xe3')][tsort[i]];for(let e of v[_0x59c5('0xa')])if(wtn[v[_0x59c5('0x22')]]+e[_0x59c5('0x2')]>wtn[e['destination']['index']])wtn[e[_0x59c5('0xb')][_0x59c5('0x22')]]=wtn[v[_0x59c5('0x22')]]+e[_0x59c5('0x2')];}return wtn;}[_0x59c5('0x163')](maxDegree,embedding){let toReplace=[];for(let v of this['vertices']){if(v[_0x59c5('0x17')]()>maxDegree)toReplace['push'](v);}let replacementMap=new Map();for(let v of toReplace)replacementMap[_0x59c5('0xa7')](v,this[_0x59c5('0x164')](v,maxDegree,embedding));return replacementMap;}['splitToMaxDegreeV'](vertex,maxDegree,embedding){let rplcSize=Math[_0x59c5('0xd4')]((vertex[_0x59c5('0x17')]()+0x1)/0x2);let dummyCycle=[];dummyCycle[0x0]=vertex;for(let i=0x1;i<rplcSize;++i){let dummy=new Vertex();dummyCycle[i]=dummy;this[_0x59c5('0xe3')][_0x59c5('0x16')](dummy);}let ve=embedding[_0x59c5('0x5d')](vertex)[_0x59c5('0x9d')]();for(let i=0x2;i<ve[_0x59c5('0x19')];++i){let e=ve[i];if(e['origin']==vertex)e[_0x59c5('0x1f')](dummyCycle[Math[_0x59c5('0xd4')](i/0x2)]);else if(e[_0x59c5('0xb')]==vertex)e[_0x59c5('0x1d')](dummyCycle[Math['floor'](i/0x2)]);}let replacement=new Graph();replacement[_0x59c5('0xe3')][_0x59c5('0x16')](...dummyCycle);for(let i=0x0;i<dummyCycle[_0x59c5('0x19')];++i){let ce=this[_0x59c5('0xf6')](dummyCycle[i],dummyCycle[(i+0x1)%dummyCycle[_0x59c5('0x19')]]);ce[_0x59c5('0xf7')]=!![];replacement['edges'][_0x59c5('0x16')](ce);}return replacement;}['reorderTopologically'](){let topologicalOrder=this[_0x59c5('0x161')]();if(topologicalOrder==null)throw new Error(_0x59c5('0x165'));let sortedVertices=[];for(let i=0x0;i<this[_0x59c5('0xe3')][_0x59c5('0x19')];++i)sortedVertices[_0x59c5('0x16')](this['vertices'][topologicalOrder[i]]);this[_0x59c5('0xe3')]=sortedVertices;this[_0x59c5('0xf5')]();}['maxWeightedCliqueOfTransitiveDAG'](){let g=this[_0x59c5('0x3')](!![]);g[_0x59c5('0x166')]();let sectionMaxCliqueWeights=createIdArray(this['vertices'][_0x59c5('0x19')],0x0);for(let i=0x0;i<this[_0x59c5('0xe3')][_0x59c5('0x19')];++i){let v=g['vertices'][i];let maxCliqueWeight=v[_0x59c5('0x2')];for(let e of v[_0x59c5('0x1')])maxCliqueWeight=Math[_0x59c5('0xc6')](maxCliqueWeight,sectionMaxCliqueWeights[e[_0x59c5('0x8')][_0x59c5('0x22')]]+v['weight']);sectionMaxCliqueWeights[i]=maxCliqueWeight;}let maxCliqueHighest=null;let sectionMaxCliqueWeight=-0x1;for(let i=0x0;i<this[_0x59c5('0xe3')][_0x59c5('0x19')];++i){if(sectionMaxCliqueWeight<sectionMaxCliqueWeights[i]){maxCliqueHighest=g[_0x59c5('0xe3')][i];sectionMaxCliqueWeight=sectionMaxCliqueWeights[i];}}if(maxCliqueHighest==null)throw Error(_0x59c5('0x167'));let maxClique=[];maxClique[_0x59c5('0x16')](g['vertexCopyToOrigMap'][_0x59c5('0x5d')](maxCliqueHighest));let sectionMaxCliqueHighest=maxCliqueHighest;while(sectionMaxCliqueHighest['inEdges'][_0x59c5('0x19')]>0x0){sectionMaxCliqueWeight=-0x1;for(let e of sectionMaxCliqueHighest[_0x59c5('0x1')]){let v=e[_0x59c5('0x8')];if(sectionMaxCliqueWeight<sectionMaxCliqueWeights[v[_0x59c5('0x22')]]){sectionMaxCliqueHighest=v;sectionMaxCliqueWeight=sectionMaxCliqueWeights[v[_0x59c5('0x22')]];}}maxClique[_0x59c5('0x16')](g['vertexCopyToOrigMap']['get'](sectionMaxCliqueHighest));}return maxClique;}}function getBucket(vertex,n){if(vertex[_0x59c5('0xa')][_0x59c5('0x19')]==0x0)return 0x2-n;else if(vertex[_0x59c5('0x1')][_0x59c5('0x19')]==0x0)return n-0x2;else return vertex['outEdges'][_0x59c5('0x19')]-vertex['inEdges'][_0x59c5('0x19')];}function addVertexToBucket(vertex,n,vertexBuckets){var bucket=getBucket(vertex,n);if(!vertexBuckets[_0x59c5('0xac')](bucket))vertexBuckets[_0x59c5('0xa7')](bucket,[]);vertexBuckets[_0x59c5('0x5d')](bucket)[_0x59c5('0x16')](vertex);}function createIdArray(size,value){var array=[];for(var i=0x0;i<size;++i)array[i]=value;return array;}function createBoolArray(size){let array=[];for(let i=0x0;i<size;++i)array[i]=![];return array;}class BlockCutpointGraph extends Graph{constructor(graph){super();this[_0x59c5('0x168')]=graph;this[_0x59c5('0x169')]=new Map();this[_0x59c5('0x16a')]=new Map();this['blocks']=graph[_0x59c5('0x101')](!![],(b,c)=>this[_0x59c5('0x16b')](b,c));}[_0x59c5('0x16b')](componentBlocks,componentCuts){for(let block of componentBlocks){let bNode=this['addVertex']();bNode[_0x59c5('0x67')]=block;block[_0x59c5('0xdc')]();this[_0x59c5('0x169')][_0x59c5('0xa7')](block,bNode);}if(componentCuts==null)return;for(let cut of componentCuts){let cNode=this[_0x59c5('0xf4')](cut[_0x59c5('0x149')]);cNode[_0x59c5('0x67')]=cut;this['cutToCnodeMap']['set'](cut,cNode);for(let block of componentBlocks){if(block[_0x59c5('0xdd')]['has'](cut))this['createEdge'](this['blockToBnodeMap']['get'](block),cNode);}}}[_0x59c5('0x16c')](block){let cutVertices=[];let bNode=this[_0x59c5('0x169')]['get'](block);for(let edge of bNode[_0x59c5('0x0')]){let vertex=edge[_0x59c5('0x10')](bNode);cutVertices[_0x59c5('0x16')](vertex[_0x59c5('0x67')]);}return cutVertices;}['cutVerticesV'](bNode){let cutVertices=[];for(let edge of bNode[_0x59c5('0x0')]){let vertex=edge[_0x59c5('0x10')](bNode);cutVertices[_0x59c5('0x16')](vertex['data']);}return cutVertices;}[_0x59c5('0x16d')](bNode){return bNode['edges'][_0x59c5('0x19')]==0x1;}[_0x59c5('0x16e')](cutVertex){let adjacentBlocks=[];let cNode=this[_0x59c5('0x16a')][_0x59c5('0x5d')](cutVertex);for(let edge of cNode[_0x59c5('0x0')]){let vertex=edge[_0x59c5('0x10')](cNode);adjacentBlocks['push'](vertex[_0x59c5('0x67')]);}return adjacentBlocks;}['directFromRoot'](){this[_0x59c5('0x27')]=null;let minDegree=Number[_0x59c5('0x151')];for(let vertex of this[_0x59c5('0xe3')]){if(this[_0x59c5('0x16f')](vertex)&&vertex[_0x59c5('0x17')]()<minDegree){this[_0x59c5('0x27')]=vertex;minDegree=this[_0x59c5('0x27')][_0x59c5('0x17')]();}}this[_0x59c5('0x170')](null,this[_0x59c5('0x27')]);}[_0x59c5('0x170')](parent,vertex){for(let edge of vertex['edges']){let otherEnd=edge[_0x59c5('0x10')](vertex);if(otherEnd==parent){if(edge['destination']==parent)edge[_0x59c5('0xa2')]();}else{this['directFrom'](vertex,otherEnd);}}}[_0x59c5('0x114')](){if(this[_0x59c5('0xe3')][_0x59c5('0x19')]<0x2)return null;for(let vertex of this[_0x59c5('0xe3')]){if(this[_0x59c5('0x171')](vertex)){let pendantCut=!![];for(let edge of vertex['outEdges']){let child=edge[_0x59c5('0xb')];if(!this[_0x59c5('0x16d')](child)){pendantCut=![];break;}}if(pendantCut)return vertex;}}return null;}['getOutsideVertex'](bNode){let block=this[_0x59c5('0x172')](bNode);let cutpoints=this[_0x59c5('0x173')](this[_0x59c5('0x174')](bNode),block['vertexOrigToCopyMap']);return block['vertexCopyToOrigMap'][_0x59c5('0x5d')](block['getOutsideVertexCP'](cutpoints));}[_0x59c5('0x11a')](bNode,neighborCnode){let block=this['getBlock'](bNode);let neighborCutvertex=this['getCutvertex'](neighborCnode);let copy=block[_0x59c5('0xdd')][_0x59c5('0x5d')](neighborCutvertex);let cutpoints=[];cutpoints[_0x59c5('0x16')](copy);return block['vertexCopyToOrigMap']['get'](block['getOutsideVertexCPN'](cutpoints,copy));}[_0x59c5('0x172')](bNode){return bNode['data'];}[_0x59c5('0x119')](cNode){return cNode[_0x59c5('0x67')];}[_0x59c5('0x175')](cut){return this[_0x59c5('0x16a')][_0x59c5('0x5d')](cut);}[_0x59c5('0x173')](vertices,map){let mappedVertices=[];for(let vertex of vertices)mappedVertices[_0x59c5('0x16')](map[_0x59c5('0x5d')](vertex));return mappedVertices;}[_0x59c5('0x11b')](bnodes,parent){let union=new Set();for(let bNode of bnodes){let block=this[_0x59c5('0x172')](bNode);Utils[_0x59c5('0x115')](union,this[_0x59c5('0x173')](block[_0x59c5('0xe3')],block[_0x59c5('0xaa')]));}let mergedBlock=this[_0x59c5('0x168')][_0x59c5('0xda')](union[_0x59c5('0xb7')](),!![]);mergedBlock['createReverseMaps']();parent['data']=mergedBlock;this[_0x59c5('0x169')][_0x59c5('0xa7')](mergedBlock,parent);for(let bNode of bnodes){if(bNode==parent)continue;let edges=bNode[_0x59c5('0xa')][_0x59c5('0x9d')]();for(let edge of edges)edge[_0x59c5('0x1f')](parent);}}[_0x59c5('0x11c')](vertex,parent){vertex[_0x59c5('0x1')][0x0][_0x59c5('0x1f')](parent);}[_0x59c5('0x11d')](cNode){this['cutToCnodeMap']['delete'](this[_0x59c5('0x119')](cNode));this[_0x59c5('0xf3')](cNode);}['removeBnode'](bNode){this[_0x59c5('0x169')]['delete'](this[_0x59c5('0x172')](bNode));this['removeVertex'](bNode);}[_0x59c5('0x171')](vertex){return vertex[_0x59c5('0x67')]instanceof Vertex;}['isBnode'](vertex){return vertex[_0x59c5('0x67')]instanceof Graph;}}Factory[_0x59c5('0x112')]=BlockCutpointGraph;class DualGraph extends Graph{constructor(graph,embedding,cacheIncidentFaces,s,t){super();this[_0x59c5('0xa5')]=graph;this[_0x59c5('0xa6')]=embedding;this[_0x59c5('0xc4')]=[];this[_0x59c5('0x176')]=new Map();if(cacheIncidentFaces)this[_0x59c5('0x177')]=new Map();embedding['createDirectedEdges']();for(let v of embedding[_0x59c5('0xe3')]){for(let e of embedding[_0x59c5('0x5d')](v)){if(this['edgeToFaceMap']['has'](e))continue;let f=new Face();this['faces'][_0x59c5('0x16')](f);let nextE=e;do{this[_0x59c5('0x176')][_0x59c5('0xa7')](nextE,f);f[_0x59c5('0x0')]['push'](nextE);nextE=embedding['getNextRightFaceEdge'](nextE);}while(nextE!=e);if(cacheIncidentFaces){for(let be of f[_0x59c5('0x0')]){let o=be[_0x59c5('0x8')];let ofaces=null;if(!this[_0x59c5('0x177')][_0x59c5('0xac')](o)){ofaces=[];this[_0x59c5('0x177')][_0x59c5('0xa7')](o,ofaces);}else{ofaces=this[_0x59c5('0x177')][_0x59c5('0x5d')](o);}if(ofaces[_0x59c5('0x19')]==0x0||ofaces[0x0]!=f&&ofaces[ofaces['length']-0x1]!=f)ofaces[_0x59c5('0x16')](f);}}}}this[_0x59c5('0x178')]=new Map();this['vertexToFaceMap']=new Map();for(let f of this[_0x59c5('0xc4')])this[_0x59c5('0x179')](f);for(let e of graph['edges'])this[_0x59c5('0x17a')](e);this[_0x59c5('0xf5')]();if(s)this[_0x59c5('0x17b')](s,t);}[_0x59c5('0x17b')](s,t){let sFaces=this[_0x59c5('0x156')](s);let externalFace=null;for(let f of sFaces){if(f[_0x59c5('0xc')](t)){if(externalFace==null){externalFace=f;}else{if(f[_0x59c5('0x0')]['length']>externalFace['edges'][_0x59c5('0x19')])externalFace=f;}}}this[_0x59c5('0x17c')]=externalFace;this['leftExVertex']=this[_0x59c5('0x178')][_0x59c5('0x5d')](this['leftExFace']);this['rightExFace']=new Face();this[_0x59c5('0xc4')][_0x59c5('0x16')](this[_0x59c5('0x17d')]);this[_0x59c5('0x17e')]=new Vertex();this[_0x59c5('0xe3')]['push'](this[_0x59c5('0x17e')]);this['faceToVertexMap'][_0x59c5('0xa7')](this[_0x59c5('0x17d')],this['rightExVertex']);this[_0x59c5('0x158')]['set'](this[_0x59c5('0x17e')],this[_0x59c5('0x17d')]);let inEdges=this[_0x59c5('0x17f')][_0x59c5('0x1')][_0x59c5('0x9d')]();for(let e of inEdges){this['leftExVertex'][_0x59c5('0x7')](e);e[_0x59c5('0xb')]=this[_0x59c5('0x17e')];this[_0x59c5('0x17e')][_0x59c5('0x1')][_0x59c5('0x16')](e);this[_0x59c5('0x17e')][_0x59c5('0x0')]['push'](e);}for(let e of externalFace[_0x59c5('0x0')]){if(e[_0x59c5('0x21')])this['edgeToFaceMap']['set'](e,this[_0x59c5('0x17d')]);}}['getIncidentFaces'](v){return this[_0x59c5('0x177')][_0x59c5('0x5d')](v);}['cacheIncidentFace'](v,f){if(!this['incidentFaces'][_0x59c5('0xac')](v))this['incidentFaces'][_0x59c5('0xa7')](v,[]);this['incidentFaces']['get'](v)[_0x59c5('0x16')](f);}[_0x59c5('0x9e')](face){let faceVertices=new Set();for(let edge of face['edges']){faceVertices[_0x59c5('0x60')](edge[_0x59c5('0x8')]);faceVertices['add'](edge[_0x59c5('0xb')]);}return faceVertices;}[_0x59c5('0x157')](faceList){let faceVertices=new Set();for(let f of faceList)faceVertices[_0x59c5('0x60')](this[_0x59c5('0x178')][_0x59c5('0x5d')](f));return faceVertices;}[_0x59c5('0xe')](f1,f2){for(let e of f1['edges']){let r=this['embedding'][_0x59c5('0x180')](e);if(this[_0x59c5('0x176')][_0x59c5('0x5d')](r)==f2)return this['getOriginalEdge'](e);}return null;}[_0x59c5('0x159')](f1,f2){let minWeight=Number[_0x59c5('0xfb')];let minWeightEdge=null;for(let e of f1['edges']){let r=this[_0x59c5('0xa6')][_0x59c5('0x180')](e);if(this[_0x59c5('0x176')][_0x59c5('0x5d')](r)==f2){let edge=this[_0x59c5('0x181')](e);if(edge['weight']<minWeight){minWeightEdge=edge;minWeight=edge[_0x59c5('0x2')];}}}return minWeightEdge;}['getOriginalEdge'](e){for(let oe of e[_0x59c5('0x8')][_0x59c5('0x0')]){if(oe[_0x59c5('0x135')](e[_0x59c5('0x8')],e[_0x59c5('0xb')]))return oe;}return null;}[_0x59c5('0xa1')](oldEdge,newVertex){let e1=newVertex[_0x59c5('0x1')][0x0];let e2=newVertex[_0x59c5('0xa')][0x0];let r=this[_0x59c5('0xa6')][_0x59c5('0x180')](oldEdge);let f1=this[_0x59c5('0x176')][_0x59c5('0x5d')](oldEdge);let edgeIndex=f1[_0x59c5('0x0')][_0x59c5('0x9b')](oldEdge);f1['edges'][edgeIndex]=e1;f1[_0x59c5('0x0')]['splice'](edgeIndex+0x1,0x0,e2);let f2=this[_0x59c5('0x176')]['get'](r);let r1=e2[_0x59c5('0x20')]();let r2=e1[_0x59c5('0x20')]();edgeIndex=f2[_0x59c5('0x0')][_0x59c5('0x9b')](r);f2[_0x59c5('0x0')][edgeIndex]=r1;f2[_0x59c5('0x0')][_0x59c5('0x9c')](edgeIndex+0x1,0x0,r2);this[_0x59c5('0x176')]['delete'](oldEdge);this[_0x59c5('0x176')][_0x59c5('0xa7')](e1,f1);this[_0x59c5('0x176')][_0x59c5('0xa7')](e2,f1);this[_0x59c5('0x176')][_0x59c5('0xad')](r);this[_0x59c5('0x176')][_0x59c5('0xa7')](r1,f2);this[_0x59c5('0x176')][_0x59c5('0xa7')](r2,f2);this[_0x59c5('0xa6')][_0x59c5('0xb1')](oldEdge,e1,e2,r,r1,r2,newVertex);if(this[_0x59c5('0x177')]!=null)this[_0x59c5('0x177')][_0x59c5('0xa7')](newVertex,[f1,f2]);}['splitFace'](f,newEdge){let fromEdge=null,toEdge=null;let from=-0x1;for(let i=0x0;i<f[_0x59c5('0x0')]['length'];++i){let e=f[_0x59c5('0x0')][i];if(e[_0x59c5('0x8')]==newEdge['destination']){from=i;fromEdge=e;}if(e[_0x59c5('0xb')]==newEdge[_0x59c5('0x8')]){toEdge=e;}}let f1=new Face();f1['edges'][_0x59c5('0x16')](newEdge);this[_0x59c5('0x176')]['set'](newEdge,f1);let ei=from;do{let fe=f[_0x59c5('0x0')][ei];f1[_0x59c5('0x0')][_0x59c5('0x16')](fe);this[_0x59c5('0x176')][_0x59c5('0xa7')](fe,f1);ei=(ei+0x1)%f[_0x59c5('0x0')][_0x59c5('0x19')];}while(f1[_0x59c5('0x0')][f1[_0x59c5('0x0')][_0x59c5('0x19')]-0x1]!=toEdge);let r=new Edge(newEdge['destination'],newEdge['origin']);let f2=new Face();f2[_0x59c5('0x0')][_0x59c5('0x16')](r);this[_0x59c5('0x176')][_0x59c5('0xa7')](r,f2);do{let fe=f['edges'][ei];f2[_0x59c5('0x0')][_0x59c5('0x16')](fe);this[_0x59c5('0x176')][_0x59c5('0xa7')](fe,f2);ei=(ei+0x1)%f[_0x59c5('0x0')][_0x59c5('0x19')];}while(ei!=from);this[_0x59c5('0xa6')]['addEdge'](newEdge,r,fromEdge,toEdge);let v=this[_0x59c5('0x178')][_0x59c5('0x5d')](f);while(v[_0x59c5('0x0')][_0x59c5('0x19')]>0x0)this['removeEdge'](v['edges'][0x0]);this[_0x59c5('0x178')][_0x59c5('0xad')](f);this[_0x59c5('0x158')][_0x59c5('0xad')](v);Utils[_0x59c5('0x9')](this[_0x59c5('0xe3')],v);this['dgCreateVertex'](f1);this[_0x59c5('0x179')](f2);for(let e of f1[_0x59c5('0x0')])this[_0x59c5('0x17a')](e);for(let e of f2[_0x59c5('0x0')])this[_0x59c5('0x17a')](e);if(this[_0x59c5('0x177')]!=null){for(let e of f1[_0x59c5('0x0')]){let o=e[_0x59c5('0x8')];let ofaces=this[_0x59c5('0x177')][_0x59c5('0x5d')](o);let oi=ofaces[_0x59c5('0x9b')](f);if(oi!=-0x1){ofaces[oi]=f1;if(o==newEdge[_0x59c5('0x8')])ofaces[_0x59c5('0x9c')](oi+0x1,0x0,f2);if(o==newEdge[_0x59c5('0xb')])ofaces[_0x59c5('0x9c')](oi,0x0,f2);}}for(let e of f2[_0x59c5('0x0')]){let o=e[_0x59c5('0x8')];let ofaces=this[_0x59c5('0x177')][_0x59c5('0x5d')](o);let oi=ofaces[_0x59c5('0x9b')](f);if(oi!=-0x1)ofaces[oi]=f2;}}Utils['remove'](this[_0x59c5('0xc4')],f);this[_0x59c5('0xc4')][_0x59c5('0x16')](f1);this[_0x59c5('0xc4')][_0x59c5('0x16')](f2);for(let vertex of f1[_0x59c5('0x9e')]()){let vf=this['getIncidentFaces'](vertex);if(!vf[_0x59c5('0xd')](f1)){vf[_0x59c5('0x16')](f1);}}for(let vertex of f2[_0x59c5('0x9e')]()){let vf=this[_0x59c5('0x156')](vertex);if(!vf[_0x59c5('0xd')](f2)){vf[_0x59c5('0x16')](f2);}}}[_0x59c5('0x179')](f){let v=new Vertex();this['vertices'][_0x59c5('0x16')](v);this[_0x59c5('0x178')][_0x59c5('0xa7')](f,v);this['vertexToFaceMap'][_0x59c5('0xa7')](v,f);return v;}[_0x59c5('0x17a')](e){let r=this[_0x59c5('0xa6')][_0x59c5('0x180')](e);let f1=this['edgeToFaceMap'][_0x59c5('0x5d')](e);let f2=this[_0x59c5('0x176')]['get'](r);let d=this[_0x59c5('0xf6')](this[_0x59c5('0x178')][_0x59c5('0x5d')](f1),this[_0x59c5('0x178')][_0x59c5('0x5d')](f2));d['weight']=e[_0x59c5('0x2')];return d;}['setFaceIndices'](){for(let i=0x0;i<this[_0x59c5('0xc4')]['length'];++i)this['faces'][i][_0x59c5('0x22')]=i;}[_0x59c5('0x6a')](e){return e['reversed']?this[_0x59c5('0x176')][_0x59c5('0x5d')](this[_0x59c5('0xa6')]['getReverse'](e)):this[_0x59c5('0x176')][_0x59c5('0x5d')](e);}[_0x59c5('0x71')](e){return e[_0x59c5('0x21')]?this[_0x59c5('0x176')]['get'](e):this[_0x59c5('0x176')][_0x59c5('0x5d')](this[_0x59c5('0xa6')]['getReverse'](e));}}Factory[_0x59c5('0x120')]=DualGraph;class IntervalGraph extends Graph{constructor(intervals){super();this['intervalVertices']=new Map();for(let interval of intervals){let vertex=new Vertex();this[_0x59c5('0xe3')][_0x59c5('0x16')](vertex);this[_0x59c5('0x182')][_0x59c5('0xa7')](interval,vertex);}for(let i=0x0;i<intervals[_0x59c5('0x19')]-0x1;++i){for(let j=i+0x1;j<intervals[_0x59c5('0x19')];++j){let i1=intervals[i];let i2=intervals[j];if(i1['intersects'](i2))this[_0x59c5('0xf6')](this[_0x59c5('0xe3')][i],this[_0x59c5('0xe3')][j]);}}this['intervals']=intervals['slice']();}[_0x59c5('0x183')](){let complement=new Graph();for(let vertex of this[_0x59c5('0xe3')]){let copy=complement[_0x59c5('0xf4')](vertex[_0x59c5('0x149')]);copy[_0x59c5('0x2')]=vertex[_0x59c5('0x2')];}for(let i=0x0;i<this[_0x59c5('0xe3')][_0x59c5('0x19')]-0x1;++i){for(let j=i+0x1;j<this['vertices'][_0x59c5('0x19')];++j){if(!this[_0x59c5('0xe3')][i][_0x59c5('0x1c')](this[_0x59c5('0xe3')][j]))complement[_0x59c5('0xf6')](complement[_0x59c5('0xe3')][i],complement[_0x59c5('0xe3')][j]);}}complement[_0x59c5('0xf5')]();for(let e of complement[_0x59c5('0x0')]){let oi=e[_0x59c5('0x8')][_0x59c5('0x22')];let di=e[_0x59c5('0xb')][_0x59c5('0x22')];if(this['intervals'][oi][_0x59c5('0xc5')]>this['intervals'][di][_0x59c5('0xc5')])e[_0x59c5('0xa2')]();}let complementMaxClique=complement[_0x59c5('0x184')]();let maxIndependentSet=[];for(let v of complementMaxClique){let original=this['vertices'][v['index']];maxIndependentSet['push'](original);}return maxIndependentSet;}}class OverlapGraph extends Graph{constructor(intervals){super();this[_0x59c5('0x182')]=new Map();this[_0x59c5('0x14f')]=new Map();for(let interval of intervals){let vertex=new Vertex();this[_0x59c5('0xe3')][_0x59c5('0x16')](vertex);this[_0x59c5('0x182')][_0x59c5('0xa7')](interval,vertex);this['vertexIntervals'][_0x59c5('0xa7')](vertex,interval);}for(let i=0x0;i<intervals[_0x59c5('0x19')]-0x1;++i){for(let j=i+0x1;j<intervals[_0x59c5('0x19')];++j){let i1=intervals[i];let i2=intervals[j];if(i1['overlaps'](i2))this[_0x59c5('0xf6')](this[_0x59c5('0xe3')][i],this[_0x59c5('0xe3')][j]);}}this[_0x59c5('0xf5')]();this[_0x59c5('0x14e')]=intervals['slice']();}[_0x59c5('0x150')](){if(this['vertices'][_0x59c5('0x19')]==0x0)return new Set();this[_0x59c5('0xf5')]();let inclusionGraph=new Graph();for(let interval of this[_0x59c5('0x14e')])inclusionGraph['addVertex']();for(let i=0x0;i<this[_0x59c5('0x14e')][_0x59c5('0x19')];++i){for(let j=0x0;j<this['intervals'][_0x59c5('0x19')];++j){let i1=this[_0x59c5('0x14e')][i];let i2=this[_0x59c5('0x14e')][j];if(i1!=i2&&i1[_0x59c5('0x83')](i2))inclusionGraph[_0x59c5('0xf6')](inclusionGraph[_0x59c5('0xe3')][i],inclusionGraph[_0x59c5('0xe3')][j]);}}let root=new Vertex();for(let vertex of inclusionGraph[_0x59c5('0xe3')])inclusionGraph['createEdge'](root,vertex);inclusionGraph['vertices'][_0x59c5('0x16')](root);inclusionGraph[_0x59c5('0xf5')]();this[_0x59c5('0x185')]=new Map();this[_0x59c5('0x186')]=[];this[_0x59c5('0x187')](root);let vertexWeights=new Map();for(let vertex of this[_0x59c5('0x186')][0x0])vertexWeights[_0x59c5('0xa7')](vertex,0x1);let subgraphMaxSets=new Map();for(let vertex of this[_0x59c5('0x186')][0x0])subgraphMaxSets['set'](vertex,new Set());for(let i=0x1;i<this[_0x59c5('0x186')][_0x59c5('0x19')];++i){for(let v of this[_0x59c5('0x186')][i]){let subIntervals=[];for(let e of inclusionGraph[_0x59c5('0xe3')][v[_0x59c5('0x22')]]['outEdges'])subIntervals[_0x59c5('0x16')](this[_0x59c5('0x14e')][e[_0x59c5('0xb')]['index']]);let subIntervalGraph=new IntervalGraph(subIntervals);subIntervalGraph[_0x59c5('0xf5')]();for(let il of subIntervals)subIntervalGraph[_0x59c5('0x182')][_0x59c5('0x5d')](il)['weight']=vertexWeights['get'](this['intervalVertices'][_0x59c5('0x5d')](il));let wSet=subIntervalGraph['maxWeightedIndependentSet']();let vsubMaxIndependentSet=new Set();for(let u of wSet){let interval=subIntervalGraph[_0x59c5('0x14e')][u[_0x59c5('0x22')]];let overlapGraphVertex=this[_0x59c5('0x182')]['get'](interval);vsubMaxIndependentSet['add'](overlapGraphVertex);Utils[_0x59c5('0x115')](vsubMaxIndependentSet,subgraphMaxSets['get'](overlapGraphVertex));}subgraphMaxSets['set'](v,vsubMaxIndependentSet);vertexWeights[_0x59c5('0xa7')](v,vsubMaxIndependentSet[_0x59c5('0x14a')]+0x1);}}let intervalGraph=new IntervalGraph(this['intervals']);intervalGraph[_0x59c5('0xf5')]();for(let il of this[_0x59c5('0x14e')])intervalGraph[_0x59c5('0x182')][_0x59c5('0x5d')](il)['weight']=vertexWeights['get'](this[_0x59c5('0x182')][_0x59c5('0x5d')](il));let wMaxIndependentSet=intervalGraph[_0x59c5('0x183')]();let maxIndependentSet=new Set();for(let u of wMaxIndependentSet){let overlapGraphVertex=this['vertices'][u[_0x59c5('0x22')]];maxIndependentSet['add'](overlapGraphVertex);Utils[_0x59c5('0x115')](maxIndependentSet,subgraphMaxSets[_0x59c5('0x5d')](overlapGraphVertex));}return maxIndependentSet;}['setInclusionLevel'](vertex){if(this[_0x59c5('0x185')]['has'](vertex[_0x59c5('0x22')]))return this[_0x59c5('0x185')][_0x59c5('0x5d')](vertex[_0x59c5('0x22')]);if(vertex[_0x59c5('0xa')]['length']==0x0){this[_0x59c5('0x188')](vertex,0x0);return 0x0;}let maxChildLevel=-0x1;for(let e of vertex[_0x59c5('0xa')]){let child=e['destination'];maxChildLevel=Math[_0x59c5('0xc6')](maxChildLevel,this['setInclusionLevel'](child));}this['assignVertexToLevel'](vertex,maxChildLevel+0x1);return maxChildLevel+0x1;}['assignVertexToLevel'](vertex,level){this['inclusionLevels'][_0x59c5('0xa7')](vertex[_0x59c5('0x22')],level);if(this[_0x59c5('0x186')]['length']<=level)this[_0x59c5('0x186')][_0x59c5('0x16')]([]);if(vertex[_0x59c5('0x22')]<this[_0x59c5('0xe3')][_0x59c5('0x19')])this[_0x59c5('0x186')][level][_0x59c5('0x16')](this[_0x59c5('0xe3')][vertex[_0x59c5('0x22')]]);}}Factory[_0x59c5('0x14d')]=OverlapGraph;class Path{constructor(path){if(path){this['nodes']=[...path['nodes']];this[_0x59c5('0x189')]=[...path['links']];this[_0x59c5('0x18a')]=[...path[_0x59c5('0x18a')]];}else{this[_0x59c5('0x98')]=[];this[_0x59c5('0x189')]=[];this[_0x59c5('0x18a')]=[];}}[_0x59c5('0x83')](item){if(Path[_0x59c5('0x18b')](item)){if(this[_0x59c5('0x98')]['includes'](item))return!![];return![];}else{if(this[_0x59c5('0x189')]['includes'](item))return!![];return![];}}[_0x59c5('0x18c')](incNodes,incLinks){var weight=0x0;if(incNodes){this[_0x59c5('0x98')]['forEach'](function(node){weight+=node[_0x59c5('0x2')];});}if(incLinks){this[_0x59c5('0x189')]['forEach'](function(link){weight+=link[_0x59c5('0x2')];});}return weight;}[_0x59c5('0x60')](link,node){if(link&&Path[_0x59c5('0x18d')](link[_0x59c5('0x6')])){this[_0x59c5('0x189')]['push'](link);this[_0x59c5('0x18a')]['push'](link);}if(node&&Path[_0x59c5('0x18b')](node['owner'])){this['nodes'][_0x59c5('0x16')](node);this[_0x59c5('0x18a')][_0x59c5('0x16')](node);}if(link&&Path[_0x59c5('0x18b')](link['owner'])){this[_0x59c5('0x98')][_0x59c5('0x16')](link);this[_0x59c5('0x18a')]['push'](link);}}static['isNode'](obj){return Object[_0x59c5('0xb7')](obj)[_0x59c5('0x9b')](_0x59c5('0x18e'))>-0x1;}static[_0x59c5('0x18d')](obj){return Object[_0x59c5('0xb7')](obj)[_0x59c5('0x9b')](_0x59c5('0x18f'))>-0x1;}}class PathFinder{constructor(){}static[_0x59c5('0x190')](graph,from,to){return PathFinder[_0x59c5('0x191')](graph,from,to,![],0x0);}static['findPaths'](graph,from,to,shortestOnly,maxPaths){var result=[];if(from==to&&shortestOnly){var path=new Path();path[_0x59c5('0x60')](from);result[_0x59c5('0x16')](path);return result;}var tempCol=new Queue();var tempPath=new Path();tempPath[_0x59c5('0x60')](from);tempCol[_0x59c5('0x2b')](tempPath);var pathFound=![];while(!![]){var size=tempCol[_0x59c5('0x192')]();if(size==0x0)break;if(pathFound&&shortestOnly)break;for(var i=0x0;i<size;i++){tempPath=tempCol[_0x59c5('0x3c')]();var lastNode=tempPath[_0x59c5('0x98')][tempPath[_0x59c5('0x98')][_0x59c5('0x19')]-0x1];var links=lastNode[_0x59c5('0xa')];for(var k=0x0;k<links[_0x59c5('0x19')];k++){var link=links[k];var nextNode=link['destination'];if(tempPath['contains'](link))continue;if(nextNode==to){var newPath=new Path(tempPath);newPath[_0x59c5('0x60')](link,nextNode);result[_0x59c5('0x16')](newPath);if(maxPaths!=0x0&&result[_0x59c5('0x19')]>=maxPaths)return result;pathFound=!![];continue;}if(!tempPath[_0x59c5('0x83')](nextNode)){var newPath=new Path(tempPath);newPath[_0x59c5('0x60')](link,nextNode);tempCol[_0x59c5('0x2b')](newPath);}}}}return result;}static[_0x59c5('0x193')](graph,from,to,useNodeWeights,useLinkWeights){if(!useNodeWeights&&!useLinkWeights){var paths=PathFinder[_0x59c5('0x191')](graph,from,to,!![]);if(paths[_0x59c5('0x19')]>0x0)return paths[0x0];else return null;}var paths=PathFinder[_0x59c5('0x191')](graph,from,to,![]);if(paths[_0x59c5('0x19')]==0x0)return null;var minWeight=Number[_0x59c5('0xfb')];var minPath=null;for(var i=0x0;i<paths[_0x59c5('0x19')];i++){var weight=paths[i][_0x59c5('0x18c')](useNodeWeights,useLinkWeights);if(weight<minWeight){minWeight=weight;minPath=paths[i];}}return minPath;}static[_0x59c5('0x194')](graph,from,to){var paths=PathFinder[_0x59c5('0x191')](graph,from,to,![]);if(paths[_0x59c5('0x19')]>0x0)return paths[paths[_0x59c5('0x19')]-0x1];else return null;}static[_0x59c5('0x195')](graph,participant){if(participant){var cycles=PathFinder[_0x59c5('0x191')](graph,participant,participant,![]);if(cycles[_0x59c5('0x19')]>0x0){var path=cycles[0x0];path[_0x59c5('0x98')][_0x59c5('0x9c')](path[_0x59c5('0x98')]['length']-0x1,0x1);path[_0x59c5('0x18a')][_0x59c5('0x9c')](path[_0x59c5('0x18a')][_0x59c5('0x19')]-0x1,0x1);return path;}return null;}else{for(var i=0x0;i<graph[_0x59c5('0xe3')][_0x59c5('0x19')];i++){var cycles=PathFinder['findPaths'](graph,graph[_0x59c5('0xe3')][i],graph[_0x59c5('0xe3')][i],![]);if(cycles['length']>0x0){var path=cycles[0x0];path[_0x59c5('0x98')]['splice'](path[_0x59c5('0x98')][_0x59c5('0x19')]-0x1,0x1);path[_0x59c5('0x18a')][_0x59c5('0x9c')](path['items'][_0x59c5('0x19')]-0x1,0x1);return path;}}return null;}}static['enumAllCycles'](graph){var result=[];var callback=function(c){result[_0x59c5('0x16')](c);};PathFinder['enumAllCyclesDirected'](graph,callback);return result;}static[_0x59c5('0x196')](graph,callbackEnum){PathFinder[_0x59c5('0x197')]=new Map();PathFinder[_0x59c5('0x198')]=[];PathFinder[_0x59c5('0x199')]=[];PathFinder[_0x59c5('0x19a')]=new Map();PathFinder[_0x59c5('0x19b')]=new Map();var index=0x0;var vs=graph[_0x59c5('0xe3')];vs[_0x59c5('0x15')](function(v){PathFinder[_0x59c5('0x19a')][_0x59c5('0xa7')](v,index++);});var callback=function(c){while(PathFinder['markedStack'][_0x59c5('0x19')]!=0x0)PathFinder['mark'][_0x59c5('0xad')](PathFinder[_0x59c5('0x198')][_0x59c5('0xe1')]());return callbackEnum(c);};vs[_0x59c5('0x15')](function(v){enumCircuitsTarjan(v,v,callback);});}static[_0x59c5('0x19c')](v){var result=PathFinder[_0x59c5('0x19b')]['has'](v)?PathFinder['toDelete']['get'](v):null;if(result==null){result=new Map();PathFinder['toDelete'][_0x59c5('0xa7')](v,result);}return result;}}function enumCircuitsTarjan(start,vertex,callback){var cycleFound=![];var callbackFound=function(c){cycleFound=!![];return callback(c);};PathFinder[_0x59c5('0x199')][_0x59c5('0x16')](vertex);PathFinder[_0x59c5('0x197')][_0x59c5('0xa7')](vertex,!![]);PathFinder['markedStack'][_0x59c5('0x16')](vertex);var edges=vertex['outEdges'];edges['forEach'](function(edge){var adjVertex=edge[_0x59c5('0xb')];if(!PathFinder[_0x59c5('0x19c')](vertex)[_0x59c5('0xac')](adjVertex)){var order=PathFinder[_0x59c5('0x19a')][_0x59c5('0x5d')](adjVertex)-PathFinder[_0x59c5('0x19a')][_0x59c5('0x5d')](start);if(order<0x0){PathFinder['deleted'](vertex)[_0x59c5('0xa7')](adjVertex,!![]);}else if(order==0x0){cycleFound=!![];var path=new Path();var it=PathFinder[_0x59c5('0x199')]['indexOf'](start);for(var i=it;i<PathFinder['pointStack']['length'];i++)path[_0x59c5('0x98')]['push'](PathFinder[_0x59c5('0x199')][i]);for(var i=0x0;i<path[_0x59c5('0x98')]['length'];i++){var n1=path[_0x59c5('0x98')][i];var n2=path['nodes'][(i+0x1)%path[_0x59c5('0x98')][_0x59c5('0x19')]];var l=null;var n1_edges=n1['outEdges'];for(var k=0x0;k<n1_edges[_0x59c5('0x19')];k++){if(n1_edges[k][_0x59c5('0x10')](n1)==n2){l=n1_edges[k];break;}}path[_0x59c5('0x189')][_0x59c5('0x16')](l);path['items']['push'](n1);path[_0x59c5('0x18a')]['push'](l);}callbackFound(path);return $break;}else if(!PathFinder[_0x59c5('0x197')][_0x59c5('0xac')](adjVertex)){PathFinder[_0x59c5('0x19d')](start,adjVertex,callback);}}});if(cycleFound){while(PathFinder['markedStack'][_0x59c5('0x19')]>0x0)PathFinder['mark'][_0x59c5('0xad')](PathFinder[_0x59c5('0x198')][_0x59c5('0xe1')]());}PathFinder[_0x59c5('0x199')][_0x59c5('0x9c')](PathFinder[_0x59c5('0x199')][_0x59c5('0x19')]-0x1,0x1);}class Layout{constructor(){this[_0x59c5('0x19e')]=Anchoring[_0x59c5('0x19f')];this['keepGroupLayout']=![];this[_0x59c5('0x1a0')]=MultipleGraphsPlacement[_0x59c5('0x1a1')];this[_0x59c5('0x1a2')]=0xa;}get[_0x59c5('0x19e')](){return this['_anchoring'];}set[_0x59c5('0x19e')](value){this['_anchoring']=value;}get['keepGroupLayout'](){return this[_0x59c5('0x1a3')];}set['keepGroupLayout'](value){this[_0x59c5('0x1a3')]=value;}get[_0x59c5('0x1a0')](){return this['_multipleGraphsPlacement'];}set['multipleGraphsPlacement'](value){this[_0x59c5('0x1a4')]=value;}get[_0x59c5('0x1a2')](){return this[_0x59c5('0x1a5')];}set[_0x59c5('0x1a2')](value){this[_0x59c5('0x1a5')]=value;}get[_0x59c5('0x1a6')](){return!![];}get['setsLinkPoints'](){return!![];}get[_0x59c5('0x1a7')](){return!![];}get[_0x59c5('0x1a8')](){return!![];}get[_0x59c5('0x1a9')](){return![];}get[_0x59c5('0x1aa')](){return![];}get['requiresCascadingLinks'](){return![];}get[_0x59c5('0x1ab')](){return![];}get[_0x59c5('0x1ac')](){return![];}}class BorderedTreeLayout extends Layout{constructor(){super();this[_0x59c5('0x1ad')]=0xa;this[_0x59c5('0x1ae')]=0xa;this[_0x59c5('0x1af')]=![];this['direction']=LayoutDirection[_0x59c5('0x1b0')];this[_0x59c5('0x1b1')]=TreeLayoutLinkType['Default'];this[_0x59c5('0x1a0')]=MultipleGraphsPlacement[_0x59c5('0x1b2')];this[_0x59c5('0xd5')]=![];}get[_0x59c5('0x1a8')](){return![];}get[_0x59c5('0x1b3')](){return this[_0x59c5('0x1b1')]==TreeLayoutLinkType[_0x59c5('0x1b4')];}get['isStatic'](){return this[_0x59c5('0x1af')];}[_0x59c5('0x1b5')](graph){var root;var th=new TreeHelper(this[_0x59c5('0xd5')]);this['treeHelper']=th;graph[_0x59c5('0xe3')][_0x59c5('0x15')](function(v){let parentEdges=th[_0x59c5('0x1b6')](v);if(parentEdges[_0x59c5('0x19')]==0x0){root=v;return $break;}});if(!root)return $skipLayout;this[_0x59c5('0xdf')]=graph[_0x59c5('0xdf')](root,this[_0x59c5('0xd5')]);if(!this[_0x59c5('0xdf')])return $skipLayout;var rootX=root['x']+root[_0x59c5('0xf1')]/0x2;var rootY=root['y']+root['height']/0x2;this['x']=0x0;this['y']=0x0;this[_0x59c5('0x1b7')](root);var levelSizes=[];for(var i=0x0;i<this[_0x59c5('0xdf')][_0x59c5('0xea')][_0x59c5('0x19')];i++){var treeLevel=this[_0x59c5('0xdf')][_0x59c5('0xea')][i];var sz=0x0;for(var j=0x0;j<treeLevel[_0x59c5('0x19')];j++){if(this[_0x59c5('0x1b8')]())sz=Math[_0x59c5('0xc6')](sz,treeLevel[j][_0x59c5('0xf1')]);else sz=Math[_0x59c5('0xc6')](sz,treeLevel[j][_0x59c5('0xf2')]);}levelSizes[_0x59c5('0x16')](sz);}var off=0x0;var size=0x0;for(var l=0x1;l<levelSizes[_0x59c5('0x19')];l++){size+=levelSizes[l];size+=this['levelDistance'];}size+=this['margins'];if(!this[_0x59c5('0x1b9')]())off=size;for(var i=0x0;i<this[_0x59c5('0xdf')]['treeLevels'][_0x59c5('0x19')];i++){var treeLevel=this[_0x59c5('0xdf')][_0x59c5('0xea')][i];for(var j=0x0;j<treeLevel[_0x59c5('0x19')];j++){var node=treeLevel[j];if(this[_0x59c5('0x1b8')]())node['x']+=off;else node['y']+=off;}if(this[_0x59c5('0x1b9')]())off+=this[_0x59c5('0x1ad')]+levelSizes[i];else off+=-(this[_0x59c5('0x1ad')]+levelSizes[i]);}if(this[_0x59c5('0x1af')]){var newRootX=root['x'];var newRootY=root['y'];var xoff=rootX-newRootX;var yoff=rootY-newRootY;this[_0x59c5('0x1ba')](root,xoff,yoff);}if(this['linkType']!=TreeLayoutLinkType[_0x59c5('0x1bb')]){switch(this[_0x59c5('0x1b1')]){case TreeLayoutLinkType[_0x59c5('0x1bc')]:{switch(this['direction']){case LayoutDirection[_0x59c5('0x1b0')]:{this[_0x59c5('0xdf')][_0x59c5('0x0')][_0x59c5('0x15')](function(e){var parent=th[_0x59c5('0xd6')](e);var child=th[_0x59c5('0xe2')](e);th[_0x59c5('0xd8')](e,[{'x':parent['x']+parent[_0x59c5('0xf1')]/0x2,'y':parent['y']},{'x':child['x'],'y':child['y']-child[_0x59c5('0xf2')]/0x2}]);});}break;case LayoutDirection['BottomToTop']:{this[_0x59c5('0xdf')][_0x59c5('0x0')][_0x59c5('0x15')](function(e){var parent=th[_0x59c5('0xd6')](e);var child=th[_0x59c5('0xe2')](e);th[_0x59c5('0xd8')](e,[{'x':parent['x']+parent['width']/0x2,'y':parent['y']},{'x':child['x'],'y':child['y']+child[_0x59c5('0xf2')]/0x2}]);});}break;case LayoutDirection[_0x59c5('0x1bd')]:{this[_0x59c5('0xdf')][_0x59c5('0x0')][_0x59c5('0x15')](function(e){var parent=th[_0x59c5('0xd6')](e);var child=th[_0x59c5('0xe2')](e);th[_0x59c5('0xd8')](e,[{'x':parent['x'],'y':parent['y']+parent[_0x59c5('0xf2')]/0x2},{'x':child['x']-child[_0x59c5('0xf1')]/0x2,'y':child['y']}]);});}break;case LayoutDirection[_0x59c5('0x1be')]:{this[_0x59c5('0xdf')][_0x59c5('0x0')][_0x59c5('0x15')](function(e){var parent=th['parentNode'](e);var child=th['childNode'](e);th[_0x59c5('0xd8')](e,[{'x':parent['x'],'y':parent['y']+parent[_0x59c5('0xf2')]/0x2},{'x':child['x']+child[_0x59c5('0xf1')]/0x2,'y':child['y']}]);});}break;}break;}case TreeLayoutLinkType[_0x59c5('0x1b4')]:{switch(this[_0x59c5('0x94')]){case LayoutDirection[_0x59c5('0x1b0')]:{this[_0x59c5('0xdf')][_0x59c5('0x0')][_0x59c5('0x15')](function(e){var parent=th[_0x59c5('0xd6')](e);var child=th[_0x59c5('0xe2')](e);th[_0x59c5('0xd8')](e,[{'x':parent['x']+parent['width']/0x2,'y':parent['y']},{'x':child['x'],'y':parent['y']},{'x':child['x'],'y':child['y']-child['height']/0x2}]);});}break;case LayoutDirection['BottomToTop']:{this[_0x59c5('0xdf')]['edges'][_0x59c5('0x15')](function(e){var parent=th[_0x59c5('0xd6')](e);var child=th[_0x59c5('0xe2')](e);th[_0x59c5('0xd8')](e,[{'x':parent['x']+parent[_0x59c5('0xf1')]/0x2,'y':parent['y']},{'x':child['x'],'y':parent['y']},{'x':child['x'],'y':child['y']+child[_0x59c5('0xf2')]/0x2}]);});}break;case LayoutDirection['LeftToRight']:{this[_0x59c5('0xdf')]['edges']['forEach'](function(e){var parent=th[_0x59c5('0xd6')](e);var child=th[_0x59c5('0xe2')](e);th['assignPoints'](e,[{'x':parent['x'],'y':parent['y']+parent[_0x59c5('0xf2')]/0x2},{'x':parent['x'],'y':child['y']},{'x':child['x']-child['width']/0x2,'y':child['y']}]);});}break;case LayoutDirection['RightToLeft']:{this[_0x59c5('0xdf')][_0x59c5('0x0')][_0x59c5('0x15')](function(e){var parent=th[_0x59c5('0xd6')](e);var child=th[_0x59c5('0xe2')](e);th[_0x59c5('0xd8')](e,[{'x':parent['x'],'y':parent['y']+parent[_0x59c5('0xf2')]/0x2},{'x':parent['x'],'y':child['y']},{'x':child['x']+child[_0x59c5('0xf1')]/0x2,'y':child['y']}]);});}break;}break;}}}}[_0x59c5('0x1b7')](node){var rc=Rect[_0x59c5('0x1bf')](node);rc['x']=this['x'];rc['y']=this['y'];if(this[_0x59c5('0x94')]==LayoutDirection['RightToLeft']){var rcRoot=Rect['fromVertex'](this['tree'][_0x59c5('0x27')]);var s=rc[_0x59c5('0xf1')];rc=new Rect(rcRoot[_0x59c5('0x71')]()-s,rc[_0x59c5('0x1c0')](),rc['width'],rc['height']);}else if(this[_0x59c5('0x94')]==LayoutDirection[_0x59c5('0x1c1')]){var rcRoot=Rect[_0x59c5('0x1bf')](this['tree'][_0x59c5('0x27')]);var s=rc[_0x59c5('0xf2')];rc=new Rect(rc[_0x59c5('0x6a')](),rcRoot[_0x59c5('0x1c2')]()-s,rc[_0x59c5('0xf1')],rc[_0x59c5('0xf2')]);}node['x']=rc['x']+rc['width']/0x2;node['y']=rc['y']+rc[_0x59c5('0xf2')]/0x2;if(this[_0x59c5('0x1b8')]())this['y']+=rc[_0x59c5('0xf2')]+this[_0x59c5('0x1ae')];else this['x']+=rc[_0x59c5('0xf1')]+this[_0x59c5('0x1ae')];var self=this;var children=this[_0x59c5('0xdf')]['childrenOf'](node);children[_0x59c5('0x15')](function(child){self[_0x59c5('0x1b7')](child);});}[_0x59c5('0x1ba')](nodeFrom,xoff,yoff){var offsetFunc=function(node,params){node['x']+=params[0x0];node['y']+=params[0x1];};walk$1(this[_0x59c5('0xdf')],nodeFrom,offsetFunc,[xoff,yoff]);}[_0x59c5('0x1b8')](){return this[_0x59c5('0x94')]==LayoutDirection[_0x59c5('0x1bd')]||this[_0x59c5('0x94')]==LayoutDirection['RightToLeft'];}['isStraight'](){return this['direction']==LayoutDirection['LeftToRight']||this[_0x59c5('0x94')]==LayoutDirection[_0x59c5('0x1b0')];}[_0x59c5('0x1c3')](){return this[_0x59c5('0x1c4')][_0x59c5('0x1c5')];}get[_0x59c5('0x1ad')](){return this[_0x59c5('0x1c6')];}set[_0x59c5('0x1ad')](value){this[_0x59c5('0x1c6')]=value;}get[_0x59c5('0x1ae')](){return this[_0x59c5('0x1c7')];}set[_0x59c5('0x1ae')](value){this[_0x59c5('0x1c7')]=value;}get[_0x59c5('0x1af')](){return this[_0x59c5('0x1c8')];}set[_0x59c5('0x1af')](value){this[_0x59c5('0x1c8')]=value;}get[_0x59c5('0x94')](){return this[_0x59c5('0x1c9')];}set[_0x59c5('0x94')](value){this[_0x59c5('0x1c9')]=value;}get[_0x59c5('0x1b1')](){return this[_0x59c5('0x1ca')];}set['linkType'](value){this['_linkType']=value;}get[_0x59c5('0x19e')](){return this[_0x59c5('0x1cb')];}set[_0x59c5('0x19e')](value){this['_anchoring']=value;}get[_0x59c5('0x1cc')](){return this['_keepGroupLayout'];}set[_0x59c5('0x1cc')](value){this[_0x59c5('0x1a3')]=value;}get[_0x59c5('0x1a0')](){return this['_multipleGraphsPlacement'];}set['multipleGraphsPlacement'](value){this[_0x59c5('0x1a4')]=value;}get[_0x59c5('0xd5')](){return this[_0x59c5('0x1cd')];}set[_0x59c5('0xd5')](value){this['_reversedLinks']=value;}}function walk$1(tree,node,func,params){func[_0x59c5('0x1ce')](this,node,params);var children=tree[_0x59c5('0xec')](node);children[_0x59c5('0x15')](function(child){walk$1(tree,child,func,params);});}class LayoutUtils{static['getGraphBounds'](graph,defaultBounds){if(graph['vertices']['length']==0x0)return defaultBounds;var bounds=null;graph[_0x59c5('0xe3')][_0x59c5('0x15')](function(v){bounds=Rect[_0x59c5('0x1bf')](v)[_0x59c5('0x1cf')](bounds);});graph[_0x59c5('0x0')][_0x59c5('0x15')](function(e){if(e['points'])bounds=Rect['boundingRect'](e[_0x59c5('0x1d0')])[_0x59c5('0x1cf')](bounds);});return bounds;}}class Tools{static[_0x59c5('0x1d1')](node,o){var r=bounds(node);if(o==Orientation[_0x59c5('0x1a1')])return newPoint(r['x']+r[_0x59c5('0xf1')]/0x2,r['bottom']());else return newPoint(r['right'](),r['y']+r[_0x59c5('0xf2')]/0x2);}static[_0x59c5('0x1d2')](node,o){var r=bounds(node);if(o==Orientation[_0x59c5('0x1a1')])return newPoint(r['x']+r['width']/0x2,r[_0x59c5('0x1c0')]());else return newPoint(r['left'](),r['y']+r[_0x59c5('0xf2')]/0x2);}static['GetBNearCenter'](node,o){var r=bounds(node);if(o==Orientation[_0x59c5('0x1a1')])return newPoint(r[_0x59c5('0x6a')](),r['y']+r['height']/0x2);else return newPoint(r['x']+r[_0x59c5('0xf1')]/0x2,r[_0x59c5('0x1c0')]());}static[_0x59c5('0x1d3')](node,o){var r=bounds(node);if(o==Orientation[_0x59c5('0x1a1')])return newPoint(r['right'](),r['y']+r['height']/0x2);else return newPoint(r['x']+r['width']/0x2,r['bottom']());}static['MoveNode'](node,x,y){var r=bounds(node);r['x']=x;r['y']=y;var c=r[_0x59c5('0x1d4')]();node['x']=c['x'];node['y']=c['y'];}static[_0x59c5('0x1d5')](link,points){if(link[_0x59c5('0x1d6')])link[_0x59c5('0x1d7')]=!![];link[_0x59c5('0x1d6')]=!![];link['points']=Array[_0x59c5('0x1d8')][_0x59c5('0x9d')][_0x59c5('0x1ce')](arguments,0x1);}static[_0x59c5('0x1d9')](link,points){if(link[_0x59c5('0x1d6')])link['_fcl_multiMerge']=!![];link[_0x59c5('0x1d6')]=!![];link[_0x59c5('0x1d0')]=points;}static[_0x59c5('0x1da')](link){return link['points'];}static['Mirror'](point,origin){return newPoint(origin['x']+point['y']-origin['y'],origin['y']+point['x']-origin['x']);}static[_0x59c5('0x1db')](node,o){return o==Orientation[_0x59c5('0x1a1')]?node[_0x59c5('0xf1')]:node[_0x59c5('0xf2')];}static[_0x59c5('0x1dc')](node,o){if(o==Orientation[_0x59c5('0x1a1')])return node['x'];else return node['y'];}static[_0x59c5('0x1dd')](node,o){return o==Orientation[_0x59c5('0x1a1')]?node[_0x59c5('0xf2')]:node[_0x59c5('0xf1')];}static[_0x59c5('0x1de')](node,o){if(o==Orientation[_0x59c5('0x1a1')])return node['y'];else return node['x'];}static[_0x59c5('0x1df')](node,o){return Tools['GetBNearRect'](bounds(node),o);}static[_0x59c5('0x1e0')](node,o){return Tools['GetBFarRect'](bounds(node),o);}static['GetLNear'](node,o){return Tools[_0x59c5('0x1e1')](bounds(node),o);}static[_0x59c5('0x1e2')](node,o){return Tools[_0x59c5('0x1e3')](bounds(node),o);}static[_0x59c5('0x1e4')](rect,o){if(o==Orientation[_0x59c5('0x1a1')])return rect[_0x59c5('0x6a')]();else return rect[_0x59c5('0x1c0')]();}static[_0x59c5('0x1e5')](rect,o){if(o==Orientation['Vertical'])return rect[_0x59c5('0x71')]();else return rect['bottom']();}static[_0x59c5('0x1e1')](rect,o){if(o==Orientation['Vertical'])return rect[_0x59c5('0x1c0')]();else return rect[_0x59c5('0x6a')]();}static[_0x59c5('0x1e3')](rect,o){if(o==Orientation['Vertical'])return rect[_0x59c5('0x1c2')]();else return rect[_0x59c5('0x71')]();}static[_0x59c5('0x1e6')](point,o){if(o==Orientation[_0x59c5('0x1a1')])return point['x'];else return point['y'];}static[_0x59c5('0x1e7')](point,o){if(o==Orientation[_0x59c5('0x1a1')])return point['y'];else return point['x'];}static[_0x59c5('0x1e8')](node,offset,o){if(o==Orientation[_0x59c5('0x1a1')])node['y']=node['y']+offset;else node['x']=node['x']+offset;for(var l=0x0;l<node[_0x59c5('0x1')][_0x59c5('0x19')];l++){var link=node['inEdges'][l];var p=link[_0x59c5('0x1d0')];if(!p)continue;var li=p[_0x59c5('0x19')]-0x1;if(o==Orientation['Vertical']){var start=p[0x0]['y'];var oldEnd=p[li]['y'];var newEnd=p[li]['y']+offset;var flip=(start-oldEnd)*(start-newEnd)<0x0;if(!flip){for(var pi=0x1;pi<li;pi++){p[pi]['y']+=offset;}}else{for(var pi=0x1;pi<li;pi++){var dy=start-p[pi]['y'];p[pi]['y']+=dy;}}p[li]['y']+=offset;}else{var start=p[0x0]['x'];var oldEnd=p[li]['x'];var newEnd=p[li]['x']+offset;var flip=(start-oldEnd)*(start-newEnd)<0x0;if(!flip){for(var pi=0x1;pi<li;pi++){p[pi]['x']+=offset;}}else{for(var pi=0x1;pi<li;pi++){var dx=start-p[pi]['x'];p[pi]['x']+=dx;}}p[li]['x']+=offset;}}}static[_0x59c5('0x1e9')](links,offx,offy,o){for(var l=0x0;l<links[_0x59c5('0x19')];l++){var link=links[l];var p=link[_0x59c5('0x1d0')];if(!p)continue;var li=p['length']-0x1;if(o==Orientation[_0x59c5('0x1a1')]){var oldStart=p[0x0]['y'];var newStart=p[0x0]['y']+offy;var end=p[li]['y'];var flip=(oldStart-end)*(newStart-end)<0x0;if(!flip){for(var pi=0x1;pi<li;pi++){p[pi]['y']+=offy;}}else{for(var pi=0x1;pi<li;pi++){var dy=end-p[pi]['y'];p[pi]['y']+=dy;}}p[0x0]['x']+=offx;p[0x0]['y']+=offy;if(p[_0x59c5('0x19')]==0x2){var sp=p[0x0];var ep=p[0x1];p[0x1]=newPoint(sp['x'],(sp['y']+ep['y'])/0x2);p[0x2]=newPoint(ep['x'],(sp['y']+ep['y'])/0x2);p[0x3]=ep;}else{p[0x1]['x']+=offx;}link[_0x59c5('0x1d6')]=!![];}else{var oldStart=p[0x0]['x'];var newStart=p[0x0]['x']+offx;var end=p[li]['x'];var flip=(oldStart-end)*(newStart-end)<0x0;if(!flip){for(var pi=0x1;pi<li;pi++){p[pi]['x']+=offx;}}else{for(var pi=0x1;pi<li;pi++){var dx=end-p[pi]['x'];p[pi]['x']+=dx;}}p[0x0]['x']+=offx;p[0x0]['y']+=offy;if(p[_0x59c5('0x19')]==0x2){var sp=p[0x0];var ep=p[0x1];p[0x1]=newPoint((sp['x']+ep['x'])/0x2,sp['y']);p[0x2]=newPoint((sp['x']+ep['x'])/0x2,ep['y']);p[0x3]=ep;}else{p[0x1]['y']+=offy;}link[_0x59c5('0x1d6')]=!![];}}}}function newPoint(x,y){return new Point(x,y);}function bounds(v){if(v[_0x59c5('0x1ea')])return Rect[_0x59c5('0x1eb')](v['node'],v[_0x59c5('0x1ea')]);else return Rect['fromCenterAndSize'](v,v);}class FlowchartLayout extends Layout{constructor(){super();this[_0x59c5('0x1ae')]=0x14;this[_0x59c5('0x1ec')]=0xc;this[_0x59c5('0x1ed')]=0x4;this['orientation']=Orientation[_0x59c5('0x1a1')];this[_0x59c5('0x1a0')]=MultipleGraphsPlacement[_0x59c5('0x1b2')];this[_0x59c5('0x1ee')]=new Map();this[_0x59c5('0x1ef')]=0x0;this[_0x59c5('0x1f0')]=[];this[_0x59c5('0x1f1')]=new Map();this[_0x59c5('0x1f2')]=new Map();this['topologicalOrder']=new Map();this['searchCounter']=0x0;this[_0x59c5('0x1f3')]=new Map();this['mm']=0x1;}get[_0x59c5('0x1a9')](){return!![];}get[_0x59c5('0x1b3')](){return!![];}[_0x59c5('0x1b5')](graph){this['mm']=graph[_0x59c5('0x1f4')];if(graph[_0x59c5('0xe3')][_0x59c5('0x19')]==0x0)return![];graph['setItemIndices']();this[_0x59c5('0xa5')]=graph;var orientation=this[_0x59c5('0x1f5')];this['nodeOrder']=new Map();this[_0x59c5('0x1f0')]=[];this[_0x59c5('0x1f6')]=[];this[_0x59c5('0x1f7')]=0x0;this[_0x59c5('0x1ef')]=0x0;this['flowchartNodes']=new Map();var startNodes=this[_0x59c5('0x1f8')]();var startNode=null;var virtualStart=null;var virtualStartLinks=[];if(startNodes[_0x59c5('0x19')]==0x0)startNode=graph[_0x59c5('0xe3')][0x0];if(startNodes[_0x59c5('0x19')]==0x1)startNode=startNodes[0x0];if(startNodes['length']>0x1){virtualStart=startNode=new Vertex();startNode['x']=startNode['y']=0x0;startNode[_0x59c5('0xf1')]=startNode['height']=0x14;for(var n=0x0;n<startNodes[_0x59c5('0x19')];n++){var node=startNodes[n];virtualStartLinks['push'](new Edge(virtualStart,node));}graph[_0x59c5('0xe3')][_0x59c5('0x16')](virtualStart);for(var l=0x0;l<virtualStartLinks[_0x59c5('0x19')];l++){var virtualStartLink=virtualStartLinks[l];graph['addEdge'](virtualStartLink);}}var to=graph[_0x59c5('0x161')]();if(!to){var reversed=graph[_0x59c5('0x15c')]();to=graph[_0x59c5('0x161')]();}if(to){var orderMap=this['topologicalOrder']=this['topologicalSort'](startNode,to);for(var n=0x0;n<graph[_0x59c5('0xe3')][_0x59c5('0x19')];n++){var node=graph[_0x59c5('0xe3')][n];node[_0x59c5('0xa')][_0x59c5('0xed')](function(e1,e2){return orderMap[_0x59c5('0x5d')](e1['destination'])-orderMap['get'](e2[_0x59c5('0xb')]);});}}if(reversed){reversed[_0x59c5('0x15')](function(e){e[_0x59c5('0xa2')]();});}this[_0x59c5('0x1f1')]=new Map();this[_0x59c5('0x1f2')]=new Map();this[_0x59c5('0x100')]=0x0;this[_0x59c5('0x131')](startNode);if(this['postOrder'][_0x59c5('0x14a')]<graph[_0x59c5('0xe3')][_0x59c5('0x19')])return![];for(var n=0x0;n<graph[_0x59c5('0xe3')]['length'];n++){var node=graph[_0x59c5('0xe3')][n];node['x']=node['y']=0x0;}for(var l=0x0;l<graph['edges']['length'];l++){var link=graph[_0x59c5('0x0')][l];link['_fcl_processed']=![];}if(!to)this[_0x59c5('0x1f9')]=this[_0x59c5('0x161')](startNode);FlowchartBranching[_0x59c5('0x1fa')]=[];var flowchart=this['composeFlowChart'](startNode);var breadth=flowchart[_0x59c5('0x1fb')](this[_0x59c5('0x1ec')],this[_0x59c5('0x1ed')],orientation);flowchart[_0x59c5('0x1b5')](breadth/0x2,0x0,this[_0x59c5('0x1ae')],orientation);if(virtualStart!=null)Utils['remove'](graph[_0x59c5('0xe3')],virtualStart);for(var l=0x0;l<virtualStartLinks['length'];l++){var virtualStartLink=virtualStartLinks[l];graph['removeEdge'](virtualStartLink);}var defer=FlowchartBranching[_0x59c5('0x1fa')];for(var dn=0x0;dn<defer[_0x59c5('0x19')];dn++){var node=defer[dn];var inLinks=this[_0x59c5('0x1fc')](node[_0x59c5('0x1')]);var far=farOfOriginNodes(inLinks,orientation);var nodeL=Tools['GetLNear'](node,orientation);if(far>=nodeL){var offset=far-nodeL+this[_0x59c5('0x1ae')];Tools['OffsetL'](node,offset,orientation);}}this[_0x59c5('0x1fd')]=LayoutUtils[_0x59c5('0x1fe')](graph);for(var l=0x0;l<graph[_0x59c5('0x0')][_0x59c5('0x19')];l++){var link=graph['edges'][l];if(!processed(link)||badPath(link,this)){var points=this[_0x59c5('0x137')](link,orientation);if(!points)points=this['findPath'](link,orientation,!![]);Tools[_0x59c5('0x1d9')](link,points);}}var link=longestLink(graph);if(link){var crossings=countCrossings(graph,link[_0x59c5('0x1d0')],link);var pt=newPoint;if(crossings>0x0){var lp=this[_0x59c5('0x1ec')];var lr=LayoutUtils[_0x59c5('0x1fe')](graph);var orect=bounds(link[_0x59c5('0x8')]);var drect=bounds(link[_0x59c5('0xb')]);var ocenter=orect[_0x59c5('0x1d4')]();var dcenter=drect[_0x59c5('0x1d4')]();if(orientation==Orientation['Vertical']){var ox=ocenter['x'];var oy=orect[_0x59c5('0x1c2')]();var lx1=orect[_0x59c5('0x6a')]();var lx2=drect['left']();var dx=dcenter['x'];var dy=drect[_0x59c5('0x1c0')]();oy+this['nodeDistance']/0x2;dy-this[_0x59c5('0x1ae')]/0x2;var candidates=[link[_0x59c5('0x1d0')]];candidates[_0x59c5('0x16')]([pt(lx1,ocenter['y']),pt(lr['left']()-lp,ocenter['y']),pt(lr[_0x59c5('0x6a')]()-lp,dcenter['y']),pt(lx2,dcenter['y'])]);}else{var ox=orect[_0x59c5('0x71')]();var oy=ocenter['y'];var ty1=orect[_0x59c5('0x1c0')]();var ty2=drect[_0x59c5('0x1c0')]();var dx=drect[_0x59c5('0x6a')]();var dy=dcenter['y'];ox+this[_0x59c5('0x1ae')]/0x2;dx-this[_0x59c5('0x1ae')]/0x2;var candidates=[link[_0x59c5('0x1d0')]];candidates[_0x59c5('0x16')]([pt(ocenter['x'],ty1),pt(ocenter['x'],lr['top']()-lp),pt(dcenter['x'],lr[_0x59c5('0x1c0')]()-lp),pt(dcenter['x'],ty2)]);}var best=null;var bestCount=crossings;for(var c=0x0;c<candidates[_0x59c5('0x19')];c++){var points=candidates[c];if(acceptPath(points,link[_0x59c5('0x8')],link['destination'],graph[_0x59c5('0xe3')])){crossings=countCrossings(graph,points,link);if(crossings<bestCount){bestCount=crossings;best=points;}if(crossings==0x0)break;}}if(best)Tools[_0x59c5('0x1d9')](link,best);}}for(var n=0x0;n<graph[_0x59c5('0xe3')]['length'];n++){var node=graph['vertices'][n];var topIn=nearIncomingLinks(node,orientation);if(topIn[_0x59c5('0x19')]>0x1&&endPointsCoincide(topIn,orientation)){pullNearInPointsApart(topIn,orientation);}var bottomOut=farOutgoingLinks(node,orientation);if(bottomOut['length']>0x1&&startPointsCoincide(bottomOut,orientation)){pullFarOutPointsApart(bottomOut,orientation);}var sideIn=sideIncomingLinks(node,orientation);if(sideIn['length']>0x1&&endPointsCoincide(sideIn,0x1-orientation)){pullSideInPointsApart(sideIn,orientation);}}this[_0x59c5('0x1ff')](graph[_0x59c5('0x0')]);}[_0x59c5('0x200')](startNode){return this[_0x59c5('0x201')](startNode,null,0x0,![],![]);}[_0x59c5('0x201')](node,parentBlock,loopDepth,onlyNotVisited,ignoreMerge){var graph=this[_0x59c5('0xa5')];var children=[];var currentBlock=null;if(parentBlock==null){currentBlock=new FlowchartSequence(this);children[_0x59c5('0x16')](this['composeBlocks'](node,currentBlock,0x0,![],![]));}else{var fcNode=this['getFlowchartNode'](node);currentBlock=fcNode;var visited=this[_0x59c5('0x202')](node);if(!visited)this['nodeOrder'][_0x59c5('0xa7')](node,this[_0x59c5('0x1ef')]++);var inDownLinks=this[_0x59c5('0x203')](node);if(inDownLinks>0x1&&this[_0x59c5('0x1f0')][_0x59c5('0x19')]>0x0&&!ignoreMerge){peek(this[_0x59c5('0x1f0')])[_0x59c5('0x204')](fcNode);return currentBlock;}if(visited&&onlyNotVisited)return null;loopDepth+=this[_0x59c5('0x205')](node);currentBlock[_0x59c5('0x206')](loopDepth);loopDepth-=this[_0x59c5('0x207')](node);var outDownLinks=this[_0x59c5('0x208')](node);if(outDownLinks==0x1)currentBlock=new FlowchartSequence(this,fcNode);if(outDownLinks>0x1){var branching=new FlowchartBranching(this,fcNode);this[_0x59c5('0x1f0')][_0x59c5('0x16')](branching);currentBlock=branching;loopDepth=0x0;}for(var l=0x0;l<node['outEdges'][_0x59c5('0x19')];++l){var branchLink=node[_0x59c5('0xa')][l];currentBlock['currentLink']=branchLink;var child=this[_0x59c5('0x201')](branchLink[_0x59c5('0xb')],currentBlock,loopDepth,!![],![]);if(child!=null){if(child['getIncomingLink']()==null)child[_0x59c5('0x209')](branchLink);children[_0x59c5('0x16')](child);}}if(currentBlock['branches']&&branching[_0x59c5('0x20a')][_0x59c5('0x19')]==0x0){this['branchings'][_0x59c5('0xe1')]();return null;}if(outDownLinks>0x1&&this[_0x59c5('0x1f0')]['length']>0x0)this[_0x59c5('0x1f0')][_0x59c5('0xe1')]();if(parentBlock instanceof FlowchartBranching&&currentBlock instanceof FlowchartBranching&&!this[_0x59c5('0x20b')](currentBlock)){var replacement=new FlowchartSequence(this);replacement[_0x59c5('0x60')](currentBlock);children[_0x59c5('0x19')]=0x0;children[_0x59c5('0x16')](currentBlock);currentBlock=replacement;}}if(currentBlock instanceof FlowchartSequence){for(var c=0x0;c<children[_0x59c5('0x19')];++c){var child=children[c];var next=child[_0x59c5('0x20c')]();if(next!=null){for(var n=0x0;n<next[_0x59c5('0x19')];++n){var nextNode=next[n];this['composeBlocks'](nextNode,currentBlock,loopDepth,![],!![]);}}}}if(parentBlock!=null){parentBlock[_0x59c5('0x60')](currentBlock);}else{var unprocessedNodes=new Queue();for(var n=0x0;n<graph[_0x59c5('0xe3')][_0x59c5('0x19')];n++){var nnode=graph[_0x59c5('0xe3')][n];if(!this['flowchartNodes'][_0x59c5('0xac')](nnode))unprocessedNodes[_0x59c5('0x2b')](nnode);}while(unprocessedNodes[_0x59c5('0x192')]()>0x0){var n=unprocessedNodes[_0x59c5('0x3c')]();if(n['inEdges'][_0x59c5('0x19')]==0x0||this[_0x59c5('0x1f3')]['has'](n))continue;var parent=n['inEdges'][0x0][_0x59c5('0x8')];if(!this[_0x59c5('0x1f3')]['has'](parent))unprocessedNodes['enqueue'](n);else this['composeBlocks'](n,this[_0x59c5('0x20d')](this[_0x59c5('0x20e')](parent)),0x0,!![],!![]);}}return currentBlock;}[_0x59c5('0x20d')](block){if(block==null)return null;if(block instanceof FlowchartSequence)return block;return this[_0x59c5('0x20d')](block[_0x59c5('0x20f')]);}[_0x59c5('0x20b')](block){var next=block['nextNodes']();if(next!=null&&next[_0x59c5('0x19')]==0x1){var links=this['getDownLinks'](next[0x0][_0x59c5('0xa')]);if(links['length']!=0x1)return![];var inDownLinks=this[_0x59c5('0x203')](links[0x0][_0x59c5('0xb')]);if(inDownLinks>0x1&&this[_0x59c5('0x1f0')][_0x59c5('0x19')]>0x0)return!![];}return![];}[_0x59c5('0x20e')](node){if(this[_0x59c5('0x1f3')][_0x59c5('0xac')](node))return this[_0x59c5('0x1f3')][_0x59c5('0x5d')](node);var flowchartNode=new FlowchartNode(this,node);this[_0x59c5('0x1f3')][_0x59c5('0xa7')](node,flowchartNode);return flowchartNode;}[_0x59c5('0x1f8')](){var graph=this['graph'];var startNodes=[];for(var n=0x0;n<graph['vertices'][_0x59c5('0x19')];n++){var node=graph[_0x59c5('0xe3')][n];if(this[_0x59c5('0x210')](node))startNodes['push'](node);}return startNodes;}[_0x59c5('0x208')](node){var n=0x0;for(var l=0x0;l<node[_0x59c5('0xa')]['length'];++l){var link=node[_0x59c5('0xa')][l];if(this[_0x59c5('0x211')](link))n++;}return n;}[_0x59c5('0x203')](node){var n=0x0;for(var l=0x0;l<node[_0x59c5('0x1')][_0x59c5('0x19')];++l){var link=node['inEdges'][l];if(this['isDownLink'](link))n++;}return n;}[_0x59c5('0x1c3')](){return this[_0x59c5('0x1c4')]['__typeName'];}[_0x59c5('0x207')](node){var n=0x0;for(var l=0x0;l<node[_0x59c5('0xa')][_0x59c5('0x19')];++l){var link=node[_0x59c5('0xa')][l];if(this[_0x59c5('0x212')](link))n++;}return n;}[_0x59c5('0x205')](node){var n=0x0;for(var l=0x0;l<node[_0x59c5('0x1')][_0x59c5('0x19')];++l){var link=node[_0x59c5('0x1')][l];if(this['isBackLink'](link))n++;}return n;}[_0x59c5('0x202')](node){return this[_0x59c5('0x1ee')]['has'](node);}['isStartNode'](node){return this[_0x59c5('0x18')](node)==0x0;}[_0x59c5('0x213')](node){return this[_0x59c5('0x214')](node)==0x0;}[_0x59c5('0x18')](node){return node['inEdges'][_0x59c5('0x19')];}[_0x59c5('0x214')](node){return node[_0x59c5('0xa')][_0x59c5('0x19')];}[_0x59c5('0x212')](link){return!this[_0x59c5('0x211')](link);}[_0x59c5('0x211')](link){var o=link[_0x59c5('0x8')];var d=link[_0x59c5('0xb')];return this[_0x59c5('0x1f2')]['get'](d)<this[_0x59c5('0x1f2')][_0x59c5('0x5d')](o);}[_0x59c5('0x131')](node){if(this[_0x59c5('0x1f1')][_0x59c5('0xac')](node))return;this[_0x59c5('0x1f1')]['set'](node,!![]);for(var l=0x0;l<node['outEdges'][_0x59c5('0x19')];++l){var link=node[_0x59c5('0xa')][l];this[_0x59c5('0x131')](link[_0x59c5('0xb')]);}this[_0x59c5('0x1f2')][_0x59c5('0xa7')](node,this[_0x59c5('0x100')]++);}[_0x59c5('0x161')](startNode,graphOrder){var order=new Map();if(graphOrder){for(var n=0x0;n<graphOrder[_0x59c5('0x19')];n++){var node=this[_0x59c5('0xa5')][_0x59c5('0xe3')][graphOrder[n]];order['set'](node,n);}return order;}var queue=new Queue();var counter=0x0;queue['enqueue'](startNode);order[_0x59c5('0xa7')](startNode,counter++);while(queue['getSize']()>0x0){var node=queue['dequeue']();var downLinks=this[_0x59c5('0x1fc')](node[_0x59c5('0xa')]);for(var l=0x0;l<downLinks[_0x59c5('0x19')];++l){var link=downLinks[l];var child=link['destination'];if(order[_0x59c5('0xac')](child))continue;queue[_0x59c5('0x2b')](child);order[_0x59c5('0xa7')](child,counter++);}}return order;}[_0x59c5('0x1fc')](links){var downLinks=[];for(var l=0x0;l<links[_0x59c5('0x19')];++l){var link=links[l];if(this[_0x59c5('0x211')](link))downLinks['push'](link);}return downLinks;}['getTopologicalOrder'](){return this[_0x59c5('0x1f9')];}[_0x59c5('0x137')](link,o,relaxed){var g=this[_0x59c5('0xa5')];var pt=newPoint;var orect=bounds(link[_0x59c5('0x8')]);var drect=bounds(link['destination']);var candidates=[];var ocenter=orect[_0x59c5('0x1d4')]();var dcenter=drect[_0x59c5('0x1d4')]();if(o==Orientation[_0x59c5('0x1a1')]){var ox=ocenter['x'];var oy=orect[_0x59c5('0x1c2')]();var lx=orect['left']();var rx=orect[_0x59c5('0x71')]();var dx=dcenter['x'];var dy=drect[_0x59c5('0x1c0')]();var mx=(ox+dx)/0x2;var my=(oy+dy)/0x2;var nd=this[_0x59c5('0x1ae')];var hd=nd/0x2;var o1y=oy+hd;var o2y=dy-hd;var lp=this[_0x59c5('0x1ed')];var llr=this['layoutRect']['right']();var llb=this[_0x59c5('0x1fd')][_0x59c5('0x1c2')]();if(orect['bottom']()<drect[_0x59c5('0x1c0')]()){candidates[_0x59c5('0x16')]([pt(ox,oy),pt(ox,my),pt(dx,my),pt(dx,dy)]);candidates[_0x59c5('0x16')]([pt(ox,oy),pt(ox,o1y),pt(dx,o1y),pt(dx,dy)]);candidates['push']([pt(ox,oy),pt(ox,o2y),pt(dx,o2y),pt(dx,dy)]);for(var ci=0x1;ci<=0x5;ci++){candidates[_0x59c5('0x16')]([pt(rx,ocenter['y']),pt(rx+ci*hd,ocenter['y']),pt(rx+ci*hd,dcenter['y']),pt(drect[_0x59c5('0x71')](),dcenter['y'])]);candidates['push']([pt(lx,ocenter['y']),pt(lx-ci*hd,ocenter['y']),pt(lx-ci*hd,dcenter['y']),pt(drect['left'](),dcenter['y'])]);}candidates['push']([pt(rx,ocenter['y']),pt(llr,ocenter['y']),pt(llr,dcenter['y']),pt(drect[_0x59c5('0x71')](),dcenter['y'])]);candidates[_0x59c5('0x16')]([pt(ox,oy),pt(ox,o1y),pt(lx,o1y),pt(lx,o2y),pt(dx,o2y),pt(dx,dy)]);candidates[_0x59c5('0x16')]([pt(ox,oy),pt(ox,o1y),pt(mx,o1y),pt(mx,o2y),pt(dx,o2y),pt(dx,dy)]);}else{candidates[_0x59c5('0x16')]([pt(ox,oy),pt(ox,o1y),pt(mx,o1y),pt(mx,o2y),pt(dx,o2y),pt(dx,dy)]);candidates[_0x59c5('0x16')]([pt(ox,oy),pt(ox,o1y),pt(orect[_0x59c5('0x6a')]()-lp,o1y),pt(orect[_0x59c5('0x6a')]()-lp,dcenter['y']),pt(drect[_0x59c5('0x71')](),dcenter['y'])]);for(var ci=0x1;ci<=0x5;ci++){candidates[_0x59c5('0x16')]([pt(lx,ocenter['y']),pt(lx-ci*hd,ocenter['y']),pt(lx-ci*hd,dcenter['y']),pt(drect['left'](),dcenter['y'])]);candidates[_0x59c5('0x16')]([pt(rx,ocenter['y']),pt(rx+ci*hd,ocenter['y']),pt(rx+ci*hd,dcenter['y']),pt(drect[_0x59c5('0x71')](),dcenter['y'])]);}candidates[_0x59c5('0x16')]([pt(rx,ocenter['y']),pt(llr,ocenter['y']),pt(llr,dcenter['y']),pt(drect[_0x59c5('0x71')](),dcenter['y'])]);}candidates[_0x59c5('0x16')]([pt(ox,oy),pt(ox,llb),pt(drect[_0x59c5('0x71')]()+0x2*hd,llb),pt(drect[_0x59c5('0x71')]()+0x2*hd,dcenter['y']),pt(drect[_0x59c5('0x71')](),dcenter['y'])]);candidates[_0x59c5('0x16')]([pt(ox,oy),pt(ox,llb),pt(drect['right']()+hd,llb),pt(drect['right']()+hd,dcenter['y']),pt(drect[_0x59c5('0x71')](),dcenter['y'])]);candidates['push']([pt(ox,oy),pt(ox,llb),pt(drect[_0x59c5('0x71')]()+nd,llb),pt(drect[_0x59c5('0x71')]()+nd,dcenter['y']),pt(drect['right'](),dcenter['y'])]);candidates[_0x59c5('0x16')]([pt(ox,oy),pt(ox,llb),pt(drect[_0x59c5('0x6a')]()-hd,llb),pt(drect[_0x59c5('0x6a')]()-hd,dcenter['y']),pt(drect['left'](),dcenter['y'])]);candidates[_0x59c5('0x16')]([pt(ox,oy),pt(ox,llb),pt(drect[_0x59c5('0x6a')]()-nd,llb),pt(drect['left']()-nd,dcenter['y']),pt(drect[_0x59c5('0x6a')](),dcenter['y'])]);}else{var ox=orect[_0x59c5('0x71')]();var oy=ocenter['y'];var ty=orect[_0x59c5('0x1c0')]();var by=orect[_0x59c5('0x1c2')]();var dx=drect[_0x59c5('0x6a')]();var dy=dcenter['y'];var mx=(ox+dx)/0x2;var my=(oy+dy)/0x2;var nd=this[_0x59c5('0x1ae')];var hd=nd/0x2;var o1x=ox+hd;var o2x=dx-hd;var lp=this[_0x59c5('0x1ed')];if(orect[_0x59c5('0x71')]()<drect[_0x59c5('0x6a')]()){candidates[_0x59c5('0x16')]([pt(ox,oy),pt(mx,oy),pt(mx,dy),pt(dx,dy)]);candidates[_0x59c5('0x16')]([pt(ox,oy),pt(o1x,oy),pt(o1x,dy),pt(dx,dy)]);candidates[_0x59c5('0x16')]([pt(ox,oy),pt(o2x,oy),pt(o2x,dy),pt(dx,dy)]);for(var ci=0x1;ci<=0x5;ci++){candidates[_0x59c5('0x16')]([pt(ocenter['x'],by),pt(ocenter['x'],by+hd),pt(dcenter['x'],by+hd),pt(dcenter['x'],drect[_0x59c5('0x1c2')]())]);candidates['push']([pt(ocenter['x'],ty),pt(ocenter['x'],ty-hd),pt(dcenter['x'],ty-hd),pt(dcenter['x'],drect['top']())]);}candidates[_0x59c5('0x16')]([pt(ox,oy),pt(o1x,oy),pt(o1x,ty),pt(o2x,ty),pt(o2x,dy),pt(dx,dy)]);candidates['push']([pt(ox,oy),pt(o1x,oy),pt(o1x,my),pt(o2x,my),pt(o2x,dy),pt(dx,dy)]);}else{candidates[_0x59c5('0x16')]([pt(ox,oy),pt(o1x,oy),pt(o1x,my),pt(o2x,my),pt(o2x,dy),pt(dx,dy)]);candidates[_0x59c5('0x16')]([pt(ox,oy),pt(o1x,oy),pt(o1x,orect[_0x59c5('0x1c0')]()-lp),pt(dcenter['x'],orect[_0x59c5('0x1c0')]()-lp),pt(dcenter['x'],drect[_0x59c5('0x1c2')]())]);}}if(relaxed){var bestEval=Number[_0x59c5('0xfb')];var bestPoints;for(var c=0x0;c<candidates[_0x59c5('0x19')];c++){var points=candidates[c];var currEval=evalPath(points,link[_0x59c5('0x8')],link[_0x59c5('0xb')],g[_0x59c5('0xe3')]);if(currEval<bestEval){bestEval=currEval;bestPoints=points;}}return bestPoints;}else{for(var c=0x0;c<candidates[_0x59c5('0x19')];c++){var points=candidates[c];if(acceptPath(points,link[_0x59c5('0x8')],link[_0x59c5('0xb')],g['vertices'])){return points;}}}return null;}[_0x59c5('0x215')](points){var segments=[];for(var i=0x0;i<points[_0x59c5('0x19')]-0x1;i++){var segment={'index':i,'points':points,'horizontal'(){return this['points'][this['index']]['y']==this[_0x59c5('0x1d0')][this['index']+0x1]['y'];},'xint'(){var prev=this[_0x59c5('0x1d0')][this[_0x59c5('0x22')]]['x'];var next=this[_0x59c5('0x1d0')][this[_0x59c5('0x22')]+0x1]['x'];return prev<next?[prev,next]:[next,prev];},'yint'(){var prev=this[_0x59c5('0x1d0')][this[_0x59c5('0x22')]]['y'];var next=this['points'][this[_0x59c5('0x22')]+0x1]['y'];return prev<next?[prev,next]:[next,prev];}};segments[_0x59c5('0x16')](segment);}return segments;}[_0x59c5('0x1ff')](links){for(var i=0x0;i<links['length'];i++){var link=links[i];link[_0x59c5('0x216')]=this[_0x59c5('0x215')](link[_0x59c5('0x1d0')]);}this['splitPaths'](links,!![]);this[_0x59c5('0x217')](links,![]);}['splitPaths'](links,horizontal){var segments=[];for(var i=0x0;i<links[_0x59c5('0x19')];i++){var link=links[i];var path=link[_0x59c5('0x216')];for(var j=0x0;j<path[_0x59c5('0x19')];j++){var segment=path[j];if(segment[_0x59c5('0x218')]()==horizontal)segments[_0x59c5('0x16')](segment);}}segments[_0x59c5('0xed')](horizontal?compareY:compareX);var currentPos=-(Number[_0x59c5('0xfb')]-0x1);var bucket=[];var count=segments[_0x59c5('0x19')];for(var i=0x0;i<=count;++i){var segment=i<count?segments[i]:null;var firstPos=currentPos;if(bucket[_0x59c5('0x19')]>0x0)firstPos=coord(bucket[0x0],horizontal);if(segment==null||Math[_0x59c5('0x219')](coord(segment,horizontal)-firstPos)>this['mm']*0x2){if(bucket[_0x59c5('0x19')]>0x1){var splitGroups=getSplitGroups(bucket,horizontal);for(var g=0x0;g<splitGroups[_0x59c5('0x19')];g++){var group=splitGroups[g];if(group[_0x59c5('0x19')]<0x2)continue;var sharedPos=coord(group[0x0],horizontal);group['sort'](horizontal?compareH:compareV);var lp=this[_0x59c5('0x1ed')]/0x2;var min=sharedPos-lp*0x2;var max=sharedPos+lp*0x2;var m=(min+max)/0x2;var d=Math['min']((max-min)/0x2,(group[_0x59c5('0x19')]-0x1)*0x3*lp);var step=d/(group[_0x59c5('0x19')]-0x1);var pos=sharedPos-d/0x2>=min+step?sharedPos-d/0x2:m-d/0x2;for(var si=0x0;si<group['length'];si++){var s=group[si];pos-coord(s,horizontal);if(horizontal){s[_0x59c5('0x1d0')][s[_0x59c5('0x22')]]['y']=pos;s[_0x59c5('0x1d0')][s[_0x59c5('0x22')]+0x1]['y']=pos;}else{s[_0x59c5('0x1d0')][s[_0x59c5('0x22')]]['x']=pos;s[_0x59c5('0x1d0')][s[_0x59c5('0x22')]+0x1]['x']=pos;}pos+=step;}}}bucket[_0x59c5('0x19')]=0x0;}if(segment!=null){currentPos=coord(segment,horizontal);if(segment[_0x59c5('0x22')]>=0x0&&segment[_0x59c5('0x22')]<=segment[_0x59c5('0x1d0')][_0x59c5('0x19')]-0x1)bucket[_0x59c5('0x16')](segment);}}}get[_0x59c5('0x1ec')](){return this[_0x59c5('0x21a')];}set[_0x59c5('0x1ec')](value){this['_branchPadding']=value;}get['linkPadding'](){return this[_0x59c5('0x21b')];}set[_0x59c5('0x1ed')](value){this[_0x59c5('0x21b')]=value;}get[_0x59c5('0x1ae')](){return this[_0x59c5('0x1c7')];}set[_0x59c5('0x1ae')](value){this[_0x59c5('0x1c7')]=value;}get['orientation'](){return this['_orientation'];}set[_0x59c5('0x1f5')](value){this[_0x59c5('0x21c')]=value;}get[_0x59c5('0x19e')](){return this[_0x59c5('0x1cb')];}set['anchoring'](value){this['_anchoring']=value;}get['keepGroupLayout'](){return this[_0x59c5('0x1a3')];}set[_0x59c5('0x1cc')](value){this['_keepGroupLayout']=value;}get[_0x59c5('0x1a0')](){return this[_0x59c5('0x1a4')];}set[_0x59c5('0x1a0')](value){this['_multipleGraphsPlacement']=value;}[_0x59c5('0x21d')](){for(var v=0x0;v<this[_0x59c5('0xa5')][_0x59c5('0xe3')][_0x59c5('0x19')];v++){var vertex=this[_0x59c5('0xa5')]['vertices'][v];console[_0x59c5('0x21e')](_0x59c5('0x21f'));console['log'](vertex['debugId']);for(var e=0x0;e<vertex[_0x59c5('0xa')][_0x59c5('0x19')];e++){var edge=vertex['outEdges'][e];console['log'](_0x59c5('0x220')+edge[_0x59c5('0x149')]);}}}}class FlowchartBlock{constructor(flowchartLayout){this[_0x59c5('0x221')]=flowchartLayout;this[_0x59c5('0x222')]=0x0;this[_0x59c5('0x223')]=0x0;this[_0x59c5('0x224')]=0x0;this[_0x59c5('0x225')]=0x0;this[_0x59c5('0x226')]=![];this[_0x59c5('0x227')]=null;this[_0x59c5('0x228')]=null;this['parentBlock']=null;}[_0x59c5('0x60')](block){block[_0x59c5('0x20f')]=this;}[_0x59c5('0x1fb')](branchPadding,linkPadding,o){}['arrange'](b,l,offset,o){}['getOutLinks'](){}[_0x59c5('0x229')](){}[_0x59c5('0x22a')](links){var backLinks=[];for(var l=0x0;l<links[_0x59c5('0x19')];++l){var link=links[l];if(this['flowchartLayout'][_0x59c5('0x212')](link))backLinks['push'](link);}return backLinks;}[_0x59c5('0x20c')](){return null;}[_0x59c5('0x22b')](block){return!![];}[_0x59c5('0x22c')](){return this[_0x59c5('0x222')];}['getFullBreadth'](){return this['fullBreadth'];}[_0x59c5('0x22d')](){return this[_0x59c5('0x224')];}[_0x59c5('0x206')](value){this[_0x59c5('0x224')]=value;}[_0x59c5('0x22e')](){return this[_0x59c5('0x226')];}[_0x59c5('0x22f')](){return this[_0x59c5('0x227')];}['setIncomingLink'](value){this[_0x59c5('0x227')]=value;}}function LOriginComparer(orientation){return function(a,b){var la=0x0;if(orientation==Orientation[_0x59c5('0x1a1')])la=a[_0x59c5('0x8')]['y'];else la=a['origin']['x'];var lb=0x0;if(orientation==Orientation['Vertical'])lb=b[_0x59c5('0x8')]['y'];else lb=b[_0x59c5('0x8')]['x'];if(la<lb)return-0x1;if(la>lb)return 0x1;return 0x0;};}function BOriginComparer(orientation){return function Compare(a,b){var la=0x0;if(orientation==Orientation[_0x59c5('0x1a1')])la=a['origin']['x'];else la=a['origin']['y'];var lb=0x0;if(orientation==Orientation[_0x59c5('0x1a1')])lb=b['origin']['x'];else lb=b[_0x59c5('0x8')]['y'];if(la<lb)return-0x1;if(la>lb)return 0x1;return 0x0;};}function CompareTopologicalOrder(flowchartLayout){return function(n1,n2){var to=flowchartLayout[_0x59c5('0x230')]();if(to[_0x59c5('0xac')](n1[_0x59c5('0x231')]())&&to[_0x59c5('0xac')](n2['getNode']())){var o1=to[_0x59c5('0x5d')](n1[_0x59c5('0x231')]());var o2=to[_0x59c5('0x5d')](n2[_0x59c5('0x231')]());if(o1<o2)return-0x1;if(o1>o2)return 0x1;}return 0x0;};}class FlowchartNode extends FlowchartBlock{constructor(flowchartLayout,node){super(flowchartLayout);this[_0x59c5('0x1ea')]=node;}[_0x59c5('0x1fb')](branchPadding,linkPadding,o){this['maxLoopDepth']=this[_0x59c5('0x224')];if(o==Orientation[_0x59c5('0x1a1')])this[_0x59c5('0x222')]=this[_0x59c5('0x223')]=this[_0x59c5('0x1ea')]['width'];else this['contentBreadth']=this[_0x59c5('0x223')]=this[_0x59c5('0x1ea')][_0x59c5('0xf2')];return this['contentBreadth'];}[_0x59c5('0x1b5')](b,l,offset,o){var node=this[_0x59c5('0x1ea')];this[_0x59c5('0x226')]=!![];node[_0x59c5('0x232')]=!![];this[_0x59c5('0x221')][_0x59c5('0x1f6')][_0x59c5('0x16')](node);if(o==Orientation[_0x59c5('0x1a1')]){Tools['MoveNode'](node,b-node[_0x59c5('0xf1')]/0x2,l);var ll=bounds(node)['bottom']();}else{Tools[_0x59c5('0x233')](node,l,b-node[_0x59c5('0xf2')]/0x2);var ll=bounds(node)['right']();}this[_0x59c5('0x221')][_0x59c5('0x1f7')]=Math[_0x59c5('0xc6')](ll,this[_0x59c5('0x221')][_0x59c5('0x1f7')]);this[_0x59c5('0x1f7')]=ll;return ll;}[_0x59c5('0x234')](){return this[_0x59c5('0x1ea')]['outEdges'];}[_0x59c5('0x229')](){return this['node'][_0x59c5('0x1')];}[_0x59c5('0x231')](){return this[_0x59c5('0x1ea')];}}class FlowchartSequence extends FlowchartBlock{constructor(flowchartLayout,startNode){super(flowchartLayout);this[_0x59c5('0x235')]=[];if(startNode)this['sequence']['push'](startNode);}['measure'](branchPadding,linkPadding,o){this[_0x59c5('0x225')]=this[_0x59c5('0x22d')]();this[_0x59c5('0x222')]=0x0;for(var b=0x0;b<this[_0x59c5('0x235')][_0x59c5('0x19')];++b){var block=this[_0x59c5('0x235')][b];block['measure'](branchPadding,linkPadding,o);this[_0x59c5('0x222')]=Math[_0x59c5('0xc6')](this[_0x59c5('0x222')],block[_0x59c5('0x22c')]());this['maxLoopDepth']=Math['max'](this[_0x59c5('0x225')],block[_0x59c5('0x225')]);}this[_0x59c5('0x223')]=this[_0x59c5('0x222')]+this[_0x59c5('0x225')]*linkPadding;return this[_0x59c5('0x223')];}[_0x59c5('0x1b5')](b,l,offset,o){var prevBlock=null;var offsetNext=0x0;var overflow=0x0;for(var bc=0x0;bc<this[_0x59c5('0x235')][_0x59c5('0x19')];++bc){var block=this[_0x59c5('0x235')][bc];if(block['getArranged']()){prevBlock=block;l=Math[_0x59c5('0xc6')](l,prevBlock[_0x59c5('0x1f7')]+offset);continue;}if(block[_0x59c5('0x22f')]()!=null){var bottomCenter=Tools['GetLFarCenter'](block[_0x59c5('0x22f')]()[_0x59c5('0x8')],o);b=o==Orientation[_0x59c5('0x1a1')]?bottomCenter['x']:bottomCenter['y'];}l+=offsetNext;l=block[_0x59c5('0x1b5')](b,l,offset,o);if(block[_0x59c5('0x236')])overflow=Math['max'](block[_0x59c5('0x236')],overflow);offsetNext=offset;if(prevBlock!=null&&prevBlock[_0x59c5('0x22b')](block)){var links=prevBlock[_0x59c5('0x234')]();if(links!=null){var seqLinks=this[_0x59c5('0x221')]['getDownLinks'](links);if(seqLinks[_0x59c5('0x19')]>0x0){var origin=seqLinks[0x0]['origin'];var destination=seqLinks[0x0][_0x59c5('0xb')];var bb=Math[_0x59c5('0xc5')](Tools[_0x59c5('0x1db')](origin,o),Tools['GetBreadth'](destination,o));var ll=Tools[_0x59c5('0x1dc')](origin,o)-bb/0x2;for(var i=0x0;i<seqLinks[_0x59c5('0x19')];++i){var link=seqLinks[i];if(o==Orientation['Vertical']){var lx=ll+(i+0x1)*bb/(seqLinks['length']+0x1);if(!link['_fcl_processed'])Tools[_0x59c5('0x1d5')](link,newPoint(lx,bounds(origin)[_0x59c5('0x1c2')]()),newPoint(lx,bounds(destination)[_0x59c5('0x1c0')]()));}else{var ly=ll+(i+0x1)*bb/(seqLinks[_0x59c5('0x19')]+0x1);if(!link['_fcl_processed'])Tools[_0x59c5('0x1d5')](link,newPoint(bounds(origin)[_0x59c5('0x71')](),ly),newPoint(bounds(destination)['left'](),ly));}}}}}prevBlock=block;}for(var bc=0x0;bc<this[_0x59c5('0x235')]['length'];++bc){var block=this[_0x59c5('0x235')][bc];if(block instanceof FlowchartNode){var backLinks=this[_0x59c5('0x22a')](block[_0x59c5('0x229')]());backLinks[_0x59c5('0xed')](LOriginComparer(o));for(var i=0x0;i<backLinks['length'];++i){var link=backLinks[i];var orect=bounds(link[_0x59c5('0x8')]);var drect=bounds(link[_0x59c5('0xb')]);var startL=Tools['GetLCenter'](link[_0x59c5('0x8')],o);var endL=Tools[_0x59c5('0x1de')](link[_0x59c5('0xb')],o);var vSegmentB=b-this[_0x59c5('0x22c')]()/0x2+this[_0x59c5('0x237')]()-(block[_0x59c5('0x22d')]()-0x1-i)*this[_0x59c5('0x221')][_0x59c5('0x238')]();if(o==Orientation[_0x59c5('0x1a1')]){Tools['SetLinkPoints'](link,new Point(orect['right'](),startL),new Point(vSegmentB,startL),new Point(vSegmentB,endL),new Point(drect['right'](),endL));}else{Tools['SetLinkPoints'](link,new Point(startL,orect[_0x59c5('0x1c2')]()),new Point(startL,vSegmentB),new Point(endL,vSegmentB),new Point(endL,drect['bottom']()));}}}}if(overflow)this['arrangeOverflow']=overflow;this[_0x59c5('0x1f7')]=l;return l;}['getOutLinks'](){return this[_0x59c5('0x235')][this[_0x59c5('0x235')][_0x59c5('0x19')]-0x1][_0x59c5('0x234')]();}[_0x59c5('0x229')](){return this[_0x59c5('0x235')][0x0][_0x59c5('0x229')]();}[_0x59c5('0x60')](block){this['sequence'][_0x59c5('0x16')](block);super[_0x59c5('0x60')](block);}}class CenteredBranchingDescriptor{constructor(){this[_0x59c5('0x239')]=null;this['leftBlock']=null;this[_0x59c5('0x23a')]=null;}}class FlowchartBranching extends FlowchartBlock{constructor(flowchartLayout,rootNode){super(flowchartLayout);this[_0x59c5('0x23b')]=rootNode;this[_0x59c5('0x20a')]=[];this[_0x59c5('0x23c')]=new Map();this['mergeNodes']=[];this[_0x59c5('0x1ec')]=0x0;this[_0x59c5('0x23d')]=null;}[_0x59c5('0x1fb')](branchPadding,linkPadding,o){this[_0x59c5('0x1ec')]=branchPadding;this[_0x59c5('0x23b')][_0x59c5('0x1fb')](branchPadding,linkPadding,o);for(var m=0x0;m<this[_0x59c5('0x23e')][_0x59c5('0x19')];++m){var mergeNode=this[_0x59c5('0x23e')][m];mergeNode[_0x59c5('0x1fb')](branchPadding,linkPadding,o);}var centeredBranching=this[_0x59c5('0x23d')]=this[_0x59c5('0x23f')]();if(centeredBranching!=null){this[_0x59c5('0x222')]=centeredBranching[_0x59c5('0x239')][_0x59c5('0x1fb')](branchPadding,linkPadding,o);this['contentBreadth']=Math['max'](this['contentBreadth'],this[_0x59c5('0x23b')][_0x59c5('0x22c')]());this['contentBreadth']=Math[_0x59c5('0xc6')](this['contentBreadth'],this[_0x59c5('0x23e')][0x0]['getContentBreadth']());this[_0x59c5('0x222')]+=0x2*branchPadding;}else if(this[_0x59c5('0x240')]()){this[_0x59c5('0x222')]=0x2*linkPadding+Math[_0x59c5('0xc6')](this[_0x59c5('0x23b')][_0x59c5('0x22c')](),this['mergeNodes'][0x0][_0x59c5('0x22c')]());}else{this[_0x59c5('0x222')]=branchPadding*(this[_0x59c5('0x20a')][_0x59c5('0x19')]-0x1);for(var b=0x0;b<this['branches'][_0x59c5('0x19')];++b){var block=this[_0x59c5('0x20a')][b];this[_0x59c5('0x222')]+=block[_0x59c5('0x1fb')](branchPadding,linkPadding,o);}this['contentBreadth']=Math[_0x59c5('0xc6')](this['contentBreadth'],this[_0x59c5('0x23b')][_0x59c5('0x22c')]());}this[_0x59c5('0x223')]=this['contentBreadth'];return this[_0x59c5('0x223')];}[_0x59c5('0x241')](link,o){var orgEndPoint=Tools[_0x59c5('0x1d1')](link['origin'],o);var destEndPoint=Tools[_0x59c5('0x1d2')](link['destination'],o);Tools['SetLinkPoints'](link,orgEndPoint,destEndPoint);}[_0x59c5('0x1b5')](b,l,offset,o){var flowchartLayout=this[_0x59c5('0x221')];var rootNode=this[_0x59c5('0x23b')];if(!rootNode[_0x59c5('0x22e')]())l=rootNode[_0x59c5('0x1b5')](b,l,offset,o)+offset;var maxL=l;var sortedBranches=this['sortBranches'](this[_0x59c5('0x20a')]);var mergeAdjusted=![];var overflow=0x0;if(this[_0x59c5('0x23d')]==null){var currentB=b-this['getContentBreadth']()/0x2;for(var sb=0x0;sb<sortedBranches[_0x59c5('0x19')];++sb){var branch=sortedBranches[sb];currentB+=branch['getContentBreadth']()/0x2;maxL=Math[_0x59c5('0xc6')](maxL,branch[_0x59c5('0x1b5')](currentB,l,offset,o));if(branch[_0x59c5('0x236')])overflow+=branch['arrangeOverflow'];currentB+=branch['getFullBreadth']()-branch[_0x59c5('0x22c')]()/0x2+this[_0x59c5('0x1ec')];if(branch[_0x59c5('0x236')])currentB+=branch['arrangeOverflow'];}}else{var branch=this['centeredBranching'][_0x59c5('0x239')];maxL=branch['arrange'](b,l,offset,o);if(branch[_0x59c5('0x236')])overflow+=branch[_0x59c5('0x236')];}if(this[_0x59c5('0x23e')][_0x59c5('0x19')]==0x1){var mergeNode=this[_0x59c5('0x23e')][0x0];if(!mergeNode[_0x59c5('0x226')])maxL=mergeNode[_0x59c5('0x1b5')](b,maxL+offset,offset,o);else maxL=Math[_0x59c5('0xc6')](maxL,Tools[_0x59c5('0x1e2')](mergeNode[_0x59c5('0x231')](),o));mergeNode[_0x59c5('0x242')]=!![];}else{this[_0x59c5('0x23e')][_0x59c5('0xed')](CompareTopologicalOrder(flowchartLayout));var prevMergeNode=null;var defer=FlowchartBranching[_0x59c5('0x1fa')];for(var m=0x0;m<this[_0x59c5('0x23e')][_0x59c5('0x19')];++m){var mergeNode=this[_0x59c5('0x23e')][m];var originsArranged=originNodesArranged(mergeNode[_0x59c5('0x229')]());if(!originsArranged)continue;if(mergeNode[_0x59c5('0x231')]()[_0x59c5('0x214')]()==0x0&&!originsArranged&&!defer[_0x59c5('0xd')](mergeNode)){defer[_0x59c5('0x16')](mergeNode[_0x59c5('0x231')]());}var inLinks=flowchartLayout[_0x59c5('0x1fc')](mergeNode[_0x59c5('0x229')]());var center=centerOfOriginNodes(inLinks,o);var far=farOfOriginNodes(inLinks,o);var fixedInFlow=mergeNode['arranged']&&mergeNode[_0x59c5('0x231')]()[_0x59c5('0x232')]&&mergeNode['getNode']()[_0x59c5('0x214')]()>0x0;if(fixedInFlow){var mlinks=mergeNode[_0x59c5('0x231')]()[_0x59c5('0x0')];for(var mli=0x0;mli<mlinks[_0x59c5('0x19')];mli++)mlinks[mli]['_fcl_multiMerge']=!![];continue;}var wasArranged=mergeNode[_0x59c5('0x226')];if(wasArranged){var oldX=mergeNode['getNode']()['x'];var oldY=mergeNode['getNode']()['y'];}var currentL=far+offset;var checkIntersections=currentL<this[_0x59c5('0x221')][_0x59c5('0x1f7')];var nextL=mergeNode[_0x59c5('0x1b5')](center,currentL,offset,o);maxL=Math['max'](maxL,nextL);var mergeRect=bounds(mergeNode);if(prevMergeNode){if(bounds(prevMergeNode)[_0x59c5('0x243')](mergeRect))maxL=mergeNode['arrange'](center,Tools[_0x59c5('0x1e2')](prevMergeNode['getNode'](),o)+offset,offset,o);}else if(checkIntersections){var placed=this[_0x59c5('0x221')][_0x59c5('0x1f6')];for(var p=0x0;p<placed[_0x59c5('0x19')];p++){var testNode=placed[p];if(mergeNode[_0x59c5('0x1ea')]!=testNode&&bounds(testNode)[_0x59c5('0x243')](mergeRect)){maxL=mergeNode[_0x59c5('0x1b5')](Tools[_0x59c5('0x1e0')](testNode,o)+offset+mergeRect[_0x59c5('0xf1')]/0x2,currentL,offset,o);mergeAdjusted=!![];break;}}}mergeNode[_0x59c5('0x242')]=!![];if(wasArranged){var dx=mergeNode[_0x59c5('0x231')]()['x']-oldX;var dy=mergeNode[_0x59c5('0x231')]()['y']-oldY;Tools[_0x59c5('0x1e9')](mergeNode[_0x59c5('0x231')]()[_0x59c5('0xa')],dx,dy,o);}var mlinks=mergeNode[_0x59c5('0x231')]()['edges'];for(var mli=0x0;mli<mlinks[_0x59c5('0x19')];mli++)mlinks[mli][_0x59c5('0x1d7')]=!![];prevMergeNode=mergeNode;prevMergeNode[_0x59c5('0x244')]=center;}}var centeredBranching=this[_0x59c5('0x23d')];if(centeredBranching!=null){if(centeredBranching[_0x59c5('0x23a')]!=null){var rightLink=centeredBranching[_0x59c5('0x23a')]['getIncomingLink']();var rightOrg=rightLink[_0x59c5('0x8')];var rightDest=rightLink[_0x59c5('0xb')];var orgEndPoint=Tools['GetBFarCenter'](rightOrg,o);var destEndPoint=Tools[_0x59c5('0x1d3')](rightDest,o);var midSegmentCoord=b+this[_0x59c5('0x222')]/0x2;var b1,b2;if(o==Orientation[_0x59c5('0x1a1')]){b1=new Point(midSegmentCoord,orgEndPoint['y']);b2=new Point(midSegmentCoord,destEndPoint['y']);}else{b1=new Point(orgEndPoint['x'],midSegmentCoord);b2=new Point(destEndPoint['x'],midSegmentCoord);}Tools['SetLinkPoints'](rightLink,orgEndPoint,b1,b2,destEndPoint);}if(centeredBranching[_0x59c5('0x245')]!=null){var leftLink=centeredBranching[_0x59c5('0x245')][_0x59c5('0x22f')]();var leftOrg=leftLink['origin'];var leftDest=leftLink[_0x59c5('0xb')];var orgEndPoint=Tools['GetBNearCenter'](leftOrg,o);var destEndPoint=Tools[_0x59c5('0x246')](leftDest,o);var midSegmentCoord=b-this[_0x59c5('0x222')]/0x2;var b1,b2;if(o==Orientation[_0x59c5('0x1a1')]){b1=new Point(midSegmentCoord,orgEndPoint['y']);b2=new Point(midSegmentCoord,destEndPoint['y']);}else{b1=new Point(orgEndPoint['x'],midSegmentCoord);b2=new Point(destEndPoint['x'],midSegmentCoord);}Tools[_0x59c5('0x1d5')](leftLink,orgEndPoint,b1,b2,destEndPoint);}}else if(sortedBranches['length']==0x2){var leftLink=sortedBranches[0x0][_0x59c5('0x22f')]();var rightLink=sortedBranches[0x1][_0x59c5('0x22f')]();var leftDest=leftLink[_0x59c5('0xb')];var rightDest=rightLink[_0x59c5('0xb')];var leftTopCenter=Tools['GetLNearCenter'](leftDest,o);var rightTopCenter=Tools[_0x59c5('0x1d2')](rightDest,o);var root=rootNode['getNode']();var leftDestMerge=this[_0x59c5('0x23e')][_0x59c5('0xd')](flowchartLayout[_0x59c5('0x20e')](leftLink[_0x59c5('0xb')]));if(Tools[_0x59c5('0x1e6')](leftTopCenter,o)<Tools[_0x59c5('0x1df')](root,o)){var leftStart=Tools['GetBNearCenter'](root,o);var leftMiddle=new Point();if(o==Orientation['Vertical'])leftMiddle=new Point(leftTopCenter['x'],leftStart['y']);else leftMiddle=new Point(leftStart['x'],leftTopCenter['y']);Tools[_0x59c5('0x1d5')](leftLink,leftStart,leftMiddle,leftTopCenter);}else if(!leftDestMerge){var leftStart=Tools[_0x59c5('0x1d1')](root,o);var ll=(Tools[_0x59c5('0x1e7')](leftStart,o)+Tools[_0x59c5('0x1e7')](leftTopCenter,o))/0x2;if(o==Orientation[_0x59c5('0x1a1')]){Tools[_0x59c5('0x1d5')](leftLink,leftStart,new Point(leftStart['x'],ll),new Point(leftTopCenter['x'],ll),leftTopCenter);}else{Tools[_0x59c5('0x1d5')](leftLink,leftStart,new Point(ll,leftStart['y']),new Point(ll,leftTopCenter['y']),leftTopCenter);}}else if(leftDestMerge){var points=Tools['GetLinkPoints'](leftLink);points[0x0]=Tools[_0x59c5('0x246')](root,o);}var rightDestMerge=this[_0x59c5('0x23e')][_0x59c5('0xd')](flowchartLayout[_0x59c5('0x20e')](rightLink[_0x59c5('0xb')]));if(Tools[_0x59c5('0x1e6')](rightTopCenter,o)>Tools[_0x59c5('0x1e0')](root,o)){var rightStart=Tools[_0x59c5('0x1d3')](root,o);var rightMiddle=new Point();if(o==Orientation[_0x59c5('0x1a1')])rightMiddle=new Point(rightTopCenter['x'],rightStart['y']);else rightMiddle=new Point(rightStart['x'],rightTopCenter['y']);Tools[_0x59c5('0x1d5')](rightLink,rightStart,rightMiddle,rightTopCenter);}else if(!rightDestMerge){var rightStart=Tools['GetLFarCenter'](root,o);var ll=(Tools[_0x59c5('0x1e7')](rightStart,o)+Tools[_0x59c5('0x1e7')](rightTopCenter,o))/0x2;if(o==Orientation[_0x59c5('0x1a1')]){Tools['SetLinkPoints'](rightLink,rightStart,new Point(rightStart['x'],ll),new Point(rightTopCenter['x'],ll),rightTopCenter);}else{Tools[_0x59c5('0x1d5')](rightLink,rightStart,new Point(ll,rightStart['y']),new Point(ll,rightTopCenter['y']),rightTopCenter);}}else if(rightDestMerge){var points=Tools[_0x59c5('0x1da')](rightLink);points[0x0]=Tools['GetBFarCenter'](root,o);}}else{var midIndex=intDiv$1(sortedBranches['length'],0x2);var midLink=sortedBranches[midIndex][_0x59c5('0x22f')]();var midStraight=sortedBranches[_0x59c5('0x19')]%0x2==0x0||bounds(midLink['origin'])[_0x59c5('0x1d4')]()['x']==bounds(midLink['destination'])[_0x59c5('0x1d4')]()['x'];for(var i=0x0;i<sortedBranches[_0x59c5('0x19')];++i){var link=sortedBranches[i][_0x59c5('0x22f')]();var origin=link['origin'];var destination=link['destination'];var startB=(i+0x1)*Tools[_0x59c5('0x1db')](origin,o)/(sortedBranches[_0x59c5('0x19')]+0x1)+Tools[_0x59c5('0x1df')](origin,o);var f=i<intDiv$1(sortedBranches[_0x59c5('0x19')],0x2)?i+0x1:sortedBranches[_0x59c5('0x19')]-i;var hrzSegmentL=Tools['GetLFar'](origin,o)+f*offset/(midIndex+(midStraight?0x1:0x2));var endPoint=Tools[_0x59c5('0x1d2')](destination,o);if(o==Orientation[_0x59c5('0x1a1')]){Tools[_0x59c5('0x1d5')](link,new Point(startB,bounds(origin)[_0x59c5('0x1c2')]()),new Point(startB,hrzSegmentL),new Point(endPoint['x'],hrzSegmentL),endPoint);}else{Tools['SetLinkPoints'](link,new Point(bounds(origin)[_0x59c5('0x71')](),startB),new Point(hrzSegmentL,startB),new Point(hrzSegmentL,endPoint['y']),endPoint);}}}if(centeredBranching!=null){this[_0x59c5('0x241')](centeredBranching[_0x59c5('0x239')][_0x59c5('0x22f')](),o);var inLinks=flowchartLayout[_0x59c5('0x1fc')](this[_0x59c5('0x23e')][0x0]['getInLinks']());for(var l1=0x0;l1<inLinks[_0x59c5('0x19')];++l1){var link=inLinks[l1];if(link[_0x59c5('0x8')]!=rootNode['getNode']())this['connectNodeBorderCenters'](link,o);}}else for(var m=0x0;m<this[_0x59c5('0x23e')][_0x59c5('0x19')];++m){var mergeNode=this[_0x59c5('0x23e')][m];var inLinks=flowchartLayout[_0x59c5('0x1fc')](mergeNode[_0x59c5('0x229')]());inLinks[_0x59c5('0xed')](BOriginComparer(o));if(inLinks[_0x59c5('0x19')]==0x2){var leftLink=inLinks[0x0];var rightLink=inLinks[0x1];if(this[_0x59c5('0x240')]()){var left=this[_0x59c5('0x247')](rootNode,this[_0x59c5('0x23e')][0x0],o)-flowchartLayout[_0x59c5('0x238')]();var right=this[_0x59c5('0x248')](rootNode,this[_0x59c5('0x23e')][0x0],o)+flowchartLayout[_0x59c5('0x238')]();var rootLeft=Tools[_0x59c5('0x246')](rootNode[_0x59c5('0x231')](),o);var rootRight=Tools[_0x59c5('0x1d3')](rootNode[_0x59c5('0x231')](),o);var mergeLeft=Tools[_0x59c5('0x246')](this[_0x59c5('0x23e')][0x0][_0x59c5('0x231')](),o);var mergeRight=Tools[_0x59c5('0x1d3')](this[_0x59c5('0x23e')][0x0][_0x59c5('0x231')](),o);if(o==Orientation[_0x59c5('0x1a1')]){Tools[_0x59c5('0x1d5')](leftLink,rootLeft,new Point(left,rootLeft['y']),new Point(left,mergeLeft['y']),mergeLeft);Tools[_0x59c5('0x1d5')](rightLink,rootRight,new Point(right,rootRight['y']),new Point(right,mergeRight['y']),mergeRight);}else{Tools['SetLinkPoints'](leftLink,rootLeft,new Point(rootLeft['x'],left),new Point(mergeLeft['x'],left),mergeLeft);Tools[_0x59c5('0x1d5')](rightLink,rootRight,new Point(rootRight['x'],right),new Point(mergeRight['x'],right),mergeRight);}}else{var leftOrigin=leftLink[_0x59c5('0x8')];var rightOrigin=rightLink[_0x59c5('0x8')];var leftLfarCenter=Tools['GetLFarCenter'](leftOrigin,o);var rightLfarCenter=Tools[_0x59c5('0x1d1')](rightOrigin,o);var root=rootNode[_0x59c5('0x231')]();if(Tools[_0x59c5('0x1e6')](leftLfarCenter,o)<Tools[_0x59c5('0x1df')](mergeNode['getNode'](),o)){var leftEnd=Tools['GetBNearCenter'](mergeNode['getNode'](),o);var leftMiddle=new Point();if(o==Orientation[_0x59c5('0x1a1')])leftMiddle=new Point(leftLfarCenter['x'],leftEnd['y']);else leftMiddle=new Point(leftEnd['x'],leftLfarCenter['y']);Tools['SetLinkPoints'](leftLink,leftLfarCenter,leftMiddle,leftEnd);}else if(leftLink[_0x59c5('0x8')]==root){var leftEnd=Tools[_0x59c5('0x246')](mergeNode[_0x59c5('0x231')](),o);var linkPoints=Tools['GetLinkPoints'](leftLink);var nextToLast=linkPoints[linkPoints[_0x59c5('0x19')]-0x2];if(o==Orientation[_0x59c5('0x1a1')])nextToLast['y']=leftEnd['y'];else nextToLast['x']=leftEnd['x'];linkPoints[linkPoints[_0x59c5('0x19')]-0x2]=nextToLast;linkPoints[linkPoints[_0x59c5('0x19')]-0x1]=leftEnd;}else if(leftLink[_0x59c5('0x8')]!=root){var leftEnd=Tools[_0x59c5('0x1d2')](mergeNode[_0x59c5('0x231')](),o);var h=0x0;if(o==Orientation[_0x59c5('0x1a1')])h=(leftEnd['y']+leftLfarCenter['y'])/0x2;else h=(leftEnd['x']+leftLfarCenter['x'])/0x2;if(o==Orientation[_0x59c5('0x1a1')]){Tools[_0x59c5('0x1d5')](leftLink,leftLfarCenter,new Point(leftLfarCenter['x'],h),new Point(leftEnd['x'],h),leftEnd);}else{Tools[_0x59c5('0x1d5')](leftLink,leftLfarCenter,new Point(h,leftLfarCenter['y']),new Point(h,leftEnd['y']),leftEnd);}}if(Tools[_0x59c5('0x1e6')](rightLfarCenter,o)>Tools[_0x59c5('0x1e0')](mergeNode[_0x59c5('0x231')](),o)){var rightEnd=Tools[_0x59c5('0x1d3')](mergeNode[_0x59c5('0x231')](),o);var rightMiddle=new Point();if(o==Orientation[_0x59c5('0x1a1')])rightMiddle=new Point(rightLfarCenter['x'],rightEnd['y']);else rightMiddle=new Point(rightEnd['x'],rightLfarCenter['y']);Tools['SetLinkPoints'](rightLink,rightLfarCenter,rightMiddle,rightEnd);}else if(rightLink[_0x59c5('0x8')]==root){var linkPoints=Tools[_0x59c5('0x1da')](rightLink);var nextToLast=linkPoints[linkPoints[_0x59c5('0x19')]-0x2];var rightEnd=Tools[_0x59c5('0x1e6')](nextToLast,o)<Tools['GetBNear'](mergeNode['getNode'](),o)?Tools[_0x59c5('0x246')](mergeNode['getNode'](),o):Tools[_0x59c5('0x1d3')](mergeNode[_0x59c5('0x231')](),o);if(o==Orientation[_0x59c5('0x1a1')])nextToLast['y']=rightEnd['y'];else nextToLast['x']=rightEnd['x'];linkPoints[linkPoints['length']-0x2]=nextToLast;linkPoints[linkPoints[_0x59c5('0x19')]-0x1]=rightEnd;}else if(rightLink['origin']!=root){var rightEnd=Tools[_0x59c5('0x1d2')](mergeNode['getNode'](),o);var h=0x0;if(o==Orientation[_0x59c5('0x1a1')])h=(rightEnd['y']+rightLfarCenter['y'])/0x2;else h=(rightEnd['x']+rightLfarCenter['x'])/0x2;if(o==Orientation[_0x59c5('0x1a1')]){Tools['SetLinkPoints'](rightLink,rightLfarCenter,new Point(rightLfarCenter['x'],h),new Point(rightEnd['x'],h),rightEnd);}else{Tools[_0x59c5('0x1d5')](rightLink,rightLfarCenter,new Point(h,rightLfarCenter['y']),new Point(h,rightEnd['y']),rightEnd);}}}}else{for(var i=0x0;i<inLinks[_0x59c5('0x19')];++i){var link=inLinks[i];var origin=link[_0x59c5('0x8')];var destination=link[_0x59c5('0xb')];var endB=(i+0x1)*Tools[_0x59c5('0x1db')](destination,o)/(inLinks[_0x59c5('0x19')]+0x1)+Tools[_0x59c5('0x1df')](destination,o);var f=i<intDiv$1(inLinks[_0x59c5('0x19')],0x2)?i+0x1:inLinks['length']-i;var hrzSegmentL=Tools[_0x59c5('0x249')](destination,o)-f*offset/(inLinks[_0x59c5('0x19')]/0x2+0x1);var startPoint=Tools[_0x59c5('0x1d1')](origin,o);if(o==Orientation[_0x59c5('0x1a1')]){Tools[_0x59c5('0x1d5')](link,startPoint,new Point(startPoint['x'],hrzSegmentL),new Point(endB,hrzSegmentL),new Point(endB,bounds(destination)[_0x59c5('0x1c0')]()));}else{Tools['SetLinkPoints'](link,startPoint,new Point(hrzSegmentL,startPoint['y']),new Point(hrzSegmentL,endB),new Point(bounds(destination)[_0x59c5('0x6a')](),endB));}}}}var backLinks=this['getBackLinks'](rootNode[_0x59c5('0x229')]());backLinks[_0x59c5('0xed')](LOriginComparer(o));for(var i=0x0;i<backLinks[_0x59c5('0x19')];++i){var link=backLinks[i];var orect=bounds(link['origin']);var drect=bounds(link[_0x59c5('0xb')]);var startB=Tools['GetBCenter'](link[_0x59c5('0x8')],o);Tools['GetLCenter'](link[_0x59c5('0x8')],o);var endL=Tools[_0x59c5('0x1de')](link[_0x59c5('0xb')],o);var vSegmentB=b-this[_0x59c5('0x22c')]()/0x2+this[_0x59c5('0x237')]()+(rootNode[_0x59c5('0x22d')]()-0x1+i)*flowchartLayout[_0x59c5('0x238')]();if(o==Orientation[_0x59c5('0x1a1')]){Tools[_0x59c5('0x1d5')](link,new Point(startB,orect[_0x59c5('0x1c2')]()),new Point(startB,orect['bottom']()+offset/0x2),new Point(vSegmentB,orect[_0x59c5('0x1c2')]()+offset/0x2),new Point(vSegmentB,endL),new Point(drect['right'](),endL));}else{Tools['SetLinkPoints'](link,new Point(orect[_0x59c5('0x71')](),startB),new Point(orect[_0x59c5('0x71')]()+offset/0x2,startB),new Point(orect['right']()+offset/0x2,vSegmentB),new Point(endL,vSegmentB),new Point(endL,drect[_0x59c5('0x1c2')]()));}}if(mergeAdjusted){var maxB;for(var mi=0x0;mi<this['mergeNodes'][_0x59c5('0x19')];mi++){var fcn=this[_0x59c5('0x23e')][mi];var bf=Tools[_0x59c5('0x1e0')](fcn,o);if(mi==0x0)maxB=bf;else maxB=Math[_0x59c5('0xc6')](maxB,bf);}var expB=b+this[_0x59c5('0x222')]/0x2;if(expB<maxB)overflow=Math[_0x59c5('0xc6')](overflow,maxB-expB);}if(overflow)this[_0x59c5('0x236')]=overflow;this[_0x59c5('0x1f7')]=maxL;return maxL;}[_0x59c5('0x24a')](branches){var sortBuckets=new Map();for(var b=0x0;b<branches[_0x59c5('0x19')];++b){var branch=branches[b];if(!this[_0x59c5('0x23c')][_0x59c5('0xac')](branch[_0x59c5('0x22f')]()))continue;var merge=this['mergeMap'][_0x59c5('0x5d')](branch['getIncomingLink']());if(!sortBuckets['has'](merge))sortBuckets['set'](merge,[]);sortBuckets['get'](merge)[_0x59c5('0x16')](branch);}var result=[];sortBuckets[_0x59c5('0x15')](function(value){result=result[_0x59c5('0x24b')](value);});for(var b=0x0;b<branches[_0x59c5('0x19')];++b){var branch=branches[b];if(!this[_0x59c5('0x23c')][_0x59c5('0xac')](branch[_0x59c5('0x22f')]()))result[_0x59c5('0x16')](branch);}return result;}[_0x59c5('0x234')](){if(this[_0x59c5('0x23e')][_0x59c5('0x19')]>0x0)return this[_0x59c5('0x23e')][0x0][_0x59c5('0x234')]();return null;}[_0x59c5('0x229')](){return this[_0x59c5('0x23b')][_0x59c5('0x229')]();}[_0x59c5('0x60')](block){this[_0x59c5('0x20a')][_0x59c5('0x16')](block);super[_0x59c5('0x60')](block);}['nextNodes'](){var nodes=[];for(var m=0x0;m<this['mergeNodes']['length'];++m){var node=this[_0x59c5('0x23e')][m];nodes['push'](node['getNode']());}return nodes;}[_0x59c5('0x22b')](block){var branching=block instanceof FlowchartBranching?block:null;if(branching!=null&&this[_0x59c5('0x23e')][_0x59c5('0xd')](branching[_0x59c5('0x23b')]))return![];return!![];}['registerMerge'](mergeNode){if(!this['mergeNodes'][_0x59c5('0xd')](mergeNode))this['mergeNodes']['push'](mergeNode);this[_0x59c5('0x23c')][_0x59c5('0xa7')](this[_0x59c5('0x228')],mergeNode);if(mergeNode[_0x59c5('0x20f')]==null)mergeNode[_0x59c5('0x20f')]=this;if(this[_0x59c5('0x228')][_0x59c5('0xb')]==mergeNode[_0x59c5('0x231')]())this[_0x59c5('0x20a')][_0x59c5('0x16')](new EmptyBranch(this[_0x59c5('0x221')],this[_0x59c5('0x228')]));}[_0x59c5('0x240')](){return this[_0x59c5('0x20a')][_0x59c5('0x19')]==0x2&&this[_0x59c5('0x20a')][0x0]instanceof EmptyBranch&&this[_0x59c5('0x20a')][0x1]instanceof EmptyBranch&&this['mergeNodes'][_0x59c5('0x19')]==0x1;}[_0x59c5('0x23f')](){if(this[_0x59c5('0x23e')]['length']!=0x1)return null;var emptyBranches=0x0;var occupiedBranches=0x0;for(var b=0x0;b<this[_0x59c5('0x20a')][_0x59c5('0x19')];++b){var branch=this[_0x59c5('0x20a')][b];if(branch instanceof EmptyBranch)emptyBranches++;else occupiedBranches++;}if(occupiedBranches!=0x1||emptyBranches>0x2||emptyBranches<0x1)return null;var desc=new CenteredBranchingDescriptor();for(var b=0x0;b<this[_0x59c5('0x20a')][_0x59c5('0x19')];++b){var branch=this[_0x59c5('0x20a')][b];if(branch instanceof EmptyBranch){if(desc[_0x59c5('0x23a')]==null)desc[_0x59c5('0x23a')]=branch;else desc['leftBlock']=branch;}else{desc[_0x59c5('0x239')]=branch;}}return desc;}[_0x59c5('0x247')](node1,node2,o){if(o==Orientation['Vertical']){return Math['min'](bounds(node1[_0x59c5('0x231')]())[_0x59c5('0x6a')](),bounds(node2[_0x59c5('0x231')]())[_0x59c5('0x6a')]());}else{return Math[_0x59c5('0xc5')](bounds(node1[_0x59c5('0x231')]())[_0x59c5('0x1c0')](),bounds(node2['getNode']())[_0x59c5('0x1c0')]());}}[_0x59c5('0x248')](node1,node2,o){if(o==Orientation[_0x59c5('0x1a1')]){return Math[_0x59c5('0xc6')](bounds(node1[_0x59c5('0x231')]())['right'](),bounds(node2[_0x59c5('0x231')]())['right']());}else{return Math[_0x59c5('0xc6')](bounds(node1[_0x59c5('0x231')]())[_0x59c5('0x1c2')](),bounds(node2[_0x59c5('0x231')]())[_0x59c5('0x1c2')]());}}['getMergeNodes'](){return this[_0x59c5('0x23e')];}}FlowchartBranching[_0x59c5('0x1fa')]=[];class EmptyBranch extends FlowchartBlock{constructor(layout,link){super(layout);this[_0x59c5('0x209')](link);}[_0x59c5('0x1fb')](branchPadding,linkPadding,o){return 0x0;}['arrange'](b,l,offset,o){var oc=Tools[_0x59c5('0x246')](this['getIncomingLink']()['origin'],o);var dc=Tools['GetBNearCenter'](this[_0x59c5('0x22f')]()[_0x59c5('0xb')],o);if(o==Orientation[_0x59c5('0x1a1')]){Tools['SetLinkPoints'](this['getIncomingLink'](),oc,newPoint(b,oc['y']),newPoint(b,dc['y']),dc);}else{Tools['SetLinkPoints'](this[_0x59c5('0x22f')](),oc,newPoint(oc['x'],b),newPoint(dc['x'],b),dc);}this['furthestL']=Tools[_0x59c5('0x1e2')](this[_0x59c5('0x22f')]()[_0x59c5('0x8')],o);return this[_0x59c5('0x1f7')];}[_0x59c5('0x234')](){return null;}[_0x59c5('0x229')](){return null;}}function peek(stack){return stack[stack['length']-0x1];}function intDiv$1(numerator,denominator){return(numerator-numerator%denominator)/denominator;}function acceptPath(points,o,d,nodes){var br=bounds(o);var dr=bounds(d);for(var p=0x1;p<points[_0x59c5('0x19')]-0x1;p++){var point=points[p];if(br[_0x59c5('0x24c')](point))return![];if(dr[_0x59c5('0x24c')](point))return![];}for(var n=0x0;n<nodes['length'];n++){var node=nodes[n];if(node==o||node==d)continue;var rect=bounds(node);if(Geometry[_0x59c5('0x24d')](points,rect))return![];}return!![];}function evalPath(points,o,d,nodes){var penalty=0x0;var br=bounds(o);var dr=bounds(d);for(var p=0x1;p<points['length']-0x1;p++){var point=points[p];if(br['containsPoint'](point))penalty+=0x2;if(dr[_0x59c5('0x24c')](point))penalty+=0x2;}for(var n=0x0;n<nodes[_0x59c5('0x19')];n++){var node=nodes[n];if(node==o||node==d)continue;var rect=bounds(node);if(Geometry[_0x59c5('0x24d')](points,rect))penalty+=0x1;}return penalty;}function badPath(link,layout){var p=link[_0x59c5('0x1d0')];if(p['length']==0x2&&pathLen(p)>0x2*layout[_0x59c5('0x1ae')]){if(!acceptPath(p,link['origin'],link[_0x59c5('0xb')],layout['graph'][_0x59c5('0xe3')]))return!![];}if(link[_0x59c5('0x1d7')]&&pathLen(p)>3.3*layout[_0x59c5('0x1ae')]){if(!acceptPath(p,link[_0x59c5('0x8')],link[_0x59c5('0xb')],layout[_0x59c5('0xa5')]['vertices']))return!![];}if(link['_fcl_multiMerge']&&p[_0x59c5('0x19')]==0x3){if(!acceptPath(p,link[_0x59c5('0x8')],link[_0x59c5('0xb')],layout[_0x59c5('0xa5')]['vertices']))return!![];}return![];}function processed(link){if(!link['_fcl_processed'])return![];if(link[_0x59c5('0x1d0')][_0x59c5('0x19')]==0x2){var ps=link[_0x59c5('0x1d0')][0x0];var pe=link[_0x59c5('0x1d0')][0x1];if(ps['x']!=pe['x']&&ps['y']!=pe['y'])return![];}return!![];}function pathLen(points){var l=0x0;for(var p=0x0;p<points[_0x59c5('0x19')]-0x1;p++){var p1=points[p];var p2=points[p+0x1];var dx=Math['abs'](p1['x']-p2['x']);var dy=Math[_0x59c5('0x219')](p1['y']-p2['y']);l+=dx+dy;}return l;}function longestLink(graph){var maxLen=0x0;var longest=null;for(var l=0x0;l<graph[_0x59c5('0x0')][_0x59c5('0x19')];l++){var link=graph[_0x59c5('0x0')][l];var len=pathLen(link[_0x59c5('0x1d0')]);if(len>maxLen){maxLen=len;longest=link;}}return longest;}function countCrossings(graph,points,skip){var crossings=0x0;for(var l=0x0;l<graph['edges'][_0x59c5('0x19')];l++){var link=graph[_0x59c5('0x0')][l];if(link==skip)continue;if(Geometry[_0x59c5('0x24e')](points,link[_0x59c5('0x1d0')]))crossings++;}return crossings;}function nearIncomingLinks(node,o){var rect=bounds(node);var topIn=[];for(var l=0x0;l<node[_0x59c5('0x1')][_0x59c5('0x19')];l++){var link=node['inEdges'][l];var li=link['points']['length']-0x1;if(o==Orientation[_0x59c5('0x1a1')]){if(link['points'][li]['y']==rect['y'])topIn[_0x59c5('0x16')](link);}else{if(link[_0x59c5('0x1d0')][li]['x']==rect['x'])topIn[_0x59c5('0x16')](link);}}return topIn;}function farOutgoingLinks(node,o){var rect=bounds(node);var bottomOut=[];for(var l=0x0;l<node[_0x59c5('0xa')][_0x59c5('0x19')];l++){var link=node[_0x59c5('0xa')][l];var li=0x0;if(o==Orientation[_0x59c5('0x1a1')]){if(link['points'][li]['y']==rect['bottom']())bottomOut[_0x59c5('0x16')](link);}else{if(link[_0x59c5('0x1d0')][li]['x']==rect[_0x59c5('0x71')]())bottomOut[_0x59c5('0x16')](link);}}return bottomOut;}function sideIncomingLinks(node,o){var rect=bounds(node);var sideIn=[];for(var l=0x0;l<node[_0x59c5('0x1')][_0x59c5('0x19')];l++){var link=node[_0x59c5('0x1')][l];var li=link['points']['length']-0x1;if(o==Orientation['Vertical']){if(link['points'][li]['x']==rect['right']())sideIn[_0x59c5('0x16')](link);}else{if(link['points'][li]['y']==rect[_0x59c5('0x1c2')]())sideIn[_0x59c5('0x16')](link);}}return sideIn;}function startPointsCoincide(links,o){for(var l=0x0;l<links['length'];l++){var link=links[l];for(var l2=l+0x1;l2<links[_0x59c5('0x19')];l2++){var link2=links[l2];if(o==Orientation['Vertical']){if(link['points'][0x0]['x']==link2[_0x59c5('0x1d0')][0x0]['x'])return!![];}else{if(link[_0x59c5('0x1d0')][0x0]['y']==link2[_0x59c5('0x1d0')][0x0]['y'])return!![];}}}return![];}function endPointsCoincide(links,o){for(var l=0x0;l<links['length'];l++){var link=links[l];var li=link[_0x59c5('0x1d0')][_0x59c5('0x19')]-0x1;for(var l2=l+0x1;l2<links[_0x59c5('0x19')];l2++){var link2=links[l2];var l2i=link2[_0x59c5('0x1d0')]['length']-0x1;if(o==Orientation[_0x59c5('0x1a1')]){if(link[_0x59c5('0x1d0')][li]['x']==link2[_0x59c5('0x1d0')][l2i]['x'])return!![];}else{if(link[_0x59c5('0x1d0')][li]['y']==link2[_0x59c5('0x1d0')][l2i]['y'])return!![];}}}return![];}function pullNearInPointsApart(links,o){var n=links[0x0]['destination'];var r=bounds(n);var c=r[_0x59c5('0x1d4')]();var vert=o==Orientation[_0x59c5('0x1a1')];var sv=vert?{'x':c['x'],'y':c['y']-0x14}:{'x':c['x']-0x14,'y':c['y']};var ev={'x':c['x'],'y':c['y']};links[_0x59c5('0xed')](function(l1,l2){var s1=bounds(l1[_0x59c5('0x8')])[_0x59c5('0x1d4')]();var e1=bounds(l1['destination'])[_0x59c5('0x1d4')]();var s2=bounds(l2[_0x59c5('0x8')])[_0x59c5('0x1d4')]();var e2=bounds(l2[_0x59c5('0xb')])[_0x59c5('0x1d4')]();var a=Geometry[_0x59c5('0x24f')];var a1=a(sv,ev,s1,e1);var a2=a(sv,ev,s2,e2);return vert?a2-a1:a1-a2;});for(var i=0x0;i<links['length'];++i){var link=links[i];link['origin'];var dest=link[_0x59c5('0xb')];var endB=(i+0x1)*Tools['GetBreadth'](dest,o)/(links[_0x59c5('0x19')]+0x1)+Tools[_0x59c5('0x1df')](dest,o);i<intDiv$1(links['length'],0x2)?i+0x1:links[_0x59c5('0x19')]-i;var li=link[_0x59c5('0x1d0')][_0x59c5('0x19')]-0x1;var ni=li-0x1;if(vert)link['points'][li]['x']=link[_0x59c5('0x1d0')][ni]['x']=endB;else link[_0x59c5('0x1d0')][li]['y']=link[_0x59c5('0x1d0')][ni]['y']=endB;}}function pullFarOutPointsApart(links,o){var n=links[0x0]['origin'];var r=bounds(n);var c=r[_0x59c5('0x1d4')]();var vert=o==Orientation[_0x59c5('0x1a1')];var sv={'x':c['x'],'y':c['y']};var ev=vert?{'x':c['x'],'y':c['y']+0x14}:{'x':c['x']+0x14,'y':c['y']};links[_0x59c5('0xed')](function(l1,l2){var s1=bounds(l1[_0x59c5('0x8')])[_0x59c5('0x1d4')]();var e1=bounds(l1['destination'])[_0x59c5('0x1d4')]();var s2=bounds(l2['origin'])[_0x59c5('0x1d4')]();var e2=bounds(l2[_0x59c5('0xb')])[_0x59c5('0x1d4')]();var a=Geometry[_0x59c5('0x24f')];var a1=a(sv,ev,s1,e1);var a2=a(sv,ev,s2,e2);return vert?a1-a2:a2-a1;});for(var i=0x0;i<links[_0x59c5('0x19')];++i){var link=links[i];var origin=link[_0x59c5('0x8')];link[_0x59c5('0xb')];var endB=(i+0x1)*Tools[_0x59c5('0x1db')](origin,o)/(links[_0x59c5('0x19')]+0x1)+Tools['GetBNear'](origin,o);i<intDiv$1(links['length'],0x2)?i+0x1:links[_0x59c5('0x19')]-i;var li=0x0;var ni=0x1;if(vert)link[_0x59c5('0x1d0')][li]['x']=link[_0x59c5('0x1d0')][ni]['x']=endB;else link[_0x59c5('0x1d0')][li]['y']=link['points'][ni]['y']=endB;}}function pullSideInPointsApart(links,o){var n=links[0x0][_0x59c5('0xb')];var r=bounds(n);var c=r[_0x59c5('0x1d4')]();var vert=o==Orientation[_0x59c5('0x1a1')];var sv=vert?{'x':c['x']-0x14,'y':c['y']}:{'x':c['x'],'y':c['y']-0x14};var ev={'x':c['x'],'y':c['y']};links[_0x59c5('0xed')](function(l1,l2){var s1=bounds(l1[_0x59c5('0x8')])[_0x59c5('0x1d4')]();var e1=l1[_0x59c5('0x1d0')][l1[_0x59c5('0x1d0')][_0x59c5('0x19')]-0x1];var s2=bounds(l2[_0x59c5('0x8')])[_0x59c5('0x1d4')]();var e2=l2['points'][l2[_0x59c5('0x1d0')][_0x59c5('0x19')]-0x1];var a=Geometry[_0x59c5('0x24f')];var a1=a(sv,ev,s1,e1);var a2=a(sv,ev,s2,e2);return vert?a2-a1:a1-a2;});for(var i=0x0;i<links[_0x59c5('0x19')];++i){var link=links[i];link[_0x59c5('0x8')];var dest=link[_0x59c5('0xb')];var endL=(i+0x1)*Tools['GetLength'](dest,o)/(links['length']+0x1)+Tools['GetLNear'](dest,o);i<intDiv$1(links['length'],0x2)?i+0x1:links[_0x59c5('0x19')]-i;var li=link['points']['length']-0x1;var ni=li-0x1;if(vert)link[_0x59c5('0x1d0')][li]['y']=link[_0x59c5('0x1d0')][ni]['y']=endL;else link[_0x59c5('0x1d0')][li]['x']=link[_0x59c5('0x1d0')][ni]['x']=endL;}}function compareX(s1,s2){var p1=s1[_0x59c5('0x1d0')][s1[_0x59c5('0x22')]];var p2=s2[_0x59c5('0x1d0')][s2['index']];if(p1['x']<p2['x'])return-0x1;if(p1['x']>p2['x'])return 0x1;return 0x0;}function compareY(s1,s2){var p1=s1[_0x59c5('0x1d0')][s1[_0x59c5('0x22')]];var p2=s2['points'][s2['index']];if(p1['y']<p2['y'])return-0x1;if(p1['y']>p2['y'])return 0x1;return 0x0;}function compareV(s1,s2){var l1=s1[_0x59c5('0x1d0')][_0x59c5('0x19')]-0x1;var l2=s2['points'][_0x59c5('0x19')]-0x1;var p1=s1[_0x59c5('0x22')]>0x0?s1[_0x59c5('0x1d0')][s1[_0x59c5('0x22')]-0x1]:s1[_0x59c5('0x1d0')][0x0];var p2=s2[_0x59c5('0x22')]>0x0?s2[_0x59c5('0x1d0')][s2[_0x59c5('0x22')]-0x1]:s2[_0x59c5('0x1d0')][0x0];var q1=s1[_0x59c5('0x1d0')][s1[_0x59c5('0x22')]];var q2=s2[_0x59c5('0x1d0')][s2[_0x59c5('0x22')]];var r1=s1[_0x59c5('0x22')]<l1?s1[_0x59c5('0x1d0')][s1[_0x59c5('0x22')]+0x1]:s1[_0x59c5('0x1d0')][l1];var r2=s2['index']<l2?s2[_0x59c5('0x1d0')][s2[_0x59c5('0x22')]+0x1]:s2['points'][l2];var up1=q1['y']>r1['y'];var up2=q2['y']>r2['y'];var leftIn1=p1['x']>q1['x'];var leftIn2=p2['x']>q2['x'];if(leftIn1&&leftIn2){if(up1&&up2){if(q1['y']<q2['y'])return 0x1;if(q1['y']>q2['y'])return-0x1;}if(!up1&&!up2){if(q1['y']<q2['y'])return-0x1;if(q1['y']>q2['y'])return 0x1;}}if(up1&&up2){if(q1['y']<q2['y'])return-0x1;if(q1['y']>q2['y'])return 0x1;}if(!up1&&!up2){if(q1['y']<q2['y'])return 0x1;if(q1['y']>q2['y'])return-0x1;}if(up1&&!up2)return-0x1;if(!up1&&up2)return 0x1;if(p1['x']<p2['x'])return-0x1;if(p1['x']>p2['x'])return 0x1;return 0x0;}function compareH(s1,s2){var p1=s1[_0x59c5('0x1d0')][0x0];var p2=s2[_0x59c5('0x1d0')][0x0];if(p1['y']<p2['y'])return-0x1;if(p1['y']>p2['y'])return 0x1;return 0x0;}function coord(segment,horizontal){var point=segment[_0x59c5('0x1d0')][segment[_0x59c5('0x22')]];return horizontal?point['y']:point['x'];}function getSplitGroups(segments,horizontal){var graph=new Graph();var vertices=[];for(var i=0x0;i<segments[_0x59c5('0x19')];i++){var segment=segments[i];var vertex=graph[_0x59c5('0xf0')](null,segment);vertices[_0x59c5('0x16')](vertex);}for(var i=0x0;i<segments[_0x59c5('0x19')]-0x1;i++){for(var j=i+0x1;j<segments[_0x59c5('0x19')];j++){var i1=horizontal?segments[i]['xint']():segments[i][_0x59c5('0x250')]();var i2=horizontal?segments[j][_0x59c5('0x251')]():segments[j][_0x59c5('0x250')]();if(intervalsIntersect(i1,i2))graph['createEdge'](vertices[i],vertices[j]);}}var components=graph[_0x59c5('0x102')]();var splitGroups=[];for(var i=0x0;i<components[_0x59c5('0x19')];i++){var component=components[i];var group=[];for(var v=0x0;v<component[_0x59c5('0xe3')][_0x59c5('0x19')];v++){var vertex=component[_0x59c5('0xe3')][v];group[_0x59c5('0x16')](vertex[_0x59c5('0x6')]);}splitGroups[_0x59c5('0x16')](group);}return splitGroups;}function intervalsIntersect(i1,i2){if(i1[0x0]>=i2[0x1])return![];if(i2[0x0]>=i1[0x1])return![];return!![];}function originNodesArranged(links){for(var l=0x0;l<links[_0x59c5('0x19')];++l){var link=links[l];if(!link[_0x59c5('0x8')]['_fcl_arranged'])return![];}return!![];}function centerOfOriginNodes(links,o){var rect=Rect[_0x59c5('0x5f')];for(var l=0x0;l<links[_0x59c5('0x19')];++l){var link=links[l];var or=bounds(link['origin']);rect=rect[_0x59c5('0x252')]()?or:or['union'](rect);}return o==Orientation[_0x59c5('0x1a1')]?rect['x']+rect[_0x59c5('0xf1')]/0x2:rect['y']+rect[_0x59c5('0xf2')]/0x2;}function farOfOriginNodes(links,orientataion){var rect=Rect[_0x59c5('0x5f')];for(var l=0x0;l<links['length'];++l){var link=links[l];var or=bounds(link[_0x59c5('0x8')]);rect=rect['isEmpty']()?or:or[_0x59c5('0x1cf')](rect);}return orientataion==Orientation[_0x59c5('0x1a1')]?rect[_0x59c5('0x1c2')]():rect[_0x59c5('0x71')]();}class FractalLayout extends Layout{constructor(){super();this['root']=null;this[_0x59c5('0x1a0')]=MultipleGraphsPlacement[_0x59c5('0x1b2')];}get['setsLinkEndPoints'](){return![];}get['setsLinkPoints'](){return![];}[_0x59c5('0x1b5')](graph){var root=this[_0x59c5('0x27')]&&this['root'][_0x59c5('0x253')]&&graph[_0x59c5('0xe3')][_0x59c5('0xd')](this[_0x59c5('0x27')][_0x59c5('0x253')])?this[_0x59c5('0x27')][_0x59c5('0x253')]:graph[_0x59c5('0xe3')][0x0];root[_0x59c5('0x254')]=!![];this[_0x59c5('0x255')]=new Map();this['measureCircles'](root);var rootCircle=this[_0x59c5('0x255')]['get'](root);this[_0x59c5('0x256')](rootCircle,{'x':0x0,'y':0x0},0x0);}[_0x59c5('0x257')](node){var w=node[_0x59c5('0xf1')];var h=node['height'];var branchCircle={};var radius=Math[_0x59c5('0x258')](w*w+h*h)/0x2;branchCircle[_0x59c5('0x1ea')]=node;this[_0x59c5('0x255')][_0x59c5('0xa7')](node,branchCircle);var childCircles=[];var radTotal=0x0;node[_0x59c5('0x14')]()['forEach'](function(child){if(this[_0x59c5('0x255')][_0x59c5('0xac')](child))return;var childCircle=this[_0x59c5('0x257')](child);childCircles[_0x59c5('0x16')](childCircle);radTotal+=childCircle[_0x59c5('0x259')];},this);childCircles[_0x59c5('0xed')](compareRadius);if(!node['isRoot'])radTotal=radTotal*0x48/0x47;var pointsInCircle=[{'x':-w/0x2,'y':-h/0x2},{'x':w/0x2,'y':-h/0x2},{'x':w/0x2,'y':h/0x2},{'x':-w/0x2,'y':h/0x2}];var currentAngle=0x0;if(!node[_0x59c5('0x254')])currentAngle+=Math['PI']/0x48;var totalSweep=0x2*Math['PI'];for(var i=0x0;i<childCircles[_0x59c5('0x19')];++i){var childCircle=childCircles[i];var sweepAngle=totalSweep*childCircle[_0x59c5('0x259')]/radTotal;if(sweepAngle>Math['PI']){sweepAngle=Math['PI'];totalSweep=Math['PI'];radTotal-=childCircle[_0x59c5('0x259')];}childCircle['sweepAngle']=sweepAngle;}for(var i=0x0;i<childCircles[_0x59c5('0x19')];++i){var childCircle=childCircles[i];var halfSectorAngle=childCircle[_0x59c5('0x25a')]/0x2;currentAngle+=halfSectorAngle;childCircle[_0x59c5('0x25b')]=currentAngle;currentAngle+=halfSectorAngle;var centerDelta=Math[_0x59c5('0xc6')](radius+childCircle[_0x59c5('0x259')],childCircle['radius']/Math[_0x59c5('0x25c')](halfSectorAngle));childCircle['centerDelta']=centerDelta;var farPointDelta=Math['max'](radius+0x2*childCircle['radius'],childCircle['radius']+childCircle[_0x59c5('0x259')]/Math[_0x59c5('0x25c')](halfSectorAngle));var farPoint={'x':farPointDelta*Math[_0x59c5('0x25d')](childCircle[_0x59c5('0x25b')]),'y':farPointDelta*Math[_0x59c5('0x25c')](childCircle[_0x59c5('0x25b')])};pointsInCircle[_0x59c5('0x16')](farPoint);}if(childCircles['length']>0x0){var minCircle=Circle[_0x59c5('0x25e')](pointsInCircle);branchCircle['radius']=minCircle['r'];branchCircle[_0x59c5('0x25f')]=minCircle['x'];branchCircle['centerY']=minCircle['y'];}else{branchCircle['radius']=radius;branchCircle[_0x59c5('0x25f')]=branchCircle[_0x59c5('0x260')]=0x0;}branchCircle[_0x59c5('0x261')]=childCircles;return branchCircle;}[_0x59c5('0x256')](circle,center,angle){var parentLinkAngle=angle;if(!circle['node']['isRoot'])parentLinkAngle+=Math['PI']-circle[_0x59c5('0x25b')];var nodePos={'x':center['x']-circle[_0x59c5('0x25f')],'y':center['y']-circle['centerY']};circle[_0x59c5('0x261')][_0x59c5('0x15')](function(childCircle){var childCirclePos={'x':nodePos['x']+childCircle[_0x59c5('0x262')]*Math[_0x59c5('0x25d')](childCircle['angle']),'y':nodePos['y']+childCircle[_0x59c5('0x262')]*Math[_0x59c5('0x25c')](childCircle[_0x59c5('0x25b')])};childCirclePos=Geometry[_0x59c5('0x263')](childCirclePos,center,parentLinkAngle);this[_0x59c5('0x256')](childCircle,childCirclePos,parentLinkAngle);},this);nodePos=Geometry[_0x59c5('0x263')](nodePos,center,parentLinkAngle);circle['node']['x']=nodePos['x'];circle[_0x59c5('0x1ea')]['y']=nodePos['y'];}[_0x59c5('0x1c3')](){return this[_0x59c5('0x1c4')][_0x59c5('0x1c5')];}get['anchoring'](){return this[_0x59c5('0x1cb')];}set['anchoring'](value){this['_anchoring']=value;}get[_0x59c5('0x1cc')](){return this[_0x59c5('0x1a3')];}set[_0x59c5('0x1cc')](value){this[_0x59c5('0x1a3')]=value;}get[_0x59c5('0x27')](){return this['_root'];}set[_0x59c5('0x27')](value){this['_root']=value;}get['multipleGraphsPlacement'](){return this[_0x59c5('0x1a4')];}set['multipleGraphsPlacement'](value){this[_0x59c5('0x1a4')]=value;}}function compareRadius(e1,e2){var r1=e1[_0x59c5('0x259')];var r2=e2['radius'];if(r1<r2)return 0x1;if(r1>r2)return-0x1;return 0x0;}class LayeredLayout extends Layout{constructor(){super();this[_0x59c5('0x1ae')]=0x14;this[_0x59c5('0x264')]=0x19;this[_0x59c5('0x94')]=LayoutDirection[_0x59c5('0x1b0')];this[_0x59c5('0x265')]=0x1;this['multipleGraphsPlacement']=MultipleGraphsPlacement[_0x59c5('0x1b2')];this[_0x59c5('0x266')]=![];}get[_0x59c5('0x1a6')](){return![];}[_0x59c5('0x1b5')](graph){graph[_0x59c5('0xf5')]();this['graph']=graph;var reversedEdges=graph[_0x59c5('0x15c')]();for(var n=0x0;n<graph['vertices'][_0x59c5('0x19')];n++){var node=graph['vertices'][n];node['layer']=-0x1;node[_0x59c5('0x267')]=0x0;node[_0x59c5('0x268')]=0x0;node['uLinkCount']=0x0;node['dLinkCount']=0x0;node[_0x59c5('0x269')]=0x0;node[_0x59c5('0x26a')]=0x0;node[_0x59c5('0x26b')]=0x0;node[_0x59c5('0x26c')]=![];}for(var l=0x0;l<graph['edges']['length'];l++){var link=graph[_0x59c5('0x0')][l];link['dummificationLevel']=0x0;}var current=[];var layering=new Map();graph[_0x59c5('0xe3')][_0x59c5('0x15')](function(node){if(node[_0x59c5('0x1')][_0x59c5('0x19')]==0x0){layering[_0x59c5('0xa7')](node,0x0);current[_0x59c5('0x16')](node);}});while(current[_0x59c5('0x19')]>0x0){var next=current[_0x59c5('0x110')]();next[_0x59c5('0xa')][_0x59c5('0x15')](function(link){var dest=link[_0x59c5('0xb')];if(!layering[_0x59c5('0xac')](dest))layering['set'](dest,layering['get'](next)+0x1);else layering['set'](dest,Math[_0x59c5('0xc6')](layering[_0x59c5('0x5d')](dest),layering[_0x59c5('0x5d')](next)+0x1));if(!current[_0x59c5('0xd')](dest))current[_0x59c5('0x16')](dest);});}var layerCount=0x0;layering['forEach'](function(nodeLayer){layerCount=Math[_0x59c5('0xc6')](layerCount,nodeLayer);});var sortedNodes=[];sortedNodes[_0x59c5('0x16')](...layering[_0x59c5('0xb7')]());sortedNodes[_0x59c5('0xed')](function(o1,o2){var o1layer=layering[_0x59c5('0x5d')](o1);var o2layer=layering['get'](o2);if(o1layer<o2layer)return 0x1;if(o1layer>o2layer)return-0x1;return o1[_0x59c5('0x22')]-o2[_0x59c5('0x22')];});for(var n=0x0;n<sortedNodes[_0x59c5('0x19')];++n){var node=sortedNodes[n];var minLayer=Number['MAX_VALUE'];if(node[_0x59c5('0xa')][_0x59c5('0x19')]==0x0)continue;for(var l=0x0;l<node[_0x59c5('0xa')]['length'];++l){var link=node['outEdges'][l];minLayer=Math[_0x59c5('0xc5')](minLayer,layering[_0x59c5('0x5d')](link['destination']));}if(minLayer>0x1)layering[_0x59c5('0xa7')](node,minLayer-0x1);}this[_0x59c5('0x26d')]=[];for(var i=0x0;i<layerCount+0x1;i++)this[_0x59c5('0x26d')]['push']([]);layering['forEach'](function(layer,node){node['layer']=layer;this['layers'][layer]['push'](node);},this);for(var l=0x0;l<this[_0x59c5('0x26d')][_0x59c5('0x19')];l++){var layer=this[_0x59c5('0x26d')][l];layer[_0x59c5('0xed')](compareByIndex);for(var i=0x0;i<layer[_0x59c5('0x19')];i++)layer[i]['gridPosition']=i;}this['dummify']();this[_0x59c5('0x26e')]();this[_0x59c5('0x26f')]();this[_0x59c5('0x270')]();this['assignCoordinates']();this[_0x59c5('0x271')]();reversedEdges[_0x59c5('0x15')](function(e){if(e[_0x59c5('0x1d0')])e[_0x59c5('0x1d0')][_0x59c5('0xa2')]();});}[_0x59c5('0x272')](m,n,minDist){var l=m[_0x59c5('0x4')];var i=m[_0x59c5('0x273')];this[_0x59c5('0x274')][l][i]=minDist;}[_0x59c5('0x275')](m,n){var l=m[_0x59c5('0x4')];var i1=m[_0x59c5('0x273')];var i2=n[_0x59c5('0x273')];var min=Math[_0x59c5('0xc5')](i1,i2);var max=Math[_0x59c5('0xc6')](i1,i2);var dist=0x0;for(var i=min;i<max;++i)dist+=this[_0x59c5('0x274')][l][i];return dist;}[_0x59c5('0x276')](){var nodeLeftClassRef={'value':null};var result=this[_0x59c5('0x277')](nodeLeftClassRef,0x1);this[_0x59c5('0x278')]=nodeLeftClassRef[_0x59c5('0xfe')];return result;}['computeRightClasses'](){var nodeRightClassRef={'value':null};var result=this['computeClasses'](nodeRightClassRef,-0x1);this['nodeRightClass']=nodeRightClassRef[_0x59c5('0xfe')];return result;}[_0x59c5('0x277')](nodeClassRef,d){var nodeClass=nodeClassRef[_0x59c5('0xfe')]=new Map();var currentClass=0x0;for(var l=0x0;l<this[_0x59c5('0x26d')][_0x59c5('0x19')];++l){currentClass=l;var layer=this[_0x59c5('0x26d')][l];for(var n=d==0x1?0x0:layer[_0x59c5('0x19')]-0x1;0x0<=n&&n<layer[_0x59c5('0x19')];n+=d){var node=layer[n];if(!nodeClass['has'](node)){nodeClass[_0x59c5('0xa7')](node,currentClass);if(node['dummy']){this[_0x59c5('0x279')](node)[_0x59c5('0x15')](function(vnode){nodeClass[_0x59c5('0xa7')](vnode,currentClass);});}}else{currentClass=nodeClass[_0x59c5('0x5d')](node);}}}var classes=[];for(var i=0x0;i<this[_0x59c5('0x26d')][_0x59c5('0x19')];i++)classes[_0x59c5('0x16')](null);nodeClass[_0x59c5('0x15')](function(classIndex,node){if(classes[classIndex]===null)classes[classIndex]=[];classes[classIndex][_0x59c5('0x16')](node);});return classes;}[_0x59c5('0x27a')](leftClasses){var leftPos=new Map();for(var c=0x0;c<this[_0x59c5('0x26d')][_0x59c5('0x19')];++c){var classNodes=leftClasses[c];if(classNodes==null)continue;for(var n=0x0;n<classNodes[_0x59c5('0x19')];n++){var node=classNodes[n];if(!leftPos[_0x59c5('0xac')](node))this[_0x59c5('0x27b')](node,leftPos,c);}var d=Number[_0x59c5('0x27c')];for(var n=0x0;n<classNodes['length'];n++){var node=classNodes[n];var rightSibling=this[_0x59c5('0x27d')](node);if(rightSibling!=null&&this[_0x59c5('0x278')][_0x59c5('0x5d')](rightSibling)!=c)d=Math['min'](d,leftPos['get'](rightSibling)-leftPos[_0x59c5('0x5d')](node)-this['getMinDist'](node,rightSibling));}if(d==Number[_0x59c5('0x27c')]){var D=[];for(var n=0x0;n<classNodes[_0x59c5('0x19')];n++){var node=classNodes[n];var neighbors=[];neighbors[_0x59c5('0x16')](...this[_0x59c5('0x27e')]['get'](node));neighbors['push'](...this[_0x59c5('0x27f')][_0x59c5('0x5d')](node));for(var e=0x0;e<neighbors[_0x59c5('0x19')];e++){var neighbor=neighbors[e];if(this[_0x59c5('0x278')]['get'](neighbor)<c)D['push']({'diff':leftPos['get'](neighbor)-leftPos['get'](node),'n':neighbor});}}D[_0x59c5('0xed')](function(a,b){var s=a['diff']-b[_0x59c5('0x280')];if(s==0x0)s=compareByIndex(a['n'],b['n']);return s;});if(D['length']==0x0)d=0x0;else if(D[_0x59c5('0x19')]%0x2==0x1)d=D[intDiv(D[_0x59c5('0x19')],0x2)][_0x59c5('0x280')];else d=(D[intDiv(D[_0x59c5('0x19')],0x2)-0x1]['diff']+D[intDiv(D[_0x59c5('0x19')],0x2)]['diff'])/0x2;}for(var n=0x0;n<classNodes[_0x59c5('0x19')];n++){var node=classNodes[n];leftPos['set'](node,leftPos[_0x59c5('0x5d')](node)+d);}}return leftPos;}[_0x59c5('0x281')](pos){for(var l=0x0;l<this[_0x59c5('0x26d')][_0x59c5('0x19')];++l){var s='';s+=_0x59c5('0x282')+l+':\x20';var layer=this[_0x59c5('0x26d')][l];for(var n=0x0;n<layer[_0x59c5('0x19')];++n)s+=pos[_0x59c5('0x5d')](layer[n])+'\x20';console[_0x59c5('0x21e')](s);}}[_0x59c5('0x283')](rightClasses){var rightPos=new Map();for(var c=0x0;c<this[_0x59c5('0x26d')][_0x59c5('0x19')];++c){var classNodes=rightClasses[c];if(classNodes==null)continue;for(var n=0x0;n<classNodes[_0x59c5('0x19')];n++){var node=classNodes[n];if(!rightPos[_0x59c5('0xac')](node))this[_0x59c5('0x284')](node,rightPos,c);}var d=Number[_0x59c5('0x285')];for(var n=0x0;n<classNodes[_0x59c5('0x19')];n++){var node=classNodes[n];var leftSibling=this[_0x59c5('0x286')](node);if(leftSibling!=null&&this[_0x59c5('0x287')][_0x59c5('0x5d')](leftSibling)!=c)d=Math['max'](d,rightPos[_0x59c5('0x5d')](leftSibling)-rightPos[_0x59c5('0x5d')](node)+this[_0x59c5('0x275')](leftSibling,node));}if(d==Number['NEGATIVE_INFINITY']){var D=[];for(var n=0x0;n<classNodes[_0x59c5('0x19')];n++){var node=classNodes[n];var neighbors=[];neighbors['push'](...this[_0x59c5('0x27e')][_0x59c5('0x5d')](node));neighbors[_0x59c5('0x16')](...this[_0x59c5('0x27f')][_0x59c5('0x5d')](node));for(var e=0x0;e<neighbors[_0x59c5('0x19')];e++){var neighbor=neighbors[e];if(this['nodeRightClass'][_0x59c5('0x5d')](neighbor)<c)D[_0x59c5('0x16')]({'diff':rightPos['get'](node)-rightPos[_0x59c5('0x5d')](neighbor),'n':neighbor});}}D['sort'](function(a,b){var s=a['diff']-b['diff'];if(s==0x0)s=compareByIndex(a['n'],b['n']);return s;});if(D[_0x59c5('0x19')]==0x0)d=0x0;else if(D['length']%0x2==0x1)d=D[intDiv(D[_0x59c5('0x19')],0x2)][_0x59c5('0x280')];else d=(D[intDiv(D['length'],0x2)-0x1]['diff']+D[intDiv(D[_0x59c5('0x19')],0x2)][_0x59c5('0x280')])/0x2;}for(var n=0x0;n<classNodes['length'];n++){var node=classNodes[n];rightPos[_0x59c5('0xa7')](node,rightPos[_0x59c5('0x5d')](node)+d);}}return rightPos;}[_0x59c5('0x288')](){for(var l=0x0;l<this[_0x59c5('0x26d')]['length'];++l){var layer=this[_0x59c5('0x26d')][l];layer[_0x59c5('0xed')](compareByGridPos);}this[_0x59c5('0x274')]=[];for(var l=0x0;l<this[_0x59c5('0x26d')][_0x59c5('0x19')];++l){var layer=this[_0x59c5('0x26d')][l];this[_0x59c5('0x274')][l]=[];for(var n=0x0;n<layer[_0x59c5('0x19')];++n){var node=layer[n];node['indexInLayer']=n;this[_0x59c5('0x274')][l][n]=this[_0x59c5('0x1ae')];if(n<layer[_0x59c5('0x19')]-0x1){if(this['direction']%0x2==0x0)this['minDistances'][l][n]+=(node[_0x59c5('0xf1')]+layer[n+0x1]['width'])/0x2;else this[_0x59c5('0x274')][l][n]+=(node[_0x59c5('0xf2')]+layer[n+0x1][_0x59c5('0xf2')])/0x2;}}}this[_0x59c5('0x27f')]=new Map();this[_0x59c5('0x27e')]=new Map();this[_0x59c5('0xa5')][_0x59c5('0xe3')][_0x59c5('0x15')](function(node){this[_0x59c5('0x27f')][_0x59c5('0xa7')](node,[]);this[_0x59c5('0x27e')][_0x59c5('0xa7')](node,[]);},this);this['graph'][_0x59c5('0x0')][_0x59c5('0x15')](function(link){var origin=link[_0x59c5('0x8')];var dest=link[_0x59c5('0xb')];var down=null,up=null;if(origin['layer']>dest[_0x59c5('0x4')]){down=link['origin'];up=link['destination'];}else{up=link[_0x59c5('0x8')];down=link[_0x59c5('0xb')];}this[_0x59c5('0x27f')][_0x59c5('0x5d')](up)[_0x59c5('0x16')](down);this[_0x59c5('0x27e')]['get'](down)['push'](up);},this);this[_0x59c5('0x27f')][_0x59c5('0x15')](function(list){list[_0x59c5('0xed')](compareByGridPos);});this[_0x59c5('0x27e')][_0x59c5('0x15')](function(list){list[_0x59c5('0xed')](compareByGridPos);});for(var l=0x0;l<this[_0x59c5('0x26d')][_0x59c5('0x19')]-0x1;++l){var layer=this[_0x59c5('0x26d')][l];for(var u=0x0;u<layer[_0x59c5('0x19')]-0x1;u++){var currNode=layer[u];if(!currNode[_0x59c5('0x26c')])continue;var currDown=this[_0x59c5('0x27f')]['get'](currNode)[0x0];if(!currDown['dummy'])continue;for(var n=u+0x1;n<layer[_0x59c5('0x19')];++n){var node=layer[n];if(!node[_0x59c5('0x26c')])continue;var downNode=this[_0x59c5('0x27f')][_0x59c5('0x5d')](node)[0x0];if(!downNode[_0x59c5('0x26c')])continue;if(currDown['gridPosition']>downNode['gridPosition']){var pos=currDown['gridPosition'];currDown['gridPosition']=downNode[_0x59c5('0x26b')];downNode[_0x59c5('0x26b')]=pos;var i1=currDown[_0x59c5('0x273')];var i2=downNode['indexInLayer'];this[_0x59c5('0x26d')][l+0x1][i1]=downNode;this[_0x59c5('0x26d')][l+0x1][i2]=currDown;currDown[_0x59c5('0x273')]=i2;downNode[_0x59c5('0x273')]=i1;}}}}var leftClasses=this[_0x59c5('0x276')]();var rightClasses=this[_0x59c5('0x289')]();var leftPos=this[_0x59c5('0x27a')](leftClasses);var rightPos=this['placeRightToLeft'](rightClasses);var x=new Map();this[_0x59c5('0xa5')]['vertices'][_0x59c5('0x15')](function(node){x[_0x59c5('0xa7')](node,(leftPos[_0x59c5('0x5d')](node)+rightPos[_0x59c5('0x5d')](node))/0x2);});var order=new Map();var placed=new Map();for(var l=0x0;l<this[_0x59c5('0x26d')][_0x59c5('0x19')];++l){var layer=this[_0x59c5('0x26d')][l];var sequenceStart=-0x1;for(var n=0x0;n<layer[_0x59c5('0x19')];++n){var node=layer[n];order[_0x59c5('0xa7')](node,0x0);placed[_0x59c5('0xa7')](node,![]);if(node[_0x59c5('0x26c')]){if(sequenceStart==-0x1)sequenceStart=n;else if(sequenceStart==n-0x1)sequenceStart=n;else{order[_0x59c5('0xa7')](layer[sequenceStart],0x0);var sdx=x[_0x59c5('0x5d')](node)-x[_0x59c5('0x5d')](layer[sequenceStart]);if(Math[_0x59c5('0x219')](sdx-this[_0x59c5('0x275')](layer[sequenceStart],node))<0.0001)placed[_0x59c5('0xa7')](layer[sequenceStart],!![]);else placed['set'](layer[sequenceStart],![]);sequenceStart=n;}}}}var directions=[0x1,-0x1];directions['forEach'](function(d){var start=d==0x1?0x0:this[_0x59c5('0x26d')][_0x59c5('0x19')]-0x1;d==0x1?this[_0x59c5('0x26d')][_0x59c5('0x19')]-0x1:0x0;for(var l=start;0x0<=l&&l<this[_0x59c5('0x26d')]['length'];l+=d){var layer=this['layers'][l];var virtualStartIndex=leftMostVirtualNode(layer);var virtualStart=null;var sequence=null;if(virtualStartIndex!=-0x1){virtualStart=layer[virtualStartIndex];sequence=[];for(var i=0x0;i<virtualStartIndex;i++)sequence[_0x59c5('0x16')](layer[i]);}else{virtualStart=null;sequence=layer;}if(sequence[_0x59c5('0x19')]>0x0){this[_0x59c5('0x28a')](x,null,virtualStart,d,sequence);for(var i=0x0;i<sequence[_0x59c5('0x19')]-0x1;++i)this['setMinDist'](sequence[i],sequence[i+0x1],x[_0x59c5('0x5d')](sequence[i+0x1])-x['get'](sequence[i]));if(virtualStart!=null)this[_0x59c5('0x272')](sequence[sequence['length']-0x1],virtualStart,x[_0x59c5('0x5d')](virtualStart)-x['get'](sequence[sequence[_0x59c5('0x19')]-0x1]));}while(virtualStart!=null){var virtualEnd=nextVirtualNode(layer,virtualStart);if(virtualEnd==null){virtualStartIndex=virtualStart[_0x59c5('0x273')];sequence=[];for(var i=virtualStartIndex+0x1;i<layer[_0x59c5('0x19')];i++)sequence[_0x59c5('0x16')](layer[i]);if(sequence[_0x59c5('0x19')]>0x0){this[_0x59c5('0x28a')](x,virtualStart,null,d,sequence);for(var i=0x0;i<sequence['length']-0x1;++i)this[_0x59c5('0x272')](sequence[i],sequence[i+0x1],x[_0x59c5('0x5d')](sequence[i+0x1])-x[_0x59c5('0x5d')](sequence[i]));this[_0x59c5('0x272')](virtualStart,sequence[0x0],x[_0x59c5('0x5d')](sequence[0x0])-x[_0x59c5('0x5d')](virtualStart));}}else if(order[_0x59c5('0x5d')](virtualStart)==d){virtualStartIndex=virtualStart[_0x59c5('0x273')];var virtualEndIndex=virtualEnd[_0x59c5('0x273')];sequence=[];for(var i=virtualStartIndex+0x1;i<virtualEndIndex;i++)sequence[_0x59c5('0x16')](layer[i]);if(sequence[_0x59c5('0x19')]>0x0)this[_0x59c5('0x28a')](x,virtualStart,virtualEnd,d,sequence);placed[_0x59c5('0xa7')](virtualStart,!![]);}virtualStart=virtualEnd;}this['adjustDirections'](l,d,order,placed);}},this);var depth=this[_0x59c5('0x1a2')];for(var i=this[_0x59c5('0x94')]<0x2?0x0:this[_0x59c5('0x26d')][_0x59c5('0x19')]-0x1;this[_0x59c5('0x94')]<0x2?i<this[_0x59c5('0x26d')]['length']:i>=0x0;i+=this[_0x59c5('0x94')]<0x2?0x1:-0x1){var layer=this[_0x59c5('0x26d')][i];var height=Number[_0x59c5('0x28b')];for(var n=0x0;n<layer[_0x59c5('0x19')];++n){var node=layer[n];if(this[_0x59c5('0x94')]%0x2==0x0)height=Math[_0x59c5('0xc6')](height,node[_0x59c5('0xf2')]);else height=Math['max'](height,node[_0x59c5('0xf1')]);}for(var n=0x0;n<layer[_0x59c5('0x19')];++n){var node=layer[n];node[_0x59c5('0x26b')];if(this[_0x59c5('0x94')]%0x2==0x0){node['x']=x['get'](node);node['y']=depth+height/0x2;}else{node['x']=depth+height/0x2;node['y']=x[_0x59c5('0x5d')](node);}}depth+=this[_0x59c5('0x264')]+height;}}[_0x59c5('0x28c')](l,d,order,placed){if(l+d<0x0||l+d>=this[_0x59c5('0x26d')][_0x59c5('0x19')])return;var prevBridge=null,prevBridgeTarget=null;var layer=this[_0x59c5('0x26d')][l+d];for(var n=0x0;n<layer[_0x59c5('0x19')];++n){var nextBridge=layer[n];if(nextBridge[_0x59c5('0x26c')]){var nextBridgeTarget=this['getNeighborOnLayer'](nextBridge,l);if(nextBridgeTarget[_0x59c5('0x26c')]){if(prevBridge!=null){var p=placed[_0x59c5('0x5d')](prevBridgeTarget);var clayer=this['layers'][l];var i1=prevBridgeTarget[_0x59c5('0x273')];var i2=nextBridgeTarget[_0x59c5('0x273')];for(var i=i1+0x1;i<i2;++i){if(clayer[i][_0x59c5('0x26c')])p=p&&placed[_0x59c5('0x5d')](clayer[i]);}if(p){order[_0x59c5('0xa7')](prevBridge,d);var j1=prevBridge[_0x59c5('0x273')];var j2=nextBridge[_0x59c5('0x273')];for(var j=j1+0x1;j<j2;++j){if(layer[j][_0x59c5('0x26c')])order[_0x59c5('0xa7')](layer[j],d);}}}prevBridge=nextBridge;prevBridgeTarget=nextBridgeTarget;}}}}['getNeighborOnLayer'](node,l){var neighbor=this[_0x59c5('0x27e')][_0x59c5('0x5d')](node)[0x0];if(neighbor[_0x59c5('0x4')]==l)return neighbor;neighbor=this[_0x59c5('0x27f')]['get'](node)[0x0];if(neighbor[_0x59c5('0x4')]==l)return neighbor;return null;}[_0x59c5('0x28a')](x,virtualStart,virtualEnd,dir,sequence){if(sequence[_0x59c5('0x19')]==0x1)this['placeSingle'](x,virtualStart,virtualEnd,dir,sequence[0x0]);if(sequence[_0x59c5('0x19')]>0x1){var r=sequence['length'],t=intDiv(r,0x2);this[_0x59c5('0x28a')](x,virtualStart,virtualEnd,dir,sequence[_0x59c5('0x9d')](0x0,t));this[_0x59c5('0x28a')](x,virtualStart,virtualEnd,dir,sequence['slice'](t));this['combineSequences'](x,virtualStart,virtualEnd,dir,sequence);}}[_0x59c5('0x28d')](x,virtualStart,virtualEnd,dir,node){var neighbors=dir==-0x1?this['downNodes'][_0x59c5('0x5d')](node):this['upNodes'][_0x59c5('0x5d')](node);var n=neighbors[_0x59c5('0x19')];if(n!=0x0){if(n%0x2==0x1)x['set'](node,x[_0x59c5('0x5d')](neighbors[intDiv(n,0x2)]));else x['set'](node,(x[_0x59c5('0x5d')](neighbors[intDiv(n,0x2)-0x1])+x[_0x59c5('0x5d')](neighbors[intDiv(n,0x2)]))/0x2);if(virtualStart!=null)x[_0x59c5('0xa7')](node,Math['max'](x[_0x59c5('0x5d')](node),x['get'](virtualStart)+this['getMinDist'](virtualStart,node)));if(virtualEnd!=null)x[_0x59c5('0xa7')](node,Math[_0x59c5('0xc5')](x['get'](node),x[_0x59c5('0x5d')](virtualEnd)-this[_0x59c5('0x275')](node,virtualEnd)));}}[_0x59c5('0x28e')](x,virtualStart,virtualEnd,dir,sequence){var r=sequence[_0x59c5('0x19')],t=intDiv(r,0x2);var leftHeap=[];for(var i=0x0;i<t;++i){var c=0x0;var neighbors=dir==-0x1?this['downNodes'][_0x59c5('0x5d')](sequence[i]):this[_0x59c5('0x27e')][_0x59c5('0x5d')](sequence[i]);for(var n=0x0;n<neighbors[_0x59c5('0x19')];++n){var neighbor=neighbors[n];if(x[_0x59c5('0x5d')](neighbor)>=x[_0x59c5('0x5d')](sequence[i])){c++;}else{c--;leftHeap[_0x59c5('0x16')]({'k':x[_0x59c5('0x5d')](neighbor)+this[_0x59c5('0x275')](sequence[i],sequence[t-0x1]),'v':0x2});}}leftHeap[_0x59c5('0x16')]({'k':x[_0x59c5('0x5d')](sequence[i])+this[_0x59c5('0x275')](sequence[i],sequence[t-0x1]),'v':c});}if(virtualStart!=null)leftHeap[_0x59c5('0x16')]({'k':x[_0x59c5('0x5d')](virtualStart)+this[_0x59c5('0x275')](virtualStart,sequence[t-0x1]),'v':Number[_0x59c5('0xfb')]});leftHeap[_0x59c5('0xed')](compareByPosDecreasing);var rightHeap=[];for(var i=t;i<r;++i){var c=0x0;var neighbors=dir==-0x1?this[_0x59c5('0x27f')][_0x59c5('0x5d')](sequence[i]):this[_0x59c5('0x27e')][_0x59c5('0x5d')](sequence[i]);for(var n=0x0;n<neighbors[_0x59c5('0x19')];++n){var neighbor=neighbors[n];if(x[_0x59c5('0x5d')](neighbor)<=x[_0x59c5('0x5d')](sequence[i])){c++;}else{c--;rightHeap[_0x59c5('0x16')]({'k':x['get'](neighbor)-this[_0x59c5('0x275')](sequence[i],sequence[t]),'v':0x2});}}rightHeap['push']({'k':x['get'](sequence[i])-this[_0x59c5('0x275')](sequence[i],sequence[t]),'v':c});}if(virtualEnd!=null)rightHeap[_0x59c5('0x16')]({'k':x['get'](virtualEnd)-this[_0x59c5('0x275')](virtualEnd,sequence[t]),'v':Number[_0x59c5('0xfb')]});rightHeap[_0x59c5('0xed')](compareByPosIncreasing);var leftRes=0x0,rightRes=0x0;var m=this[_0x59c5('0x275')](sequence[t-0x1],sequence[t]);while(x[_0x59c5('0x5d')](sequence[t])-x[_0x59c5('0x5d')](sequence[t-0x1])<m){if(leftRes<rightRes){if(leftHeap['length']==0x0){x[_0x59c5('0xa7')](sequence[t-0x1],x['get'](sequence[t])-m);break;}else{var pair=leftHeap['shift']();leftRes=leftRes+pair['v'];x[_0x59c5('0xa7')](sequence[t-0x1],pair['k']);x['set'](sequence[t-0x1],Math[_0x59c5('0xc6')](x[_0x59c5('0x5d')](sequence[t-0x1]),x[_0x59c5('0x5d')](sequence[t])-m));}}else{if(rightHeap[_0x59c5('0x19')]==0x0){x[_0x59c5('0xa7')](sequence[t],x[_0x59c5('0x5d')](sequence[t-0x1])+m);break;}else{var pair=rightHeap[_0x59c5('0x110')]();rightRes=rightRes+pair['v'];x['set'](sequence[t],pair['k']);x['set'](sequence[t],Math[_0x59c5('0xc5')](x[_0x59c5('0x5d')](sequence[t]),x[_0x59c5('0x5d')](sequence[t-0x1])+m));}}}for(var i=t-0x2;i>=0x0;i--)x[_0x59c5('0xa7')](sequence[i],Math[_0x59c5('0xc5')](x[_0x59c5('0x5d')](sequence[i]),x[_0x59c5('0x5d')](sequence[t-0x1])-this[_0x59c5('0x275')](sequence[i],sequence[t-0x1])));for(var i=t+0x1;i<r;i++)x['set'](sequence[i],Math['max'](x[_0x59c5('0x5d')](sequence[i]),x[_0x59c5('0x5d')](sequence[t])+this[_0x59c5('0x275')](sequence[i],sequence[t])));}[_0x59c5('0x27b')](node,leftPos,leftClass){var pos=Number[_0x59c5('0x285')];this['L'](node)[_0x59c5('0x15')](function(v){var leftSibling=this[_0x59c5('0x286')](v);if(leftSibling!=null&&this[_0x59c5('0x278')][_0x59c5('0x5d')](leftSibling)==this[_0x59c5('0x278')]['get'](v)){if(!leftPos[_0x59c5('0xac')](leftSibling))this['placeLeft'](leftSibling,leftPos,leftClass);pos=Math['max'](pos,leftPos['get'](leftSibling)+this[_0x59c5('0x275')](leftSibling,v));}},this);if(pos==Number[_0x59c5('0x285')])pos=0x0;this['L'](node)['forEach'](function(v){leftPos[_0x59c5('0xa7')](v,pos);});}[_0x59c5('0x284')](node,rightPos,rightClass){var pos=Number['POSITIVE_INFINITY'];this['L'](node)['forEach'](function(v){var rightSibling=this[_0x59c5('0x27d')](v);if(rightSibling!=null&&this[_0x59c5('0x287')][_0x59c5('0x5d')](rightSibling)==this['nodeRightClass']['get'](v)){if(!rightPos[_0x59c5('0xac')](rightSibling))this['placeRight'](rightSibling,rightPos,rightClass);pos=Math[_0x59c5('0xc5')](pos,rightPos['get'](rightSibling)-this[_0x59c5('0x275')](v,rightSibling));}},this);if(pos==Number['POSITIVE_INFINITY'])pos=0x0;this['L'](node)[_0x59c5('0x15')](function(v){rightPos[_0x59c5('0xa7')](v,pos);});}[_0x59c5('0x286')](node){var layer=this['layers'][node[_0x59c5('0x4')]];var i=node['indexInLayer'];if(i==0x0)return null;return layer[i-0x1];}['rightSibling'](node){var layer=this[_0x59c5('0x26d')][node['layer']];var i=node['indexInLayer'];if(i==layer[_0x59c5('0x19')]-0x1)return null;return layer[i+0x1];}['L'](node){if(node[_0x59c5('0x26c')])return this[_0x59c5('0x279')](node);var list=[];list['push'](node);return list;}[_0x59c5('0x270')](){for(var l=0x0;l<this[_0x59c5('0x26d')][_0x59c5('0x19')];l++){var layer=this[_0x59c5('0x26d')][l];for(var ni=0x0;ni<layer['length'];ni++){var node=layer[ni];node[_0x59c5('0x269')]=node['uLinkCount'];node[_0x59c5('0x26a')]=node[_0x59c5('0x28f')];}}var maxLayoutIterations=0x2;for(var it=0x0;it<maxLayoutIterations;it++){for(var i=this[_0x59c5('0x26d')]['length']-0x1;i>=0x1;i--)this[_0x59c5('0x290')](![],i);for(var i=0x0;i<this['layers'][_0x59c5('0x19')]-0x1;i++)this['layoutLayer'](!![],i);}var gridPos=Number[_0x59c5('0xfb')];for(var l=0x0;l<this[_0x59c5('0x26d')][_0x59c5('0x19')];l++){var layer=this[_0x59c5('0x26d')][l];for(var ni=0x0;ni<layer[_0x59c5('0x19')];ni++){var node=layer[ni];gridPos=Math['min'](gridPos,node[_0x59c5('0x26b')]);}}if(gridPos<0x0){for(var l=0x0;l<this[_0x59c5('0x26d')][_0x59c5('0x19')];l++){var layer=this['layers'][l];for(var ni=0x0;ni<layer[_0x59c5('0x19')];ni++){var node=layer[ni];node['gridPosition']=node[_0x59c5('0x26b')]-gridPos;}}}}[_0x59c5('0x290')](down,layer){var iconsidered;var considered;if(down)considered=this[_0x59c5('0x26d')][iconsidered=layer+0x1];else considered=this[_0x59c5('0x26d')][iconsidered=layer-0x1];var sorted=[];for(var n=0x0;n<considered['length'];n++)sorted['push'](considered[n]);sorted[_0x59c5('0xed')](function(n1,n2){var n1Priority=(n1[_0x59c5('0x269')]+n1[_0x59c5('0x26a')])/0x2;var n2Priority=(n2['uPriority']+n2['dPriority'])/0x2;if(Math[_0x59c5('0x219')](n1Priority-n2Priority)<0.0001)return compareByIndex(n1,n2);if(n1Priority<n2Priority)return 0x1;return-0x1;});sorted['forEach'](function(node){var nodeGridPos=node[_0x59c5('0x26b')];var nodeBaryCenter=calcBaryCenter(node);var nodePriority=(node[_0x59c5('0x269')]+node[_0x59c5('0x26a')])/0x2;if(Math[_0x59c5('0x219')](nodeGridPos-nodeBaryCenter)<0.0001){return;}if(Math[_0x59c5('0x219')](nodeGridPos-nodeBaryCenter)<0.25+0.0001){return;}if(nodeGridPos<nodeBaryCenter){while(nodeGridPos<nodeBaryCenter){if(!this['moveRight'](node,considered,nodePriority))break;nodeGridPos=node[_0x59c5('0x26b')];}}else{while(nodeGridPos>nodeBaryCenter){if(!this[_0x59c5('0x291')](node,considered,nodePriority))break;nodeGridPos=node['gridPosition'];}}},this);if(iconsidered>0x0)this[_0x59c5('0x292')](iconsidered-0x1);if(iconsidered<this[_0x59c5('0x26d')][_0x59c5('0x19')]-0x1)this['calcUpData'](iconsidered+0x1);}[_0x59c5('0x293')](node,layer,priority){var index=layer[_0x59c5('0x9b')](node);if(index==layer[_0x59c5('0x19')]-0x1){node[_0x59c5('0x26b')]=node[_0x59c5('0x26b')]+0.5;return!![];}var rightNode=layer[index+0x1];var rightNodePriority=(rightNode['uPriority']+rightNode[_0x59c5('0x26a')])/0x2;if(rightNode['gridPosition']>node['gridPosition']+0x1){node[_0x59c5('0x26b')]=node['gridPosition']+0.5;return!![];}if(rightNodePriority>priority||Math[_0x59c5('0x219')](rightNodePriority-priority)<0.0001)return![];if(this['moveRight'](rightNode,layer,priority)){node[_0x59c5('0x26b')]=node[_0x59c5('0x26b')]+0.5;return!![];}return![];}[_0x59c5('0x291')](node,layer,priority){var index=layer['indexOf'](node);if(index==0x0){node[_0x59c5('0x26b')]=node[_0x59c5('0x26b')]-0.5;return!![];}var leftNode=layer[index-0x1];var leftNodePriority=(leftNode[_0x59c5('0x269')]+leftNode[_0x59c5('0x26a')])/0x2;if(leftNode[_0x59c5('0x26b')]<node[_0x59c5('0x26b')]-0x1){node[_0x59c5('0x26b')]=node[_0x59c5('0x26b')]-0.5;return!![];}if(leftNodePriority>priority||Math['abs'](leftNodePriority-priority)<0.0001)return![];if(this['moveLeft'](leftNode,layer,priority)){node[_0x59c5('0x26b')]=node[_0x59c5('0x26b')]-0.5;return!![];}return![];}[_0x59c5('0x294')](node,link){this[_0x59c5('0x295')][_0x59c5('0xa7')](node,link);if(!this[_0x59c5('0x296')]['has'](link))this[_0x59c5('0x296')][_0x59c5('0xa7')](link,[]);this[_0x59c5('0x296')]['get'](link)[_0x59c5('0x16')](node);}[_0x59c5('0x279')](node){return this[_0x59c5('0x296')][_0x59c5('0x5d')](this[_0x59c5('0x295')][_0x59c5('0x5d')](node));}['dummify'](){this[_0x59c5('0x296')]=new Map();this[_0x59c5('0x295')]=new Map();var links=this[_0x59c5('0xa5')][_0x59c5('0x0')]['slice'](0x0);for(var l=0x0;l<links[_0x59c5('0x19')];l++){var link=links[l];var o=link[_0x59c5('0x8')];var d=link[_0x59c5('0xb')];var oLayer=o[_0x59c5('0x4')];var dLayer=d[_0x59c5('0x4')];var oPos=o['gridPosition'];var dPos=d[_0x59c5('0x26b')];var step=(dPos-oPos)/Math['abs'](dLayer-oLayer);var p=o;if(oLayer-dLayer>0x1){for(var i=oLayer-0x1;i>dLayer;i--){var newNode=new Vertex();newNode['x']=o['x'];newNode['y']=o['y'];newNode[_0x59c5('0xf1')]=o[_0x59c5('0xf1')]/0x64;newNode[_0x59c5('0xf2')]=o[_0x59c5('0xf2')]/0x64;var layer=this['layers'][i];var pos=(i-dLayer)*step+oPos;if(pos>layer[_0x59c5('0x19')])pos=layer[_0x59c5('0x19')];if(oPos>=this[_0x59c5('0x26d')][oLayer]['length']-0x1&&dPos>=this[_0x59c5('0x26d')][dLayer]['length']-0x1)pos=layer['length'];else if(oPos==0x0&&dPos==0x0)pos=0x0;newNode[_0x59c5('0x4')]=i;newNode[_0x59c5('0x267')]=0x0;newNode[_0x59c5('0x268')]=0x0;newNode[_0x59c5('0x297')]=0x0;newNode['dLinkCount']=0x0;newNode[_0x59c5('0x26b')]=pos;newNode['dummy']=!![];layer[_0x59c5('0x9c')](pos,0x0,newNode);for(var r=pos+0x1;r<layer[_0x59c5('0x19')];r++){var node=layer[r];node[_0x59c5('0x26b')]=node[_0x59c5('0x26b')]+0x1;}var newLink=new Edge(p,newNode);newLink['dummificationLevel']=0x0;p=newNode;this[_0x59c5('0xa5')]['vertices'][_0x59c5('0x16')](newNode);this[_0x59c5('0xa5')][_0x59c5('0xb2')](newLink);newNode[_0x59c5('0x22')]=this[_0x59c5('0xa5')][_0x59c5('0xe3')][_0x59c5('0x19')]-0x1;this[_0x59c5('0x294')](newNode,link);}link[_0x59c5('0x1f')](p);link[_0x59c5('0x298')]=oLayer-dLayer-0x1;}if(oLayer-dLayer<-0x1){for(var i=oLayer+0x1;i<dLayer;i++){var newNode=new Vertex();newNode['x']=o['x'];newNode['y']=o['y'];newNode[_0x59c5('0xf1')]=o[_0x59c5('0xf1')]/0x64;newNode[_0x59c5('0xf2')]=o[_0x59c5('0xf2')]/0x64;var layer=this[_0x59c5('0x26d')][i];var pos=(i-oLayer)*step+oPos;if(pos>layer[_0x59c5('0x19')])pos=layer[_0x59c5('0x19')];if(oPos>=this[_0x59c5('0x26d')][oLayer][_0x59c5('0x19')]-0x1&&dPos>=this[_0x59c5('0x26d')][dLayer][_0x59c5('0x19')]-0x1)pos=layer[_0x59c5('0x19')];else if(oPos==0x0&&dPos==0x0)pos=0x0;newNode['layer']=i;newNode[_0x59c5('0x267')]=0x0;newNode[_0x59c5('0x268')]=0x0;newNode[_0x59c5('0x297')]=0x0;newNode['dLinkCount']=0x0;newNode[_0x59c5('0x26b')]=pos;newNode[_0x59c5('0x26c')]=!![];pos=pos&pos;layer[_0x59c5('0x9c')](pos,0x0,newNode);for(var r=pos+0x1;r<layer[_0x59c5('0x19')];r++){var node=layer[r];node['gridPosition']=node[_0x59c5('0x26b')]+0x1;}var newLink=new Edge(p,newNode);newLink[_0x59c5('0x298')]=0x0;p=newNode;this[_0x59c5('0xa5')]['vertices'][_0x59c5('0x16')](newNode);this['graph'][_0x59c5('0xb2')](newLink);newNode[_0x59c5('0x22')]=this['graph'][_0x59c5('0xe3')][_0x59c5('0x19')]-0x1;this[_0x59c5('0x294')](newNode,link);}link[_0x59c5('0x1f')](p);link[_0x59c5('0x298')]=dLayer-oLayer-0x1;}}}[_0x59c5('0x271')](){var dedum=!![];while(dedum){dedum=![];for(var l=0x0;l<this[_0x59c5('0xa5')][_0x59c5('0x0')][_0x59c5('0x19')];l++){var link=this[_0x59c5('0xa5')][_0x59c5('0x0')][l];if(link['dummificationLevel']==0x0)continue;var points=[];points[_0x59c5('0x9c')](0x0,0x0,{'x':link[_0x59c5('0xb')]['x'],'y':link[_0x59c5('0xb')]['y']});points['splice'](0x0,0x0,{'x':link['origin']['x'],'y':link[_0x59c5('0x8')]['y']});var temp=link;var dummificationLevel=link[_0x59c5('0x298')];for(var d=0x0;d<dummificationLevel;d++){var node=temp[_0x59c5('0x8')];var prevLink=node[_0x59c5('0x1')][0x0];points[_0x59c5('0x9c')](0x0,0x0,{'x':prevLink['origin']['x'],'y':prevLink['origin']['y']});temp=prevLink;}link[_0x59c5('0x1f')](temp[_0x59c5('0x8')]);link['dummificationLevel']=0x0;link[_0x59c5('0x1d0')]=points;dedum=!![];break;}}}['minimizeCrossings'](){var moves=-0x1;var maxIterations=0x3;var iter=0x0;while(moves!=0x0){if(iter++>maxIterations)break;moves=0x0;var down=this[_0x59c5('0x266')];for(var i=this[_0x59c5('0x26d')]['length']-0x1;i>=0x1;i--)moves+=this[_0x59c5('0x299')](down,i);for(var i=0x0;i<this[_0x59c5('0x26d')][_0x59c5('0x19')]-0x1;i++)moves+=this[_0x59c5('0x299')](!down,i);}}[_0x59c5('0x29a')](layer){if(layer==0x0)return;var considered=this[_0x59c5('0x26d')][layer];var upLayer=new Set();var temp=this['layers'][layer-0x1];for(var i=0x0;i<temp[_0x59c5('0x19')];i++)upLayer[_0x59c5('0x60')](temp[i]);for(var i=0x0;i<considered['length'];i++){var node=considered[i];var sum=0x0;var total=0x0;for(var l=0x0;l<node[_0x59c5('0x1')][_0x59c5('0x19')];l++){var link=node['inEdges'][l];if(upLayer[_0x59c5('0xac')](link[_0x59c5('0x8')])){total++;sum+=link[_0x59c5('0x8')][_0x59c5('0x26b')];}}for(var l=0x0;l<node[_0x59c5('0xa')][_0x59c5('0x19')];l++){var link=node[_0x59c5('0xa')][l];if(upLayer[_0x59c5('0xac')](link[_0x59c5('0xb')])){total++;sum+=link[_0x59c5('0xb')][_0x59c5('0x26b')];}}if(total>0x0){node['uBaryCenter']=sum/total;node['uLinkCount']=total;}else{node['uBaryCenter']=i;node['uLinkCount']=0x0;}}}[_0x59c5('0x292')](layer){if(layer==this['layers'][_0x59c5('0x19')]-0x1)return;var considered=this[_0x59c5('0x26d')][layer];var downLayer=new Set();var temp=this[_0x59c5('0x26d')][layer+0x1];for(var i=0x0;i<temp[_0x59c5('0x19')];i++)downLayer[_0x59c5('0x60')](temp[i]);for(var i=0x0;i<considered['length'];i++){var node=considered[i];var sum=0x0;var total=0x0;for(var l=0x0;l<node['inEdges'][_0x59c5('0x19')];l++){var link=node[_0x59c5('0x1')][l];if(downLayer[_0x59c5('0xac')](link[_0x59c5('0x8')])){total++;sum+=link[_0x59c5('0x8')][_0x59c5('0x26b')];}}for(var l=0x0;l<node['outEdges'][_0x59c5('0x19')];l++){var link=node['outEdges'][l];if(downLayer[_0x59c5('0xac')](link[_0x59c5('0xb')])){total++;sum+=link[_0x59c5('0xb')][_0x59c5('0x26b')];}}if(total>0x0){node[_0x59c5('0x268')]=sum/total;node[_0x59c5('0x28f')]=total;}else{node[_0x59c5('0x268')]=i;node['dLinkCount']=0x0;}}}[_0x59c5('0x299')](down,layer){var iconsidered;var considered;if(down)considered=this['layers'][iconsidered=layer+0x1];else considered=this[_0x59c5('0x26d')][iconsidered=layer-0x1];var presorted=considered[_0x59c5('0x9d')](0x0);if(down)this['calcUpData'](iconsidered);else this[_0x59c5('0x292')](iconsidered);considered[_0x59c5('0xed')](function(n1,n2){var n1BaryCenter=calcBaryCenter(n1);var n2BaryCenter=calcBaryCenter(n2);if(Math[_0x59c5('0x219')](n1BaryCenter-n2BaryCenter)<0.0001){if(n1[_0x59c5('0x17')]()==n2['degree']())return compareByIndex(n1,n2);else if(n1['degree']()<n2[_0x59c5('0x17')]())return 0x1;return-0x1;}var compareValue=(n2BaryCenter-n1BaryCenter)*0x3e8;if(compareValue>0x0)return-0x1;else if(compareValue<0x0)return 0x1;return compareByIndex(n1,n2);});var moves=0x0;for(var i=0x0;i<considered[_0x59c5('0x19')];i++)if(considered[i]!=presorted[i])moves++;if(moves>0x0){var inode=0x0;for(var i=0x0;i<considered['length'];i++){var node=considered[i];node[_0x59c5('0x26b')]=inode++;}}return moves;}[_0x59c5('0x26f')](){var maxIterations=this[_0x59c5('0x265')];var iter=0x0;while(!![]){if(iter++>maxIterations)break;var downwards=iter%0x4<=0x1;var secondPass=iter%0x4==0x1;for(var l=downwards?0x0:this['layers'][_0x59c5('0x19')]-0x1;downwards?l<=this[_0x59c5('0x26d')][_0x59c5('0x19')]-0x1:l>=0x0;l+=downwards?0x1:-0x1){var layer=this[_0x59c5('0x26d')][l];var hasSwapped=![];var calcCrossings=!![];var memCrossings=0x0;for(var n=0x0;n<layer[_0x59c5('0x19')]-0x1;n++){var up=0x0;var down=0x0;var crossBefore=0x0;if(calcCrossings){if(l!=0x0)up=this[_0x59c5('0x29b')](l-0x1,l);if(l!=this[_0x59c5('0x26d')][_0x59c5('0x19')]-0x1)down=this['countCrossings'](l,l+0x1);if(downwards)up*=0x2;else down*=0x2;crossBefore=up+down;}else{crossBefore=memCrossings;}if(crossBefore==0x0)continue;var node1=layer[n];var node2=layer[n+0x1];var node1GridPos=node1[_0x59c5('0x26b')];var node2GridPos=node2['gridPosition'];layer[n]=node2;layer[n+0x1]=node1;node1[_0x59c5('0x26b')]=node2GridPos;node2[_0x59c5('0x26b')]=node1GridPos;up=0x0;if(l!=0x0)up=this[_0x59c5('0x29b')](l-0x1,l);down=0x0;if(l!=this[_0x59c5('0x26d')][_0x59c5('0x19')]-0x1)down=this['countCrossings'](l,l+0x1);if(downwards)up*=0x2;else down*=0x2;var crossAfter=up+down;var revert=![];if(secondPass)revert=crossAfter>=crossBefore;else revert=crossAfter>crossBefore;if(revert){node1=layer[n];node2=layer[n+0x1];node1GridPos=node1['gridPosition'];node2GridPos=node2[_0x59c5('0x26b')];layer[n]=node2;layer[n+0x1]=node1;node1[_0x59c5('0x26b')]=node2GridPos;node2[_0x59c5('0x26b')]=node1GridPos;memCrossings=crossBefore;calcCrossings=![];}else{hasSwapped=!![];calcCrossings=!![];}}if(hasSwapped){if(l!=this[_0x59c5('0x26d')]['length']-0x1)this[_0x59c5('0x29a')](l+0x1);if(l!=0x0)this[_0x59c5('0x292')](l-0x1);}}}}[_0x59c5('0x29b')](ulayer,dlayer){var crossings=0x0;var uLayer=new Set();var temp1=this['layers'][ulayer];for(var i=0x0;i<temp1[_0x59c5('0x19')];i++)uLayer[_0x59c5('0x60')](temp1[i]);var dLayer=new Set();var temp2=this[_0x59c5('0x26d')][dlayer];for(var i=0x0;i<temp2[_0x59c5('0x19')];i++)dLayer[_0x59c5('0x60')](temp2[i]);var dlinks=new Set();var links=[];var temp=[];uLayer[_0x59c5('0x15')](function(node){temp[_0x59c5('0x16')](...node[_0x59c5('0x1')]);temp['push'](...node['outEdges']);});for(var ti=0x0;ti<temp[_0x59c5('0x19')];ti++){var link=temp[ti];if(uLayer[_0x59c5('0xac')](link[_0x59c5('0x8')])&&dLayer[_0x59c5('0xac')](link[_0x59c5('0xb')])){dlinks[_0x59c5('0x60')](link);links[_0x59c5('0x16')](link);}else if(dLayer[_0x59c5('0xac')](link[_0x59c5('0x8')])&&uLayer[_0x59c5('0xac')](link[_0x59c5('0xb')])){links['push'](link);}}for(var l1=0x0;l1<links[_0x59c5('0x19')];l1++){var link1=links[l1];for(var l2=0x0;l2<links[_0x59c5('0x19')];l2++){if(l1==l2)continue;var link2=links[l2];var n11,n12;var n21,n22;if(dlinks[_0x59c5('0xac')](link1)){n11=link1['origin'];n12=link1['destination'];}else{n11=link1[_0x59c5('0xb')];n12=link1[_0x59c5('0x8')];}if(dlinks[_0x59c5('0xac')](link2)){n21=link2['origin'];n22=link2[_0x59c5('0xb')];}else{n21=link2[_0x59c5('0xb')];n22=link2[_0x59c5('0x8')];}var n11gp=n11[_0x59c5('0x26b')];var n12gp=n12[_0x59c5('0x26b')];var n21gp=n21[_0x59c5('0x26b')];var n22gp=n22[_0x59c5('0x26b')];if((n11gp-n21gp)*(n12gp-n22gp)<0x0)crossings++;}}return crossings/0x2;}[_0x59c5('0x1c3')](){return this['constructor'][_0x59c5('0x1c5')];}get['nodeDistance'](){return this[_0x59c5('0x1c7')];}set['nodeDistance'](value){this[_0x59c5('0x1c7')]=value;}get[_0x59c5('0x264')](){return this[_0x59c5('0x29c')];}set[_0x59c5('0x264')](value){this['_layerDistance']=value;}get[_0x59c5('0x94')](){return this[_0x59c5('0x1c9')];}set['direction'](value){this[_0x59c5('0x1c9')]=value;}get[_0x59c5('0x265')](){return this[_0x59c5('0x29d')];}set[_0x59c5('0x265')](value){this[_0x59c5('0x29d')]=value;}get[_0x59c5('0x19e')](){return this[_0x59c5('0x1cb')];}set[_0x59c5('0x19e')](value){this['_anchoring']=value;}get[_0x59c5('0x1cc')](){return this[_0x59c5('0x1a3')];}set[_0x59c5('0x1cc')](value){this[_0x59c5('0x1a3')]=value;}get['multipleGraphsPlacement'](){return this[_0x59c5('0x1a4')];}set[_0x59c5('0x1a0')](value){this[_0x59c5('0x1a4')]=value;}}function nextVirtualNode(layer,node){var nodeIndex=node[_0x59c5('0x273')];for(var i=nodeIndex+0x1;i<layer[_0x59c5('0x19')];++i)if(layer[i]['dummy'])return layer[i];return null;}function calcBaryCenter(node){var uLinkCount=node['uLinkCount'];var dLinkCount=node[_0x59c5('0x28f')];var uBaryCenter=node['uBaryCenter'];var dBaryCenter=node['dBaryCenter'];if(uLinkCount>0x0&&dLinkCount>0x0)return(uBaryCenter+dBaryCenter)/0x2;if(uLinkCount>0x0)return uBaryCenter;if(dLinkCount>0x0)return dBaryCenter;return 0x0;}function compareByGridPos(x,y){if(x[_0x59c5('0x26b')]<y['gridPosition'])return-0x1;if(x['gridPosition']>y[_0x59c5('0x26b')])return 0x1;return compareByIndex(x,y);}function compareByPosIncreasing(x,y){if(x['k']<y['k'])return-0x1;if(x['k']>y['k'])return 0x1;return 0x0;}function compareByPosDecreasing(x,y){if(x['k']<y['k'])return 0x1;if(x['k']>y['k'])return-0x1;return 0x0;}function leftMostVirtualNode(layer){for(var c=0x0;c<layer[_0x59c5('0x19')];c++){if(layer[c][_0x59c5('0x26c')])return c;}return-0x1;}function compareByIndex(o1,o2){var i1=o1[_0x59c5('0x22')];var i2=o2['index'];if(i1<i2)return-0x1;if(i1>i2)return 0x1;return 0x0;}function intDiv(numerator,denominator){return(numerator-numerator%denominator)/denominator;}class SpringLayout extends Layout{constructor(){super();this[_0x59c5('0x1ae')]=0x1e;this[_0x59c5('0x29e')]=0x12c;this[_0x59c5('0x29f')]=![];this[_0x59c5('0x2a0')]=0x0;this['temperature']=0x0;this['multipleGraphsPlacement']=MultipleGraphsPlacement[_0x59c5('0x1b2')];}get[_0x59c5('0x1a6')](){return![];}get[_0x59c5('0x1a7')](){return![];}[_0x59c5('0x1b5')](graph){this[_0x59c5('0x2a0')]=this[_0x59c5('0x1ae')]*0x9;this['temperature']=this[_0x59c5('0x2a0')];this[_0x59c5('0xa5')]=graph;var autoSize=calcAutoFrame(graph,averageNodeSize(graph),0x1,0x4);this[_0x59c5('0xf1')]=autoSize['width'];this['height']=autoSize['height'];for(var step=0x0;step<this['iterations'];step++){this[_0x59c5('0x29f')]=step>=this[_0x59c5('0x29e')]*0x3/0x4;graph['vertices']['forEach'](function(v){this[_0x59c5('0x2a1')](v);},this);graph['edges'][_0x59c5('0x15')](function(e){this[_0x59c5('0x2a2')](e);},this);graph['vertices'][_0x59c5('0x15')](function(v){this['applyForce'](v);},this);this[_0x59c5('0x2a3')]=this['refineStage']?this['initialTemperature']/0x1e:this[_0x59c5('0x2a0')]*(0x1-step/this[_0x59c5('0x29e')]/0x2);}}[_0x59c5('0x2a4')](v,radius){var a=Math[_0x59c5('0x2a5')]()*0x2*Math['PI'];var l=radius*Math[_0x59c5('0x2a5')]();if(l==0x0)l=radius/0x2;v['x']+=l*Math[_0x59c5('0x25d')](a);v['y']-=l*Math[_0x59c5('0x25c')](a);}[_0x59c5('0x2a6')](distance,desiredDistance,v1,v2){var a=0x0;if(this[_0x59c5('0x29f')]){var vx=v1['x']-v2['x'];var vy=v1['y']-v2['y'];var r1x=v1[_0x59c5('0xf1')]/0x2;var r1y=v1[_0x59c5('0xf2')]/0x2;var r2x=v2[_0x59c5('0xf1')]/0x2;var r2y=v2[_0x59c5('0xf2')]/0x2;a=vx*vx/Math[_0x59c5('0x2a7')](r1x+r2x+desiredDistance,0x2)+vy*vy/Math[_0x59c5('0x2a7')](r1y+r2y+desiredDistance,0x2);}else{a=distance*distance/desiredDistance/desiredDistance;}return a*0x4/0x3;}[_0x59c5('0x2a8')](distance,desiredDistance,v1,v2){return 0x1/this[_0x59c5('0x2a6')](distance,desiredDistance,v1,v2);}[_0x59c5('0x2a1')](v){v['dx']=0x0;v['dy']=0x0;var desiredDist=this['nodeDistance'];this[_0x59c5('0xa5')][_0x59c5('0xe3')][_0x59c5('0x15')](function(v2){if(v2==v)return;while(v['x']==v2['x']&&v['y']==v2['y'])this[_0x59c5('0x2a4')](v2,desiredDist/0x4);var vx=v['x']-v2['x'];var vy=v['y']-v2['y'];var distance=Math['sqrt'](vx*vx+vy*vy);var r=this[_0x59c5('0x2a8')](distance,desiredDist,v,v2);v['dx']+=vx/distance*r;v['dy']+=vy/distance*r;},this);}[_0x59c5('0x2a2')](e){var v1=e[_0x59c5('0x8')];var v2=e['destination'];var desiredDist=this[_0x59c5('0x1ae')];while(v1['x']==v2['x']&&v1['y']==v2['y'])this[_0x59c5('0x2a4')](v2,desiredDist/0x4);var vx=v1['x']-v2['x'];var vy=v1['y']-v2['y'];var distance=Math[_0x59c5('0x258')](vx*vx+vy*vy);var a=this[_0x59c5('0x2a6')](distance,desiredDist,v1,v2);var dx=vx/distance*a;var dy=vy/distance*a;v1['dx']-=dx;v1['dy']-=dy;v2['dx']+=dx;v2['dy']+=dy;}['applyForce'](v){var offset=Math[_0x59c5('0x258')](v['dx']*v['dx']+v['dy']*v['dy']);if(offset==0x0)return;v['x']+=Math['min'](offset,this[_0x59c5('0x2a3')])*v['dx']/offset;v['y']+=Math['min'](offset,this[_0x59c5('0x2a3')])*v['dy']/offset;v['x']=Math[_0x59c5('0xc5')](this[_0x59c5('0xf1')],Math[_0x59c5('0xc6')](v[_0x59c5('0xf1')]/0x2,v['x']));v['y']=Math['min'](this['height'],Math[_0x59c5('0xc6')](v[_0x59c5('0xf2')]/0x2,v['y']));}[_0x59c5('0x1c3')](){return this[_0x59c5('0x1c4')][_0x59c5('0x1c5')];}get[_0x59c5('0x1ae')](){return this[_0x59c5('0x1c7')];}set['nodeDistance'](value){this[_0x59c5('0x1c7')]=value;}get[_0x59c5('0x29e')](){return this[_0x59c5('0x2a9')];}set[_0x59c5('0x29e')](value){this[_0x59c5('0x2a9')]=value;}get['anchoring'](){return this[_0x59c5('0x1cb')];}set[_0x59c5('0x19e')](value){this['_anchoring']=value;}get['keepGroupLayout'](){return this[_0x59c5('0x1a3')];}set[_0x59c5('0x1cc')](value){this[_0x59c5('0x1a3')]=value;}get['multipleGraphsPlacement'](){return this[_0x59c5('0x1a4')];}set['multipleGraphsPlacement'](value){this[_0x59c5('0x1a4')]=value;}}function averageNodeSize(graph){var size=0x0;if(graph['vertices']['length']==0x0)return size;graph[_0x59c5('0xe3')][_0x59c5('0x15')](function(v){var area=v['width']*v[_0x59c5('0xf2')];if(area>0x0)size+=Math[_0x59c5('0x258')](area);});return size/graph[_0x59c5('0xe3')][_0x59c5('0x19')];}function calcAutoFrame(graph,averageNodeSize,widthHeightRatio,multiplier){var squareSize=averageNodeSize*Math['ceil'](Math['sqrt'](graph[_0x59c5('0xe3')][_0x59c5('0x19')]));var width=squareSize*Math[_0x59c5('0x258')](widthHeightRatio);var height=squareSize/Math[_0x59c5('0x258')](widthHeightRatio);return{'width':width*multiplier,'height':height*multiplier};}class TopologicalLayout extends Layout{constructor(){super();this[_0x59c5('0x1ae')]=0x14;this['direction']=LayoutDirection[_0x59c5('0x1bd')];this[_0x59c5('0x2aa')]=![];this['mm']=0x1;}get['requiresBezierLinks'](){return!![];}[_0x59c5('0x1b5')](graph){if(graph['vertices'][_0x59c5('0x19')]==0x0)return![];graph[_0x59c5('0xf5')]();this['graph']=graph;var orientation=Orientation[_0x59c5('0x1b2')];if(this['direction']==LayoutDirection['TopToBottom']||this['direction']==LayoutDirection[_0x59c5('0x1c1')]){orientation=Orientation[_0x59c5('0x1a1')];}var reverseDirection=![];if(this['direction']==LayoutDirection[_0x59c5('0x1be')]||this['direction']==LayoutDirection[_0x59c5('0x1c1')]){reverseDirection=!![];}var sort=graph[_0x59c5('0x161')]();if(!sort){var reversed=graph[_0x59c5('0x15c')]();sort=graph[_0x59c5('0x161')]();}var reversedMap=new Map();if(reversed){for(let edge of reversed){reversedMap[_0x59c5('0xa7')](edge,!![]);edge[_0x59c5('0xa2')]();}}var indexMap=new Map();var position=0x0;sort[_0x59c5('0x15')](function(index){indexMap[_0x59c5('0xa7')](graph[_0x59c5('0xe3')][index],position++);});var maxSize=0x0;graph[_0x59c5('0xe3')][_0x59c5('0x15')](function(vertex){if(orientation==Orientation['Horizontal'])maxSize=Math[_0x59c5('0xc6')](maxSize,vertex['height']);else maxSize=Math[_0x59c5('0xc6')](maxSize,vertex[_0x59c5('0xf1')]);});if(reverseDirection)sort[_0x59c5('0xa2')]();var thisObj=this;var offset=this['margins'];sort[_0x59c5('0x15')](function(index){var vertex=graph['vertices'][index];if(orientation==Orientation[_0x59c5('0x1b2')]){vertex['x']=offset+vertex['width']/0x2;vertex['y']=thisObj[_0x59c5('0x1a2')]+maxSize/0x2;offset+=vertex[_0x59c5('0xf1')]+thisObj[_0x59c5('0x1ae')];}else{vertex['x']=thisObj[_0x59c5('0x1a2')]+maxSize/0x2;vertex['y']=offset+vertex[_0x59c5('0xf2')]/0x2;offset+=vertex[_0x59c5('0xf2')]+thisObj[_0x59c5('0x1ae')];}});var sign=0x1;if(reverseDirection)sign=-0x1;var or=orientation;var straight=!reverseDirection;graph[_0x59c5('0x0')][_0x59c5('0x15')](function(edge){var p=[];var o=edge[_0x59c5('0x8')];var d=edge['destination'];if(!reversedMap[_0x59c5('0xac')](edge)){var originIndex=indexMap[_0x59c5('0x5d')](o);var destIndex=indexMap['get'](d);if(!thisObj[_0x59c5('0x2aa')]&&Math[_0x59c5('0x219')](originIndex-destIndex)==0x1){p[0x0]=PointFromBL(straight?Tools[_0x59c5('0x1e2')](o,or):Tools[_0x59c5('0x249')](o,or),Tools[_0x59c5('0x1dc')](o,or),or);p[0x3]=PointFromBL(straight?Tools[_0x59c5('0x249')](d,or):Tools[_0x59c5('0x1e2')](d,or),Tools[_0x59c5('0x1dc')](d,or),or);var h=Math[_0x59c5('0x219')](Tools[_0x59c5('0x1e7')](p[0x3],or)-Tools['GetL'](p[0x0],or));p[0x1]=PointFromBL(Tools['GetL'](p[0x0],or)+sign*h/0x4,Tools['GetB'](p[0x0],or),or);p[0x2]=PointFromBL(Tools[_0x59c5('0x1e7')](p[0x3],or)-sign*h/0x4,Tools[_0x59c5('0x1e6')](p[0x3],or),or);}else{p[0x0]=PointFromBL(Tools[_0x59c5('0x1de')](o,or),Tools[_0x59c5('0x1df')](o,or),or);p[0x3]=PointFromBL(Tools[_0x59c5('0x1de')](d,or),Tools[_0x59c5('0x1df')](d,or),or);var h=Math['abs'](Tools[_0x59c5('0x1e7')](p[0x3],or)-Tools[_0x59c5('0x1e7')](p[0x0],or));p[0x1]=PointFromBL(Tools['GetL'](p[0x0],or)+sign*h/0x4,Tools['GetB'](p[0x0],or)-h/0x3,or);p[0x2]=PointFromBL(Tools[_0x59c5('0x1e7')](p[0x3],or)-sign*h/0x4,Tools[_0x59c5('0x1e6')](p[0x3],or)-h/0x3,or);}}else{p[0x0]=PointFromBL(Tools[_0x59c5('0x1de')](o,or),Tools[_0x59c5('0x1e0')](o,or),or);p[0x3]=PointFromBL(Tools['GetLCenter'](d,or),Tools[_0x59c5('0x1e0')](d,or),or);var h=Math[_0x59c5('0x219')](Tools[_0x59c5('0x1e7')](p[0x3],or)-Tools[_0x59c5('0x1e7')](p[0x0],or));p[0x1]=PointFromBL(Tools[_0x59c5('0x1e7')](p[0x0],or)-sign*h/0x4,Tools[_0x59c5('0x1e6')](p[0x0],or)+h/0x3,or);p[0x2]=PointFromBL(Tools[_0x59c5('0x1e7')](p[0x3],or)+sign*h/0x4,Tools['GetB'](p[0x3],or)+h/0x3,or);}edge[_0x59c5('0x1d0')]=p;});}['getType'](){return this['constructor']['__typeName'];}get['nodeDistance'](){return this[_0x59c5('0x1c7')];}set['nodeDistance'](value){this[_0x59c5('0x1c7')]=value;}get[_0x59c5('0x94')](){return this['_direction'];}set[_0x59c5('0x94')](value){this[_0x59c5('0x1c9')]=value;}get[_0x59c5('0x2aa')](){return this[_0x59c5('0x2ab')];}set[_0x59c5('0x2aa')](value){this[_0x59c5('0x2ab')]=value;}}function PointFromBL(l,b,or){if(or==Orientation[_0x59c5('0x1b2')])return new Point(l,b);else return new Point(b,l);}class TreeLayout extends Layout{constructor(){super();this['levelDistance']=0xa;this[_0x59c5('0x1ae')]=0xa;this['keepRootPosition']=![];this[_0x59c5('0x94')]=LayoutDirection[_0x59c5('0x1b0')];this[_0x59c5('0x1b1')]=TreeLayoutLinkType['Default'];this[_0x59c5('0x2ac')]=![];this[_0x59c5('0x2ad')]=![];this[_0x59c5('0x1a0')]=MultipleGraphsPlacement['Horizontal'];this[_0x59c5('0xd5')]=![];}get['requiresSimpleGraph'](){return![];}get[_0x59c5('0x1b3')](){return this[_0x59c5('0x1b1')]==TreeLayoutLinkType['Cascading'];}get[_0x59c5('0x1ac')](){return this[_0x59c5('0x1af')];}['arrange'](graph){var root;var th=new TreeHelper(this['reversedLinks']);this[_0x59c5('0x2ae')]=th;graph['vertices'][_0x59c5('0x15')](function(v){let parentEdges=th[_0x59c5('0x1b6')](v);if(parentEdges[_0x59c5('0x19')]==0x0){root=v;return $break;}});if(!root)return $skipLayout;var tree=graph[_0x59c5('0xdf')](root,this[_0x59c5('0xd5')],this['enableAssistants'],this[_0x59c5('0x2ad')]);if(!tree)return $skipLayout;tree[_0x59c5('0xe3')][_0x59c5('0x15')](function(v){v[_0x59c5('0x2af')]=v[_0x59c5('0x6')][_0x59c5('0xe4')]['treeLayoutAssistant'];});var rootX=root['x']+root[_0x59c5('0xf1')]/0x2;var rootY=root['y']+root['height']/0x2;walk(tree,root,function(node,params){node['x']=node[_0x59c5('0xf1')]/0x2;node['y']=node[_0x59c5('0xf2')]/0x2;},null);var levelSizes=[];for(var i=0x0;i<tree[_0x59c5('0xea')][_0x59c5('0x19')];i++){var treeLevel=tree[_0x59c5('0xea')][i];var sz=0x0;for(var j=0x0;j<treeLevel[_0x59c5('0x19')];j++){if(this[_0x59c5('0x1b8')]())sz=Math[_0x59c5('0xc6')](sz,treeLevel[j][_0x59c5('0xf1')]);else sz=Math[_0x59c5('0xc6')](sz,treeLevel[j]['height']);}levelSizes[_0x59c5('0x16')](sz);}var lastLevel=tree[_0x59c5('0xea')][tree[_0x59c5('0xea')]['length']-0x1];var s=0x0;for(var i=0x0;i<lastLevel[_0x59c5('0x19')];i++){var node=lastLevel[i];if(this[_0x59c5('0x1b8')]()){node['y']=s+node[_0x59c5('0xf2')]/0x2;s+=node[_0x59c5('0xf2')]+this['nodeDistance'];}else{node['x']=s+node[_0x59c5('0xf1')]/0x2;s+=node[_0x59c5('0xf1')]+this[_0x59c5('0x1ae')];}}var previousLefts=new Map();var previousRights=new Map();for(var i=tree[_0x59c5('0xea')][_0x59c5('0x19')]-0x1;i>=0x0;i--){var treeLevel=tree['treeLevels'][i];for(var j=0x0;j<treeLevel[_0x59c5('0x19')];j++){var node=treeLevel[j];var children=tree[_0x59c5('0xec')](node);if(children[_0x59c5('0x19')]>0x0){if(this['hasAssistants'](node,th)&&this[_0x59c5('0x2ac')]){var firstLeftAssistant=undefined;var firstRightAssistant=undefined;children[_0x59c5('0x15')](function(child){if(child[_0x59c5('0xe6')]===AssistantPosition[_0x59c5('0xe5')])firstLeftAssistant=child;else if(child[_0x59c5('0xe6')]===AssistantPosition[_0x59c5('0xe7')])firstRightAssistant=child;});if(firstLeftAssistant&&firstRightAssistant){var leftBounds=this[_0x59c5('0x2b0')](firstLeftAssistant);var rightBounds=this['branchBounds'](firstRightAssistant);if(this[_0x59c5('0x1b8')]())node['y']+=leftBounds['bottom']()+(rightBounds[_0x59c5('0x1c0')]()-leftBounds['bottom']())/0x2-node[_0x59c5('0xf2')]/0x2;else node['x']+=leftBounds[_0x59c5('0x71')]()+(rightBounds[_0x59c5('0x6a')]()-leftBounds[_0x59c5('0x71')]())/0x2-node['width']/0x2;}else{if(firstLeftAssistant){var assistantBounds=this[_0x59c5('0x2b0')](firstLeftAssistant);if(this['isHorizontal']())node['y']=assistantBounds[_0x59c5('0x1c2')]()+this[_0x59c5('0x1ae')]/0x2;else node['x']=assistantBounds[_0x59c5('0x71')]()+this['nodeDistance']/0x2;}else{var assistantBounds=this[_0x59c5('0x2b0')](firstRightAssistant);if(this[_0x59c5('0x1b8')]())node['y']=assistantBounds[_0x59c5('0x1c0')]()-this[_0x59c5('0x1ae')]/0x2;else node['x']=assistantBounds['left']()-this[_0x59c5('0x1ae')]/0x2;}}}else{var rcTotal=Rect[_0x59c5('0x1bf')](children[0x0]);for(var c=0x1;c<children[_0x59c5('0x19')];c++)rcTotal=rcTotal['union'](Rect['fromVertex'](children[c]));if(this[_0x59c5('0x1b8')]())node['y']+=(rcTotal[_0x59c5('0x1c0')]()+rcTotal[_0x59c5('0x1c2')]())/0x2-node[_0x59c5('0xf2')]/0x2;else node['x']+=(rcTotal['left']()+rcTotal[_0x59c5('0x71')]())/0x2-node[_0x59c5('0xf1')]/0x2;}}if(node['assistantType']&&this['enableAssistants']){var subordinates=[];if(node[_0x59c5('0x32')]){var childEdges=th[_0x59c5('0xd7')](node['parent']);for(var c=0x0;c<childEdges[_0x59c5('0x19')];c++){var child=th[_0x59c5('0xe2')](childEdges[c]);if(child[_0x59c5('0x2af')])continue;subordinates['push'](child);}}if(subordinates[_0x59c5('0x19')]>0x0){var rcTotal=Rect['fromVertex'](subordinates[0x0]);for(var c=0x1;c<subordinates[_0x59c5('0x19')];c++)rcTotal=rcTotal[_0x59c5('0x1cf')](Rect['fromVertex'](subordinates[c]));var rc=this[_0x59c5('0x2b0')](node);if(this['isHorizontal']()){var offset=0x0;if(node[_0x59c5('0xe6')]===AssistantPosition[_0x59c5('0xe5')]){offset=rcTotal['y']+rcTotal[_0x59c5('0xf2')]/0x2-rc[_0x59c5('0x1c2')]()-this['nodeDistance']/0x2;}else{offset=rcTotal['y']+rcTotal['height']/0x2-rc[_0x59c5('0x1c0')]()+this[_0x59c5('0x1ae')]/0x2;}this['offsetBranch'](tree,node,0x0,offset);}else{var offset=0x0;if(node[_0x59c5('0xe6')]===AssistantPosition[_0x59c5('0xe5')]){offset=rcTotal['x']+rcTotal[_0x59c5('0xf1')]/0x2-rc[_0x59c5('0x71')]()-this['nodeDistance']/0x2;}else{offset=rcTotal['x']+rcTotal[_0x59c5('0xf1')]/0x2-rc[_0x59c5('0x6a')]()+this['nodeDistance']/0x2;}this[_0x59c5('0x1ba')](tree,node,offset,0x0);}}else{if(node['parent']){var previousLeft=undefined;if(previousLefts[_0x59c5('0xac')](node['parent']))previousLeft=previousLefts['get'](node['parent']);var previousRight=undefined;if(previousRights['has'](node[_0x59c5('0x32')]))previousRight=previousRights[_0x59c5('0x5d')](node[_0x59c5('0x32')]);if(previousLeft||previousRight){var nodeBounds=this[_0x59c5('0x2b0')](node);if(node[_0x59c5('0xe6')]===AssistantPosition[_0x59c5('0xe7')]){if(previousRight){var previousBounds=this[_0x59c5('0x2b0')](previousRight);if(this[_0x59c5('0x1b8')]()){var offset=previousBounds[_0x59c5('0x1c0')]()-nodeBounds['top']();this[_0x59c5('0x1ba')](tree,node,0x0,offset);}else{var offset=previousBounds[_0x59c5('0x6a')]()-nodeBounds[_0x59c5('0x6a')]();this[_0x59c5('0x1ba')](tree,node,offset,0x0);}}else if(previousLeft){var previousBounds=this[_0x59c5('0x2b0')](previousLeft);if(this[_0x59c5('0x1b8')]()){var offset=previousBounds[_0x59c5('0x1c2')]()+this[_0x59c5('0x1ae')]-nodeBounds[_0x59c5('0x1c0')]();this[_0x59c5('0x1ba')](tree,node,0x0,offset);}else{var offset=previousBounds['right']()+this[_0x59c5('0x1ae')]-nodeBounds['left']();this['offsetBranch'](tree,node,offset,0x0);}}}else{if(previousLeft){var previousBounds=this[_0x59c5('0x2b0')](previousLeft);if(this[_0x59c5('0x1b8')]()){var offset=previousBounds['bottom']()-nodeBounds['bottom']();this[_0x59c5('0x1ba')](tree,node,0x0,offset);}else{var offset=previousBounds[_0x59c5('0x71')]()-nodeBounds[_0x59c5('0x71')]();this[_0x59c5('0x1ba')](tree,node,offset,0x0);}}else if(previousRight){var previousBounds=this[_0x59c5('0x2b0')](previousRight);if(this['isHorizontal']()){var offset=previousBounds[_0x59c5('0x1c0')]()-this[_0x59c5('0x1ae')]-nodeBounds[_0x59c5('0x1c2')]();this[_0x59c5('0x1ba')](tree,node,0x0,offset);}else{var offset=previousBounds['left']()-this[_0x59c5('0x1ae')]-nodeBounds[_0x59c5('0x71')]();this[_0x59c5('0x1ba')](tree,node,offset,0x0);}}}}}}}if(node['assistantType']&&this[_0x59c5('0x2ac')]){if(node[_0x59c5('0xe6')]===AssistantPosition[_0x59c5('0xe5')])previousLefts['set'](node[_0x59c5('0x32')],node);else if(node[_0x59c5('0xe6')]===AssistantPosition[_0x59c5('0xe7')])previousRights[_0x59c5('0xa7')](node[_0x59c5('0x32')],node);}}for(var j=0x0;j<treeLevel['length']-0x1;j++){for(var k=j;k>=0x0;k--){if(treeLevel[k]['assistantType']||treeLevel[j+0x1][_0x59c5('0x2af')])continue;var dist=this[_0x59c5('0x2b1')](tree,treeLevel[k],treeLevel[j+0x1]);var checkDistance=k!=j;if(checkDistance?dist<this[_0x59c5('0x1ae')]:!![]){if(this[_0x59c5('0x1b8')]())this['offsetBranch'](tree,treeLevel[j+0x1],0x0,this[_0x59c5('0x1ae')]-dist);else this[_0x59c5('0x1ba')](tree,treeLevel[j+0x1],this[_0x59c5('0x1ae')]-dist,0x0);}}}}var iStart;var iEnd;var iGrow;if(this[_0x59c5('0x1b9')]()){iStart=0x0;iEnd=tree[_0x59c5('0xea')]['length'];iGrow=+0x1;}else{iStart=tree['treeLevels'][_0x59c5('0x19')]-0x1;iEnd=-0x1;iGrow=-0x1;}var currentPos=0x0;for(var i=iStart;this[_0x59c5('0x1b9')]()?i<iEnd:i>iEnd;i+=iGrow){var maxSize=0x0;var treeLevel=tree[_0x59c5('0xea')][i];for(var j=0x0;j<treeLevel[_0x59c5('0x19')];j++){var node=treeLevel[j];var size=0x0;if(this[_0x59c5('0x1b8')]()){size=node[_0x59c5('0xf1')];var xoff=0x0;if(this[_0x59c5('0x94')]==LayoutDirection[_0x59c5('0x1be')])xoff=levelSizes[i]-size;node['x']=currentPos+xoff+this['margins']+node['width']/0x2;node['y']=node['y']+this[_0x59c5('0x1a2')];}else{size=node[_0x59c5('0xf2')];var yoff=0x0;if(this[_0x59c5('0x94')]==LayoutDirection[_0x59c5('0x1c1')])yoff=levelSizes[i]-size;node['x']=node['x']+this[_0x59c5('0x1a2')];node['y']=currentPos+yoff+this[_0x59c5('0x1a2')]+node[_0x59c5('0xf2')]/0x2;}maxSize=Math[_0x59c5('0xc6')](maxSize,size);}currentPos+=maxSize+this[_0x59c5('0x1ad')];}if(this[_0x59c5('0x1af')]){var newRootX=root['x'];var newRootY=root['y'];var xoff=rootX-newRootX;var yoff=rootY-newRootY;this['offsetBranch'](tree,root,xoff,yoff);}if(this[_0x59c5('0x1b1')]!=TreeLayoutLinkType['Default']){switch(this[_0x59c5('0x1b1')]){case TreeLayoutLinkType[_0x59c5('0x1bc')]:{switch(this[_0x59c5('0x94')]){case LayoutDirection[_0x59c5('0x1b0')]:{tree[_0x59c5('0x0')][_0x59c5('0x15')](function(e){var parent=th['parentNode'](e);var child=th[_0x59c5('0xe2')](e);th[_0x59c5('0xd8')](e,[{'x':parent['x'],'y':parent['y']+parent[_0x59c5('0xf2')]/0x2},{'x':child['x'],'y':child['y']-child[_0x59c5('0xf2')]/0x2}]);});break;}case LayoutDirection[_0x59c5('0x1c1')]:{tree[_0x59c5('0x0')][_0x59c5('0x15')](function(e){var parent=th[_0x59c5('0xd6')](e);var child=th[_0x59c5('0xe2')](e);th[_0x59c5('0xd8')](e,[{'x':parent['x'],'y':parent['y']-parent[_0x59c5('0xf2')]/0x2},{'x':child['x'],'y':child['y']+child['height']/0x2}]);});break;}case LayoutDirection[_0x59c5('0x1bd')]:{tree['edges'][_0x59c5('0x15')](function(e){var parent=th['parentNode'](e);var child=th[_0x59c5('0xe2')](e);th[_0x59c5('0xd8')](e,[{'x':parent['x']+parent[_0x59c5('0xf1')]/0x2,'y':parent['y']},{'x':child['x']-child[_0x59c5('0xf1')]/0x2,'y':child['y']}]);});break;}case LayoutDirection['RightToLeft']:{tree['edges'][_0x59c5('0x15')](function(e){var parent=th[_0x59c5('0xd6')](e);var child=th[_0x59c5('0xe2')](e);th[_0x59c5('0xd8')](e,[{'x':parent['x']-parent['width']/0x2,'y':parent['y']},{'x':child['x']+child['width']/0x2,'y':child['y']}]);});break;}}break;}case TreeLayoutLinkType[_0x59c5('0x1b4')]:{var enableAssistants=this[_0x59c5('0x2ac')];var halfDistance=this['levelDistance']/0x2;switch(this['direction']){case LayoutDirection[_0x59c5('0x1b0')]:{tree['edges'][_0x59c5('0x15')](function(e){var parent=th[_0x59c5('0xd6')](e);var child=th['childNode'](e);if(enableAssistants&&child['assistantType']){th[_0x59c5('0xd8')](e,[{'x':parent['x'],'y':parent['y']+parent['height']/0x2},{'x':parent['x'],'y':child['y']},child[_0x59c5('0xe6')]===AssistantPosition[_0x59c5('0xe5')]?{'x':child['x']+child[_0x59c5('0xf1')]/0x2,'y':child['y']}:{'x':child['x']-child[_0x59c5('0xf1')]/0x2,'y':child['y']}]);}else{th[_0x59c5('0xd8')](e,[{'x':parent['x'],'y':parent['y']+parent[_0x59c5('0xf2')]/0x2},{'x':parent['x'],'y':child['y']-child['height']/0x2-halfDistance},{'x':child['x'],'y':child['y']-child[_0x59c5('0xf2')]/0x2-halfDistance},{'x':child['x'],'y':child['y']-child[_0x59c5('0xf2')]/0x2}]);}});break;}case LayoutDirection[_0x59c5('0x1c1')]:{tree[_0x59c5('0x0')][_0x59c5('0x15')](function(e){var parent=th['parentNode'](e);var child=th[_0x59c5('0xe2')](e);if(enableAssistants&&child[_0x59c5('0x2af')]){th['assignPoints'](e,[{'x':parent['x'],'y':parent['y']-parent['height']/0x2},{'x':parent['x'],'y':child['y']},child[_0x59c5('0xe6')]===AssistantPosition['Left']?{'x':child['x']+child[_0x59c5('0xf1')]/0x2,'y':child['y']}:{'x':child['x']-child[_0x59c5('0xf1')]/0x2,'y':child['y']}]);}else{th[_0x59c5('0xd8')](e,[{'x':parent['x'],'y':parent['y']-parent[_0x59c5('0xf2')]/0x2},{'x':parent['x'],'y':child['y']+child[_0x59c5('0xf2')]/0x2+halfDistance},{'x':child['x'],'y':child['y']+child['height']/0x2+halfDistance},{'x':child['x'],'y':child['y']+child[_0x59c5('0xf2')]/0x2}]);}});break;}case LayoutDirection[_0x59c5('0x1bd')]:{tree['edges'][_0x59c5('0x15')](function(e){var parent=th[_0x59c5('0xd6')](e);var child=th[_0x59c5('0xe2')](e);if(enableAssistants&&child[_0x59c5('0x2af')]){th[_0x59c5('0xd8')](e,[{'x':parent['x']+parent[_0x59c5('0xf1')]/0x2,'y':parent['y']},{'x':child['x'],'y':parent['y']},child[_0x59c5('0xe6')]===AssistantPosition[_0x59c5('0xe5')]?{'x':child['x'],'y':child['y']+child['height']/0x2}:{'x':child['x'],'y':child['y']-child['height']/0x2}]);}else{th[_0x59c5('0xd8')](e,[{'x':parent['x']+parent['width']/0x2,'y':parent['y']},{'x':child['x']-child['width']/0x2-halfDistance,'y':parent['y']},{'x':child['x']-child[_0x59c5('0xf1')]/0x2-halfDistance,'y':child['y']},{'x':child['x']-child[_0x59c5('0xf1')]/0x2,'y':child['y']}]);}});break;}case LayoutDirection['RightToLeft']:{tree['edges']['forEach'](function(e){var parent=th[_0x59c5('0xd6')](e);var child=th['childNode'](e);if(enableAssistants&&child[_0x59c5('0x2af')]){th[_0x59c5('0xd8')](e,[{'x':parent['x']-parent[_0x59c5('0xf1')]/0x2,'y':parent['y']},{'x':child['x'],'y':parent['y']},child['assistantPosition']===AssistantPosition[_0x59c5('0xe5')]?{'x':child['x'],'y':child['y']+child['height']/0x2}:{'x':child['x'],'y':child['y']-child[_0x59c5('0xf2')]/0x2}]);}else{th[_0x59c5('0xd8')](e,[{'x':parent['x']-parent['width']/0x2,'y':parent['y']},{'x':child['x']+child[_0x59c5('0xf1')]/0x2+halfDistance,'y':parent['y']},{'x':child['x']+child[_0x59c5('0xf1')]/0x2+halfDistance,'y':child['y']},{'x':child['x']+child['width']/0x2,'y':child['y']}]);}});break;}}}}}}[_0x59c5('0x2b2')](node,treeHelper){var childEdges=treeHelper['childEdges'](node);for(var i=0x0;i<childEdges[_0x59c5('0x19')];i++){if(treeHelper['childNode'](childEdges[i])[_0x59c5('0x2af')])return!![];}return![];}[_0x59c5('0x2b0')](root){var th=this[_0x59c5('0x2ae')];var temp=[];temp[_0x59c5('0x16')](root);var visited=[];var result;while(temp[_0x59c5('0x19')]>0x0){var node=temp[0x0];temp[_0x59c5('0x9c')](0x0,0x1);visited[_0x59c5('0x16')](node);if(!result)result=Rect[_0x59c5('0x1bf')](node);else result=result[_0x59c5('0x1cf')](Rect[_0x59c5('0x1bf')](node));var childEdges=th[_0x59c5('0xd7')](node);for(var i=0x0;i<childEdges['length'];i++){var child=th[_0x59c5('0xe2')](childEdges[i]);if(!visited[_0x59c5('0xd')](child))temp['push'](child);}}return result;}[_0x59c5('0x2b1')](tree,node1,node2){var dist=this[_0x59c5('0x6a')](node2)-this[_0x59c5('0x71')](node1);var levels1=new Map();var levels2=new Map();enumerateLevels(tree,node1,levels1);enumerateLevels(tree,node2,levels2);var keys=[...levels1['keys']()];for(var i=0x0;i<keys['length'];i++){var levelIndex=keys[i];if(!levels2[_0x59c5('0xac')](levelIndex))continue;var level1=levels1[_0x59c5('0x5d')](levelIndex);var level2=levels2[_0x59c5('0x5d')](levelIndex);var r=0x0;for(var j=0x0;j<level1[_0x59c5('0x19')];j++)r=Math[_0x59c5('0xc6')](r,this[_0x59c5('0x71')](level1[j]));var l=Number[_0x59c5('0xfb')];for(var j=0x0;j<level2['length'];j++)l=Math[_0x59c5('0xc5')](l,this[_0x59c5('0x6a')](level2[j]));if(l-r<dist&&(level1[_0x59c5('0x19')]>0x0&&level2['length']>0x0))dist=l-r;}return dist;}['right'](vertex){if(this[_0x59c5('0x1b8')]())return vertex['y']+vertex[_0x59c5('0xf2')]/0x2;else return vertex['x']+vertex[_0x59c5('0xf1')]/0x2;}['left'](vertex){if(this[_0x59c5('0x1b8')]())return vertex['y']-vertex['height']/0x2;else return vertex['x']-vertex[_0x59c5('0xf1')]/0x2;}[_0x59c5('0x1ba')](tree,nodeFrom,xoff,yoff){if(!xoff&&!yoff)return;var offsetFunc=function(node,params){node['x']+=params[0x0];node['y']+=params[0x1];};walk(tree,nodeFrom,offsetFunc,[xoff,yoff]);}['isHorizontal'](){return this[_0x59c5('0x94')]==LayoutDirection['LeftToRight']||this[_0x59c5('0x94')]==LayoutDirection[_0x59c5('0x1be')];}[_0x59c5('0x1b9')](){return this[_0x59c5('0x94')]==LayoutDirection['LeftToRight']||this[_0x59c5('0x94')]==LayoutDirection[_0x59c5('0x1b0')];}[_0x59c5('0x2b3')](numerator,denominator){return(numerator-numerator%denominator)/denominator;}[_0x59c5('0x1c3')](){return this[_0x59c5('0x1c4')][_0x59c5('0x1c5')];}get[_0x59c5('0x1ad')](){return this[_0x59c5('0x1c6')];}set[_0x59c5('0x1ad')](value){this['_levelDistance']=value;}get[_0x59c5('0x1ae')](){return this[_0x59c5('0x1c7')];}set[_0x59c5('0x1ae')](value){this['_nodeDistance']=value;}get[_0x59c5('0x1af')](){return this[_0x59c5('0x1c8')];}set['keepRootPosition'](value){this[_0x59c5('0x1c8')]=value;}get['direction'](){return this['_direction'];}set[_0x59c5('0x94')](value){this[_0x59c5('0x1c9')]=value;}get['linkType'](){return this['_linkType'];}set[_0x59c5('0x1b1')](value){this[_0x59c5('0x1ca')]=value;}get[_0x59c5('0x19e')](){return this[_0x59c5('0x1cb')];}set[_0x59c5('0x19e')](value){this[_0x59c5('0x1cb')]=value;}get[_0x59c5('0x1cc')](){return this['_keepGroupLayout'];}set[_0x59c5('0x1cc')](value){this[_0x59c5('0x1a3')]=value;}get[_0x59c5('0x2ac')](){return this[_0x59c5('0x2b4')];}set['enableAssistants'](value){this[_0x59c5('0x2b4')]=value;}get['compactAssistants'](){return this[_0x59c5('0x2b5')];}set[_0x59c5('0x2ad')](value){this['_compactAssistants']=value;}get['multipleGraphsPlacement'](){return this[_0x59c5('0x1a4')];}set[_0x59c5('0x1a0')](value){this['_multipleGraphsPlacement']=value;}get['reversedLinks'](){return this[_0x59c5('0x1cd')];}set[_0x59c5('0xd5')](value){this[_0x59c5('0x1cd')]=value;}}function enumerateLevels(tree,node,levels){var levelIndex=node['level'];var level=null;if(levels[_0x59c5('0xac')](levelIndex)){level=levels[_0x59c5('0x5d')](levelIndex);}else{level=[];levels['set'](levelIndex,level);}level['push'](node);tree[_0x59c5('0xec')](node)[_0x59c5('0x15')](function(child){enumerateLevels(tree,child,levels);});}function walk(tree,node,func,params){func['call'](this,node,params);var children=tree[_0x59c5('0xec')](node);children['forEach'](function(child){walk(tree,child,func,params);});}class TreeMapLayout extends Layout{constructor(){super();this[_0x59c5('0x1f5')]=Orientation[_0x59c5('0x1a1')];this[_0x59c5('0x2b6')]=!![];this[_0x59c5('0x2b7')]=0x1;this[_0x59c5('0x2b8')]=null;this[_0x59c5('0x2b9')]=0x0;this['minNodeSize']=0x1;}get['setsLinkEndPoints'](){return![];}get[_0x59c5('0x2ba')](){return![];}get['requiresConnectedGraph'](){return![];}get[_0x59c5('0x1a8')](){return![];}get[_0x59c5('0x1ab')](){return!![];}[_0x59c5('0x1b5')](graph){if(this[_0x59c5('0x2b8')]==null)this[_0x59c5('0x2b8')]=graph['layoutArea'];var roots=[];this[_0x59c5('0x2bb')]=new Map();var totalWeight=0x0;graph[_0x59c5('0xe3')][_0x59c5('0x15')](function(vertex){if(vertex[_0x59c5('0x2bc')]==null){totalWeight+=this['calcWeights'](vertex);roots[_0x59c5('0x16')](vertex);}},this);if(this[_0x59c5('0x2b6')])this[_0x59c5('0x2bd')](roots,this[_0x59c5('0x2b8')],[],totalWeight);else this[_0x59c5('0x2be')](roots,this['layoutArea'],this[_0x59c5('0x1f5')]==Orientation[_0x59c5('0x1b2')],totalWeight);}[_0x59c5('0x2bd')](nodes,layoutArea,row,parentWeight){var children=nodes[_0x59c5('0x9d')]();var weights=this[_0x59c5('0x2bb')];children[_0x59c5('0xed')](function(n1,n2){return weights['get'](n2)-weights[_0x59c5('0x5d')](n1);});this['doSquarify'](children,layoutArea,row,parentWeight);}['doSquarify'](children,layoutArea,row,parentWeight){var horizontal=layoutArea[_0x59c5('0xf1')]>layoutArea[_0x59c5('0xf2')];var sideLen=Math[_0x59c5('0xc5')](layoutArea['width'],layoutArea[_0x59c5('0xf2')]);var ratio1=0x0,ratio2=0x0;var row2=row['slice']();if(children[_0x59c5('0x19')]>0x0){var node=children[0x0];row2[_0x59c5('0x16')](node);var area=layoutArea[_0x59c5('0xf1')]*layoutArea[_0x59c5('0xf2')];ratio1=this[_0x59c5('0x2bf')](row,sideLen,area*this['weight'](row)/parentWeight);ratio2=this[_0x59c5('0x2bf')](row2,sideLen,area*this['weight'](row2)/parentWeight);}if(children[_0x59c5('0x19')]>0x0&&(ratio1==0x0||ratio1>=ratio2)){children['shift']();this[_0x59c5('0x2c0')](children,layoutArea,row2,parentWeight);}else{var len=this[_0x59c5('0x2c1')](layoutArea,row,!horizontal,parentWeight);parentWeight-=this[_0x59c5('0x2')](row);if(horizontal){layoutArea['x']+=len;layoutArea[_0x59c5('0xf1')]-=len;}else{layoutArea['y']+=len;layoutArea[_0x59c5('0xf2')]-=len;}if(children[_0x59c5('0x19')]>0x0)this['doSquarify'](children,layoutArea,[],parentWeight);}}[_0x59c5('0x2')](row){var total=0x0;row[_0x59c5('0x15')](function(node){total+=this[_0x59c5('0x2bb')][_0x59c5('0x5d')](node);},this);return total;}['subtractPadding'](rect){var hp=-this[_0x59c5('0x2b7')]/0x2;rect=rect['inflate'](hp);var mm=this['minNodeSize'];if(rect[_0x59c5('0xf1')]<mm)rect['width']=mm;if(rect['height']<mm)rect['height']=mm;}[_0x59c5('0x2c1')](layoutArea,row,horizontal,parentWeight){var parentArea=layoutArea[_0x59c5('0xf1')]*layoutArea[_0x59c5('0xf2')];var sideLen=horizontal?layoutArea[_0x59c5('0xf1')]:layoutArea['height'];var total=0x0;row[_0x59c5('0x15')](function(node){total+=this[_0x59c5('0x2bb')][_0x59c5('0x5d')](node);},this);var rowArea=parentArea*total/parentWeight;var len=rowArea/sideLen;var pos=horizontal?layoutArea['x']:layoutArea['y'];row[_0x59c5('0x15')](function(node){var weight=this[_0x59c5('0x2bb')][_0x59c5('0x5d')](node);var bounds=horizontal?new Rect(pos,layoutArea['y'],rowArea*weight/total/len,len):new Rect(layoutArea['x'],pos,len,rowArea*weight/total/len);this['subtractPadding'](bounds);setBounds(node,bounds);pos+=rowArea*weight/total/len;if(node[_0x59c5('0x2c2')]!=null){var children=node['subordinates'][_0x59c5('0x9d')]();var childArea=this[_0x59c5('0x2c3')](node);this[_0x59c5('0x2c4')](childArea);this[_0x59c5('0x2bd')](children,childArea,[],weight);}},this);return len;}[_0x59c5('0x2be')](nodes,layoutArea,horizontal,totalWeight){var pos=horizontal?layoutArea['x']:layoutArea['y'];var length=horizontal?layoutArea[_0x59c5('0xf1')]:layoutArea[_0x59c5('0xf2')];nodes[_0x59c5('0x15')](function(node){var nodeSize=length*this[_0x59c5('0x2bb')][_0x59c5('0x5d')](node)/totalWeight;var bounds=horizontal?new Rect(pos,layoutArea['y'],nodeSize,layoutArea[_0x59c5('0xf2')]):new Rect(layoutArea['x'],pos,layoutArea['width'],nodeSize);this['subtractPadding'](bounds);setBounds(node,bounds);if(node[_0x59c5('0x2c2')]!=null){var children=node[_0x59c5('0x2c2')][_0x59c5('0x9d')]();var childArea=this[_0x59c5('0x2c3')](node);this[_0x59c5('0x2c4')](childArea);this[_0x59c5('0x2be')](children,childArea,!horizontal,this['weights'][_0x59c5('0x5d')](node));}pos+=nodeSize;},this);}[_0x59c5('0x2bf')](row,sideLen,rowArea){var worst=0x0;var total=0x0;row['forEach'](function(node){var weight=this['weights'][_0x59c5('0x5d')](node);total+=weight;},this);row['forEach'](function(node){var weight=this[_0x59c5('0x2bb')][_0x59c5('0x5d')](node);var area=rowArea*weight/total;worst=Math[_0x59c5('0xc6')](worst,Math['max'](sideLen*sideLen*area/(rowArea*rowArea),rowArea*rowArea/(sideLen*sideLen*area)));},this);return worst;}[_0x59c5('0x2c5')](root){if(this['weights'][_0x59c5('0xac')](root))return this[_0x59c5('0x2bb')][_0x59c5('0x5d')](root);if(root[_0x59c5('0x2c2')]==null){this[_0x59c5('0x2bb')]['set'](root,root[_0x59c5('0x2')]);return root[_0x59c5('0x2')];}var weight=0x0;root[_0x59c5('0x2c2')]['forEach'](function(child){weight+=this['calcWeights'](child);},this);this[_0x59c5('0x2bb')][_0x59c5('0xa7')](root,weight);return weight;}[_0x59c5('0x2c3')](node){var la=Rect['fromVertex'](node);if(node[_0x59c5('0x2c6')]){var headerSize=node[_0x59c5('0x2c6')];if(headerSize<la[_0x59c5('0xf2')]){la['y']+=headerSize;la['height']-=headerSize;}else{la['y']+=la[_0x59c5('0xf2')]/0x2;la['height']/=0x2;}}if(node['subordinates']!=null)return la[_0x59c5('0x2c7')](-this[_0x59c5('0x2b9')]);return la;}[_0x59c5('0x1c3')](){return this[_0x59c5('0x1c4')][_0x59c5('0x1c5')];}get[_0x59c5('0x1f5')](){return this[_0x59c5('0x21c')];}set[_0x59c5('0x1f5')](value){this[_0x59c5('0x21c')]=value;}get[_0x59c5('0x2b6')](){return this[_0x59c5('0x2c8')];}set[_0x59c5('0x2b6')](value){this[_0x59c5('0x2c8')]=value;}get[_0x59c5('0x2b7')](){return this[_0x59c5('0x2c9')];}set['padding'](value){this[_0x59c5('0x2c9')]=value;}get[_0x59c5('0x2b8')](){return this[_0x59c5('0x2ca')];}set[_0x59c5('0x2b8')](value){this[_0x59c5('0x2ca')]=value;}get[_0x59c5('0x2b9')](){return this[_0x59c5('0x2cb')];}set[_0x59c5('0x2b9')](value){this[_0x59c5('0x2cb')]=value;}}function setBounds(vertex,rect){var c=rect[_0x59c5('0x1d4')]();vertex['x']=c['x'];vertex['y']=c['y'];vertex[_0x59c5('0xf1')]=rect[_0x59c5('0xf1')];vertex[_0x59c5('0xf2')]=rect[_0x59c5('0xf2')];}class DrawingGrid{constructor(graph,vertexPoints,edgePoints){this[_0x59c5('0xa5')]=graph;this[_0x59c5('0x2cc')]=vertexPoints;this['edgePoints']=edgePoints;this[_0x59c5('0x2cd')]=new DrawingGrid[(_0x59c5('0x2ce'))]();this[_0x59c5('0x2cf')]=new DrawingGrid[(_0x59c5('0x2d0'))](Number[_0x59c5('0x151')],Number['MAX_SAFE_INTEGER'],Number[_0x59c5('0x2d1')],Number[_0x59c5('0x2d1')]);for(let v of graph['vertices']){let p=vertexPoints[_0x59c5('0x5d')](v);this[_0x59c5('0x2d2')](p);this['getCell'](p['x'],p['y'])[_0x59c5('0x60')](v);}for(let e of graph['edges']){let points=edgePoints[_0x59c5('0x5d')](e);this[_0x59c5('0x2d3')](points,e,![]);this['updateBoundsFromPoints'](points);let prevPoint=points[0x0];for(let i=0x1;i<points[_0x59c5('0x19')]-0x1;++i){let point=points[i];if(point[_0x59c5('0x2d4')](prevPoint))continue;this[_0x59c5('0x2d5')](point['x'],point['y'])[_0x59c5('0x60')](new DrawingGrid[(_0x59c5('0x2d6'))](e));prevPoint=point;}}this[_0x59c5('0x2d7')]=new Map();for(let c=this[_0x59c5('0x2cf')]['left'];c<=this[_0x59c5('0x2cf')][_0x59c5('0x71')];++c)this[_0x59c5('0x2d7')][_0x59c5('0xa7')](c,0x1);this[_0x59c5('0x2d8')]=new Map();for(let r=this[_0x59c5('0x2cf')][_0x59c5('0x1c0')];r<=this[_0x59c5('0x2cf')][_0x59c5('0x1c2')];++r)this[_0x59c5('0x2d8')]['set'](r,0x1);}[_0x59c5('0x2d9')](vertexSize,padding,edgeCellSize){this['minWidth']=new Map();this[_0x59c5('0x2da')]=new Map();this['minHeight']=new Map();this[_0x59c5('0x2db')]=new Map();for(let v of this[_0x59c5('0xa5')][_0x59c5('0xe3')]){let vs=vertexSize(v);let cp=this[_0x59c5('0x2cc')]['get'](v);this[_0x59c5('0x2dc')]['set'](cp['x'],this[_0x59c5('0x2dc')][_0x59c5('0xac')](cp['x'])?Math['min'](this[_0x59c5('0x2dc')]['get'](cp['x']),vs['width']):vs[_0x59c5('0xf1')]);this[_0x59c5('0x2da')][_0x59c5('0xa7')](cp['x'],this[_0x59c5('0x2da')][_0x59c5('0xac')](cp['x'])?Math['max'](this[_0x59c5('0x2da')][_0x59c5('0x5d')](cp['x']),vs['width']):vs[_0x59c5('0xf1')]);this[_0x59c5('0x2dd')][_0x59c5('0xa7')](cp['y'],this['minHeight'][_0x59c5('0xac')](cp['y'])?Math[_0x59c5('0xc5')](this['minHeight']['get'](cp['y']),vs[_0x59c5('0xf2')]):vs[_0x59c5('0xf2')]);this[_0x59c5('0x2db')][_0x59c5('0xa7')](cp['y'],this['maxHeight'][_0x59c5('0xac')](cp['y'])?Math[_0x59c5('0xc6')](this[_0x59c5('0x2db')][_0x59c5('0x5d')](cp['y']),vs['height']):vs[_0x59c5('0xf2')]);}this[_0x59c5('0x2de')]=new Map();this['rowPositions']=new Map();let x=0x0;for(let c=this[_0x59c5('0x2cf')][_0x59c5('0x6a')];c<=this['bounds']['right'];++c){let w=this[_0x59c5('0x2da')][_0x59c5('0xac')](c)?this[_0x59c5('0x2da')]['get'](c)+padding:this['columnWidths'][_0x59c5('0x5d')](c)*edgeCellSize;x+=w;this[_0x59c5('0x2de')][_0x59c5('0xa7')](c,x-w/0x2);}let y=0x0;for(let r=this[_0x59c5('0x2cf')][_0x59c5('0x1c0')];r<=this[_0x59c5('0x2cf')][_0x59c5('0x1c2')];++r){let h=this[_0x59c5('0x2db')][_0x59c5('0xac')](r)?this[_0x59c5('0x2db')][_0x59c5('0x5d')](r)+padding:this['rowHeights'][_0x59c5('0x5d')](r)*edgeCellSize;y+=h;this[_0x59c5('0x2df')][_0x59c5('0xa7')](r,y-h/0x2);}}[_0x59c5('0x2e0')](point){return new Point(this[_0x59c5('0x2de')][_0x59c5('0x5d')](point['x']),this[_0x59c5('0x2df')][_0x59c5('0x5d')](point['y']));}[_0x59c5('0x2e1')](point,edge,width,height){if(this[_0x59c5('0x2e2')]==null)return this['getPosition'](point);let result=new Point(this['columnPositions'][_0x59c5('0x5d')](point['x']),this[_0x59c5('0x2df')][_0x59c5('0x5d')](point['y']));let bend=null;if(this[_0x59c5('0x2cd')][_0x59c5('0xac')](point)){let cell=this[_0x59c5('0x2cd')][_0x59c5('0x5d')](point);bend=cell[_0x59c5('0x2e3')](edge);}if(this[_0x59c5('0x2dc')][_0x59c5('0xac')](point['x']))width=this['minWidth'][_0x59c5('0x5d')](point['x']);if(this['minHeight'][_0x59c5('0xac')](point['y']))height=this[_0x59c5('0x2dd')]['get'](point['y']);if(bend!=null){let laneWidth=width/bend[_0x59c5('0x2e4')];result['x']=result['x']-width/0x2+(0.5+bend[_0x59c5('0x2e5')])*laneWidth;let laneHeight=height/bend[_0x59c5('0x2e6')];result['y']=result['y']-height/0x2+(0.5+bend['horizontalLane'])*laneHeight;}else{let hlane=-0x1,vlane=-0x1;let hneighbors={'val':-0x1},vneighbors={'val':-0x1};let np=new Point(point['x']-0x1,point['y']);if(this['cells'][_0x59c5('0xac')](np)){let cell=this[_0x59c5('0x2cd')][_0x59c5('0x5d')](np);hlane=cell[_0x59c5('0x2e7')](edge,!![],hneighbors);}if(hlane==-0x1){np=new Point(point['x']+0x1,point['y']);if(this[_0x59c5('0x2cd')][_0x59c5('0xac')](np)){let cell=this[_0x59c5('0x2cd')][_0x59c5('0x5d')](np);hlane=cell['getEdgeLane'](edge,!![],hneighbors);}}np=new Point(point['x'],point['y']-0x1);if(this[_0x59c5('0x2cd')]['has'](np)){let cell=this['cells'][_0x59c5('0x5d')](np);vlane=cell[_0x59c5('0x2e7')](edge,![],vneighbors);}if(vlane==-0x1){np=new Point(point['x'],point['y']+0x1);if(this[_0x59c5('0x2cd')][_0x59c5('0xac')](np)){let cell=this[_0x59c5('0x2cd')][_0x59c5('0x5d')](np);vlane=cell['getEdgeLane'](edge,![],vneighbors);}}if(vlane!=-0x1){let laneWidth=width/vneighbors[_0x59c5('0x2e8')];result['x']=result['x']-width/0x2+(0.5+vlane)*laneWidth;}if(hlane!=-0x1){let laneHeight=height/hneighbors[_0x59c5('0x2e8')];result['y']=result['y']-height/0x2+(0.5+hlane)*laneHeight;}}return result;}['updateBounds'](point){this[_0x59c5('0x2cf')][_0x59c5('0x6a')]=Math[_0x59c5('0xc5')](this['bounds'][_0x59c5('0x6a')],point['x']);this[_0x59c5('0x2cf')][_0x59c5('0x1c0')]=Math[_0x59c5('0xc5')](this[_0x59c5('0x2cf')][_0x59c5('0x1c0')],point['y']);this[_0x59c5('0x2cf')][_0x59c5('0x71')]=Math[_0x59c5('0xc6')](this[_0x59c5('0x2cf')][_0x59c5('0x71')],point['x']);this['bounds'][_0x59c5('0x1c2')]=Math[_0x59c5('0xc6')](this[_0x59c5('0x2cf')][_0x59c5('0x1c2')],point['y']);}[_0x59c5('0x2e9')](points){for(let point of points)this[_0x59c5('0x2d2')](point);}[_0x59c5('0x2ea')](iterations){this['refineCacheEdges']();for(let i=0x0;i<iterations;i++){this['refineDegreeOneVertices']();this['refineUTurns']();this[_0x59c5('0x2eb')]();}this[_0x59c5('0x2ec')]();this[_0x59c5('0x2ed')]();this['setApartOverlappingEdges']();}[_0x59c5('0x2ee')](){this[_0x59c5('0x2ec')]();this[_0x59c5('0x2ed')]();}[_0x59c5('0x2ef')](){for(let e of this['graph'][_0x59c5('0x0')]){let points=this['edgePoints'][_0x59c5('0x5d')](e);for(let i=0x0;i<points[_0x59c5('0x19')]-0x1;i++){let ss=points[i];let se=points[i+0x1];let dx=se['x']-ss['x'];if(dx!=0x0)dx/=Math['abs'](dx);let dy=se['y']-ss['y'];if(dy!=0x0)dy/=Math[_0x59c5('0x219')](dy);let segment=new DrawingGrid[(_0x59c5('0x2f0'))](e,dx,dy);for(let p=ss;!p[_0x59c5('0x2d4')](se);p=new Point(p['x']+dx,p['y']+dy)){if(!p['equals'](ss)&&!p[_0x59c5('0x2d4')](se))this[_0x59c5('0x2d5')](p['x'],p['y'])[_0x59c5('0x60')](segment);}}}}['refineDegreeOneVertices'](){for(let v of this[_0x59c5('0xa5')]['vertices']){if(v['degree']()==0x1){let vPoint=this[_0x59c5('0x2cc')][_0x59c5('0x5d')](v);let vCell=this[_0x59c5('0x2cd')][_0x59c5('0x5d')](vPoint);let e=v[_0x59c5('0x0')][0x0];let o=e[_0x59c5('0x10')](v);let oPoint=this[_0x59c5('0x2cc')][_0x59c5('0x5d')](o);let points=this[_0x59c5('0x2f1')]['get'](e);let start=e[_0x59c5('0x8')]==o?0x0:points['length']-0x1;let end=e[_0x59c5('0x8')]==o?points[_0x59c5('0x19')]-0x1:0x0;let step=e[_0x59c5('0x8')]==o?+0x1:-0x1;let removeStart=-0x1,removeCount=-0x1,replaceIndex=-0x1;let replacePoint=new Point(0x0,0x0);for(let i=start;i!=end;i+=step){let ss=points[i];let se=points[i+step];let dx=se['x']-ss['x'];if(dx!=0x0)dx/=Math[_0x59c5('0x219')](dx);let dy=se['y']-ss['y'];if(dy!=0x0)dy/=Math[_0x59c5('0x219')](dy);for(let p=ss;!p[_0x59c5('0x2d4')](se);p=new Point(p['x']+dx,p['y']+dy)){if(p[_0x59c5('0x2d4')](vPoint)||p[_0x59c5('0x2d4')](oPoint))continue;if(!this[_0x59c5('0x2cd')]['has'](p))continue;let cell=this[_0x59c5('0x2cd')][_0x59c5('0x5d')](p);if(vCell==null){this[_0x59c5('0x2f2')](cell,p,e,dy==0x0);}else{if(cell['content'][_0x59c5('0x19')]==0x1){Utils[_0x59c5('0x9')](vCell[_0x59c5('0x2f3')],v);if(vCell['content'][_0x59c5('0x19')]==0x0)this[_0x59c5('0x2cd')][_0x59c5('0xad')](vPoint);vCell=null;cell[_0x59c5('0x2f3')][_0x59c5('0x19')]=0x0;cell[_0x59c5('0x60')](v);this[_0x59c5('0x2cc')][_0x59c5('0xa7')](v,p);replaceIndex=i+step;replacePoint=p;if(step==+0x1){removeStart=i+0x2;removeCount=points[_0x59c5('0x19')]-i-0x2;}else if(step==-0x1){removeStart=0x0;removeCount=i-0x1;}}}}}if(removeStart!=-0x1){points[replaceIndex]=replacePoint;points[_0x59c5('0x9c')](removeStart,removeCount);}}}}[_0x59c5('0x2ec')](){for(let r=this['bounds'][_0x59c5('0x1c0')];r<=this[_0x59c5('0x2cf')]['bottom'];++r){let unused=!![];for(let c=this[_0x59c5('0x2cf')]['left'];c<=this[_0x59c5('0x2cf')][_0x59c5('0x71')];++c){let p=new Point(c,r);if(this[_0x59c5('0x2cd')][_0x59c5('0xac')](p)){let cell=this[_0x59c5('0x2cd')]['get'](p);if(cell[_0x59c5('0x2f4')]()){unused=![];break;}}}if(unused)this['rowHeights'][_0x59c5('0xa7')](r,0x0);}}[_0x59c5('0x2ed')](){for(let c=this[_0x59c5('0x2cf')]['left'];c<=this['bounds'][_0x59c5('0x71')];++c){let unused=!![];for(let r=this[_0x59c5('0x2cf')][_0x59c5('0x1c0')];r<=this[_0x59c5('0x2cf')][_0x59c5('0x1c2')];++r){let p=new Point(c,r);if(this[_0x59c5('0x2cd')][_0x59c5('0xac')](p)){let cell=this[_0x59c5('0x2cd')][_0x59c5('0x5d')](p);if(cell[_0x59c5('0x2f4')]()){unused=![];break;}}}if(unused)this[_0x59c5('0x2d7')]['set'](c,0x0);}}[_0x59c5('0x2f2')](cell,p,edge,horizontal){cell[_0x59c5('0x2f5')](edge,horizontal);if(cell[_0x59c5('0x2f3')]['length']==0x0)this['cells'][_0x59c5('0xad')](p);}['refineUTurns'](){for(let e of this[_0x59c5('0xa5')][_0x59c5('0x0')]){let path=this[_0x59c5('0x2f1')][_0x59c5('0x5d')](e);if(path[_0x59c5('0x19')]<0x4)continue;for(let i=0x0;i<=path['length']-0x4;++i){let p1=path[i];let p2=path[i+0x1];let p3=path[i+0x2];let p4=path[i+0x3];let dx1=p1['x']-p2['x'];let dx2=p2['x']-p3['x'];let dx3=p3['x']-p4['x'];let dy1=p1['y']-p2['y'];let dy3=p3['y']-p4['y'];if(dx1*dx3<0x0||dy1*dy3<0x0){let armDist1=p1['manhDistance'](p2);let armDist2=p4[_0x59c5('0x2f6')](p3);let ss=armDist1<armDist2?p1:p4;let ls=armDist1<armDist2?p4:p1;let se=armDist1<armDist2?p2:p3;let cd=armDist1<armDist2?p3:p2;let sai=armDist1<armDist2?i+0x1:i+0x2;let lai=armDist1<armDist2?i+0x2:i+0x1;let dx=p2['x']-p1['x'];if(dx!=0x0)dx/=Math[_0x59c5('0x219')](dx);let dy=p2['y']-p1['y'];if(dy!=0x0)dy/=Math[_0x59c5('0x219')](dy);let cx=cd['x']-se['x'];if(cx!=0x0)cx/=Math[_0x59c5('0x219')](cx);let cy=cd['y']-se['y'];if(cy!=0x0)cy/=Math[_0x59c5('0x219')](cy);let cl=se[_0x59c5('0x2f6')](cd);let css=cx==0x0?new Point(ss['x'],ls['y']):new Point(ls['x'],ss['y']);if(this['edgeContainsRange'](e,ss,![],css,!![])){this['removeSegmentsFromRange'](e,css,!![],cd,![]);this[_0x59c5('0x2f7')](e,cd,!![],se,![]);this[_0x59c5('0x2f7')](e,se,!![],ss,![]);this['removeSegmentsFromRange'](e,ss,!![],css,!![]);this[_0x59c5('0x2d5')](css['x'],css['y'])[_0x59c5('0x60')](new DrawingGrid[(_0x59c5('0x2d6'))](e));path[_0x59c5('0x9c')](i+0x1,0x2);if(sai<lai)path[i]=css;else path[i+0x1]=css;i--;continue;}for(let p=ss;!p[_0x59c5('0x2d4')](se);p=new Point(p['x']+dx,p['y']+dy)){let cr=p;let unused=!![];for(let j=0x1;j<cl;++j){cr=new Point(cr['x']+cx,cr['y']+cy);if(this[_0x59c5('0x2cd')][_0x59c5('0xac')](cr)){let cell=this[_0x59c5('0x2cd')][_0x59c5('0x5d')](cr);if(cell['containsVertexOrBend']()){unused=![];break;}}}if(unused){let toRemove=se;for(let j=0x0;j<=cl;++j){if(this[_0x59c5('0x2cd')][_0x59c5('0xac')](toRemove))this['removeFromCell'](this[_0x59c5('0x2cd')][_0x59c5('0x5d')](toRemove),toRemove,e,cy==0x0);toRemove=new Point(toRemove['x']+cx,toRemove['y']+cy);}for(let ap=p;!ap['equals'](se);ap=new Point(ap['x']+dx,ap['y']+dy)){let sp=dx2==0x0?new Point(ap['x'],cd['y']):new Point(cd['x'],ap['y']);if(this[_0x59c5('0x2cd')][_0x59c5('0xac')](ap))this[_0x59c5('0x2f2')](this['cells'][_0x59c5('0x5d')](ap),ap,e,dy==0x0);if(this[_0x59c5('0x2cd')][_0x59c5('0xac')](sp))this[_0x59c5('0x2f2')](this[_0x59c5('0x2cd')][_0x59c5('0x5d')](sp),sp,e,dy==0x0);}let removes=!![];if(!p[_0x59c5('0x2d4')](ss)){this[_0x59c5('0x2d5')](p['x'],p['y'])[_0x59c5('0x60')](new DrawingGrid[(_0x59c5('0x2d6'))](e));path[sai]=p;removes=![];}let sp2=dx2==0x0?new Point(p['x'],cd['y']):new Point(cd['x'],p['y']);let removel=!![];if(!sp2['equals'](ls)){this[_0x59c5('0x2d5')](sp2['x'],sp2['y'])[_0x59c5('0x60')](new DrawingGrid[(_0x59c5('0x2d6'))](e));path[lai]=sp2;removel=![];}if(lai>sai){if(removel)path['splice'](lai,0x1);if(removes)path[_0x59c5('0x9c')](sai,0x1);}else{if(removes)path['splice'](sai,0x1);if(removel)path[_0x59c5('0x9c')](lai,0x1);}let ep=p;let segment=new DrawingGrid[(_0x59c5('0x2f0'))](e,cx,cy);for(let j=0x1;j<cl;++j){ep=new Point(ep['x']+cx,ep['y']+cy);this[_0x59c5('0x2d5')](ep['x'],ep['y'])[_0x59c5('0x60')](segment);}if(removes||removel){i=-0x1;this[_0x59c5('0x2d3')](path,e,!![]);}break;}}}}}}['removeRedundantBends'](){for(let e of this[_0x59c5('0xa5')][_0x59c5('0x0')]){let path=this[_0x59c5('0x2f1')][_0x59c5('0x5d')](e);if(path[_0x59c5('0x19')]<0x4)continue;for(let i=0x0;i<=path[_0x59c5('0x19')]-0x4;++i){let p1=path[i];let p2=path[i+0x1];let p3=path[i+0x2];let p4=path[i+0x3];let dx1=p1['x']-p2['x'];let dx3=p3['x']-p4['x'];let dy1=p1['y']-p2['y'];let dy3=p3['y']-p4['y'];if(dx1*dx3>0x0||dy1*dy3>0x0){let dx=p2['x']-p1['x'];if(dx!=0x0)dx/=Math[_0x59c5('0x219')](dx);let dy=p2['y']-p1['y'];if(dy!=0x0)dy/=Math['abs'](dy);let newBend=dx!=0x0?new Point(p4['x'],p1['y']):new Point(p1['x'],p4['y']);let cx=p4['x']-newBend['x'];if(cx!=0x0)cx/=Math['abs'](cx);let cy=p4['y']-newBend['y'];if(cy!=0x0)cy/=Math['abs'](cy);let unused=!![];for(let p=new Point(p2['x']+dx,p2['y']+dy);!p['equals'](newBend);p=new Point(p['x']+dx,p['y']+dy)){if(this[_0x59c5('0x2cd')][_0x59c5('0xac')](p)){let cell=this[_0x59c5('0x2cd')]['get'](p);if(cell['containsVertexOrBend']()){unused=![];break;}}}if(unused){for(let p=newBend;!p[_0x59c5('0x2d4')](p4);p=new Point(p['x']+cx,p['y']+cy)){if(this[_0x59c5('0x2cd')][_0x59c5('0xac')](p)){let cell=this[_0x59c5('0x2cd')]['get'](p);if(cell[_0x59c5('0x2f4')]()){unused=![];break;}}}}if(unused){for(let toRemove=new Point(p1['x']+dx,p1['y']+dy);!toRemove['equals'](p2);toRemove=new Point(toRemove['x']+dx,toRemove['y']+dy)){if(this[_0x59c5('0x2cd')]['has'](toRemove))this[_0x59c5('0x2f2')](this[_0x59c5('0x2cd')]['get'](toRemove),toRemove,e,dy==0x0);}for(let toRemove=p2;!toRemove[_0x59c5('0x2d4')](p3);toRemove=new Point(toRemove['x']+cx,toRemove['y']+cy)){if(this[_0x59c5('0x2cd')]['has'](toRemove))this['removeFromCell'](this[_0x59c5('0x2cd')][_0x59c5('0x5d')](toRemove),toRemove,e,cy==0x0);}for(let toRemove=p3;!toRemove[_0x59c5('0x2d4')](p4);toRemove=new Point(toRemove['x']+dx,toRemove['y']+dy)){if(this[_0x59c5('0x2cd')][_0x59c5('0xac')](toRemove))this[_0x59c5('0x2f2')](this[_0x59c5('0x2cd')]['get'](toRemove),toRemove,e,dy==0x0);}if(this[_0x59c5('0x2cd')][_0x59c5('0xac')](p4))this[_0x59c5('0x2f2')](this[_0x59c5('0x2cd')][_0x59c5('0x5d')](p4),p4,e,!![]);this[_0x59c5('0x2d5')](newBend['x'],newBend['y'])['add'](new DrawingGrid['Bend'](e));let segment=new DrawingGrid[(_0x59c5('0x2f0'))](e,dx,dy);for(let p=new Point(p1['x']+dx,p1['y']+dy);!p[_0x59c5('0x2d4')](newBend);p=new Point(p['x']+dx,p['y']+dy)){this[_0x59c5('0x2d5')](p['x'],p['y'])[_0x59c5('0x60')](segment);}segment=new DrawingGrid['EdgeSegment'](e,cx,cy);for(let p=new Point(newBend['x']+cx,newBend['y']+cy);!p[_0x59c5('0x2d4')](p4);p=new Point(p['x']+cx,p['y']+cy)){this[_0x59c5('0x2d5')](p['x'],p['y'])[_0x59c5('0x60')](segment);}path[_0x59c5('0x9c')](i+0x2,0x1);path[i+0x1]=newBend;i=-0x1;this[_0x59c5('0x2d3')](path,e,!![]);}}}}}[_0x59c5('0x2f8')](e,p1,includeP1,p2,includeP2){let dx=p2['x']-p1['x'];if(dx!=0x0)dx/=Math[_0x59c5('0x219')](dx);let dy=p2['y']-p1['y'];if(dy!=0x0)dy/=Math[_0x59c5('0x219')](dy);let segment=new DrawingGrid[(_0x59c5('0x2f0'))](e,dx,dy);let start=includeP1?p1:new Point(p1['x']+dx,p1['y']+dy);for(let p=start;!p['equals'](p2);p=new Point(p['x']+dx,p['y']+dy))this['getCell'](p['x'],p['y'])[_0x59c5('0x60')](segment);if(includeP2)this[_0x59c5('0x2d5')](p2['x'],p2['y'])[_0x59c5('0x60')](segment);}[_0x59c5('0x2f7')](e,p1,removeP1,p2,removeP2){let dx=p2['x']-p1['x'];if(dx!=0x0)dx/=Math['abs'](dx);let dy=p2['y']-p1['y'];if(dy!=0x0)dy/=Math[_0x59c5('0x219')](dy);let start=removeP1?p1:new Point(p1['x']+dx,p1['y']+dy);for(let toRemove=start;!toRemove[_0x59c5('0x2d4')](p2);toRemove=new Point(toRemove['x']+dx,toRemove['y']+dy)){if(this[_0x59c5('0x2cd')][_0x59c5('0xac')](toRemove))this[_0x59c5('0x2f2')](this['cells'][_0x59c5('0x5d')](toRemove),toRemove,e,dy==0x0);}if(removeP2&&this[_0x59c5('0x2cd')][_0x59c5('0xac')](p2))this[_0x59c5('0x2f2')](this[_0x59c5('0x2cd')]['get'](p2),p2,e,dy==0x0);}[_0x59c5('0x2f9')](e,p1,includeP1,p2,includeP2){let dx=p2['x']-p1['x'];if(dx!=0x0)dx/=Math[_0x59c5('0x219')](dx);let dy=p2['y']-p1['y'];if(dy!=0x0)dy/=Math[_0x59c5('0x219')](dy);let start=includeP1?p1:new Point(p1['x']+dx,p1['y']+dy);for(let toRemove=start;!toRemove[_0x59c5('0x2d4')](p2);toRemove=new Point(toRemove['x']+dx,toRemove['y']+dy)){if(this[_0x59c5('0x2cd')][_0x59c5('0xac')](toRemove)){if(!this[_0x59c5('0x2cd')][_0x59c5('0x5d')](toRemove)[_0x59c5('0x2fa')](e,dy==0x0))return![];}}if(includeP2&&this[_0x59c5('0x2cd')][_0x59c5('0xac')](p2)){if(!this['cells'][_0x59c5('0x5d')](p2)[_0x59c5('0x2fa')](e,dy==0x0))return![];}return!![];}[_0x59c5('0x2d3')](path,e,setSegments){let points=path[_0x59c5('0x9d')]();path['length']=0x0;for(let p of points){if(path[_0x59c5('0x19')]==0x0||!path[path[_0x59c5('0x19')]-0x1]['equals'](p)){let l=path[_0x59c5('0x19')]-0x1;let threeAligned=l>0x0&&(path[l-0x1]['x']==path[l]['x']&&path[l]['x']==p['x']||path[l-0x1]['y']==path[l]['y']&&path[l]['y']==p['y']);if(threeAligned){if(setSegments){this['removeSegmentsFromRange'](e,path[l-0x1],![],p,![]);this[_0x59c5('0x2f8')](e,path[l-0x1],![],p,![]);}path[l]=p;}else{path[_0x59c5('0x16')](p);}}}}[_0x59c5('0x2fb')](){let bounds=this[_0x59c5('0x2cf')];this[_0x59c5('0x2e2')]=new Grid(bounds[_0x59c5('0x71')]-bounds[_0x59c5('0x6a')]+0x1,bounds[_0x59c5('0x1c2')]-bounds[_0x59c5('0x1c0')]+0x1);this[_0x59c5('0x2fc')]=new Grid(bounds['right']-bounds['left']+0x1,bounds[_0x59c5('0x1c2')]-bounds['top']+0x1);for(let r=bounds[_0x59c5('0x1c0')];r<=bounds[_0x59c5('0x1c2')];r++){if(this['rowHeights']['get'](r)==0x0)continue;let lastVertex=bounds[_0x59c5('0x6a')];let maxEdges=0x0;for(let c=bounds[_0x59c5('0x6a')];c<=bounds[_0x59c5('0x71')];c++){let p=new Point(c,r);if(this[_0x59c5('0x2cd')][_0x59c5('0xac')](p)){let cell=this[_0x59c5('0x2cd')][_0x59c5('0x5d')](p);maxEdges=Math[_0x59c5('0xc6')](maxEdges,cell[_0x59c5('0x2fd')](!![]));if(cell[_0x59c5('0x2fe')]()||c==bounds['right']){this[_0x59c5('0x2ff')](maxEdges,r,lastVertex,c);lastVertex=c;maxEdges=0x0;}}else if(c==bounds['right']){this['setHorizontalEdgesInRange'](maxEdges,r,lastVertex,c);}}}for(let c=bounds['left'];c<=bounds[_0x59c5('0x71')];c++){if(this['columnWidths']['get'](c)==0x0)continue;let lastVertex=bounds['top'];let maxEdges=0x0;for(let r=bounds[_0x59c5('0x1c0')];r<=bounds['bottom'];r++){let p=new Point(c,r);if(this['cells'][_0x59c5('0xac')](p)){let cell=this[_0x59c5('0x2cd')]['get'](p);maxEdges=Math['max'](maxEdges,cell['countEdges'](![]));if(cell['containsVertex']()||r==bounds['bottom']){this[_0x59c5('0x300')](maxEdges,c,lastVertex,r);lastVertex=r;maxEdges=0x0;}}else if(r==bounds[_0x59c5('0x1c2')]){this[_0x59c5('0x300')](maxEdges,c,lastVertex,r);}}}}[_0x59c5('0x301')](bend,column,row){if(bend[_0x59c5('0x302')]!=null)return bend[_0x59c5('0x302')];let path=this[_0x59c5('0x2f1')][_0x59c5('0x5d')](bend[_0x59c5('0x128')]);for(let i=0x1;i<path[_0x59c5('0x19')]-0x1;++i){let point=path[i];if(point['x']==column&&point['y']==row){bend[_0x59c5('0x302')]=[path[i-0x1],path[i+0x1]];return bend[_0x59c5('0x302')];}}return null;}[_0x59c5('0x303')](bend,column,row){let neighborPoints=this['getBendNeighborPoints'](bend,column,row);if(neighborPoints==null)return![];let nx=neighborPoints[0x0]['x']==column?neighborPoints[0x1]['x']:neighborPoints[0x0]['x'];return nx<column;}[_0x59c5('0x304')](bend,column,row){let neighborPoints=this['getBendNeighborPoints'](bend,column,row);if(neighborPoints==null)return![];let ny=neighborPoints[0x0]['y']==row?neighborPoints[0x1]['y']:neighborPoints[0x0]['y'];return ny<row;}[_0x59c5('0x2ff')](edges,row,c1,c2){let occupiedLanes=[];let edgeLanes=new Map();let freeLanes=new Set();for(let i=0x0;i<edges;++i)freeLanes[_0x59c5('0x60')](i);for(let i=c1;i<=c2;i++){this[_0x59c5('0x2e2')][_0x59c5('0xa7')](i-this['bounds'][_0x59c5('0x6a')],row-this[_0x59c5('0x2cf')][_0x59c5('0x1c0')],edges);let p=new Point(i,row);let cell=this[_0x59c5('0x2cd')][_0x59c5('0xac')](p)?this[_0x59c5('0x2cd')]['get'](p):null;for(let e=0x0;e<edges;e++){let edge=occupiedLanes[e];if(edge!=null&&(cell==null||!cell['containsEdge'](edge))){occupiedLanes[e]=null;edgeLanes[_0x59c5('0xad')](edge);freeLanes[_0x59c5('0x60')](e);}}if(cell!=null){for(let item of cell[_0x59c5('0x2f3')]){let segment=item instanceof DrawingGrid[_0x59c5('0x2f0')]?item:null;if(segment!=null&&segment[_0x59c5('0x305')]==-0x1&&segment[_0x59c5('0x218')]){if(!edgeLanes['has'](segment[_0x59c5('0x128')])){let freeLane=Utils['first'](freeLanes);segment[_0x59c5('0x305')]=freeLane;segment[_0x59c5('0x306')]=edges;occupiedLanes[freeLane]=segment['edge'];edgeLanes[_0x59c5('0xa7')](segment['edge'],segment[_0x59c5('0x305')]);freeLanes['delete'](freeLane);}else{segment[_0x59c5('0x305')]=edgeLanes['get'](segment[_0x59c5('0x128')]);segment[_0x59c5('0x306')]=edges;}}let bend=item instanceof DrawingGrid[_0x59c5('0x2d6')]?item:null;if(bend!=null&&bend[_0x59c5('0x307')]==-0x1){if(!edgeLanes[_0x59c5('0xac')](bend[_0x59c5('0x128')])){let freeLane=Utils[_0x59c5('0x308')](freeLanes);bend['horizontalLane']=freeLane;bend['maxHNeighbors']=edges;occupiedLanes[freeLane]=bend[_0x59c5('0x128')];edgeLanes[_0x59c5('0xa7')](bend[_0x59c5('0x128')],bend[_0x59c5('0x307')]);freeLanes['delete'](freeLane);}else{bend[_0x59c5('0x307')]=edgeLanes[_0x59c5('0x5d')](bend['edge']);bend['maxHNeighbors']=edges;}}}}}if(edges>0x1&&edges<0x7){let permutations=new DrawingGrid[(_0x59c5('0x309'))](edges);let minCrossingsPerm=permutations['get'](0x0);let minCrossings=Number['MAX_SAFE_INTEGER'];for(let permutation of permutations['list']()){let crossings=this[_0x59c5('0x30a')](edges,row,c1,c2,permutation);if(crossings<minCrossings){minCrossings=crossings;minCrossingsPerm=permutation;}if(crossings==0x0)break;}if(minCrossingsPerm!=permutations[_0x59c5('0x5d')](0x0))this['permuteHorizontalEdgeLanes'](row,c1,c2,minCrossingsPerm);}}[_0x59c5('0x300')](edges,column,r1,r2){let occupiedLanes=[];let edgeLanes=new Map();let freeLanes=new Set();for(let i=0x0;i<edges;++i)freeLanes['add'](i);for(let i=r1;i<=r2;i++){this[_0x59c5('0x2fc')]['set'](column-this[_0x59c5('0x2cf')]['left'],i-this[_0x59c5('0x2cf')][_0x59c5('0x1c0')],edges);let p=new Point(column,i);let cell=this[_0x59c5('0x2cd')]['has'](p)?this['cells'][_0x59c5('0x5d')](p):null;for(let e=0x0;e<edges;e++){let edge=occupiedLanes[e];if(edge!=null&&(cell==null||!cell[_0x59c5('0x30b')](edge))){occupiedLanes[e]=null;edgeLanes[_0x59c5('0xad')](edge);freeLanes[_0x59c5('0x60')](e);}}if(cell!=null){for(let item of cell[_0x59c5('0x2f3')]){let segment=item instanceof DrawingGrid[_0x59c5('0x2f0')]?item:null;if(segment!=null&&segment[_0x59c5('0x305')]==-0x1&&!segment[_0x59c5('0x218')]){if(!edgeLanes[_0x59c5('0xac')](segment[_0x59c5('0x128')])){let freeLane=Utils[_0x59c5('0x308')](freeLanes);segment[_0x59c5('0x305')]=freeLane;segment['maxNeighbors']=edges;occupiedLanes[freeLane]=segment[_0x59c5('0x128')];edgeLanes[_0x59c5('0xa7')](segment[_0x59c5('0x128')],segment[_0x59c5('0x305')]);freeLanes[_0x59c5('0xad')](freeLane);}else{segment['lane']=edgeLanes[_0x59c5('0x5d')](segment['edge']);segment[_0x59c5('0x306')]=edges;}}let bend=item instanceof DrawingGrid[_0x59c5('0x2d6')]?item:null;if(bend!=null&&bend[_0x59c5('0x2e5')]==-0x1){if(!edgeLanes[_0x59c5('0xac')](bend['edge'])){let freeLane=Utils[_0x59c5('0x308')](freeLanes);bend[_0x59c5('0x2e5')]=freeLane;bend['maxVNeighbors']=edges;occupiedLanes[freeLane]=bend[_0x59c5('0x128')];edgeLanes['set'](bend[_0x59c5('0x128')],bend[_0x59c5('0x2e5')]);freeLanes['delete'](freeLane);}else{bend[_0x59c5('0x2e5')]=edgeLanes[_0x59c5('0x5d')](bend[_0x59c5('0x128')]);bend[_0x59c5('0x2e4')]=edges;}}}}}if(edges>0x1&&edges<0x7){let permutations=new DrawingGrid[(_0x59c5('0x309'))](edges);let minCrossingsPerm=permutations[_0x59c5('0x5d')](0x0);let minCrossings=Number['MAX_SAFE_INTEGER'];for(let permutation of permutations[_0x59c5('0x30c')]()){let crossings=this[_0x59c5('0x30d')](edges,column,r1,r2,permutation);if(crossings<minCrossings){minCrossings=crossings;minCrossingsPerm=permutation;}if(crossings==0x0)break;}if(minCrossingsPerm!=permutations[_0x59c5('0x5d')](0x0))this[_0x59c5('0x30e')](column,r1,r2,minCrossingsPerm);}}[_0x59c5('0x30a')](edges,row,c1,c2,permutation){let totalCrossings=0x0;for(let i=c1;i<=c2;i++){let p=new Point(i,row);let cell=this[_0x59c5('0x2cd')][_0x59c5('0xac')](p)?this[_0x59c5('0x2cd')][_0x59c5('0x5d')](p):null;if(cell!=null){let cellCrossings=0x0;let sortedLane=[];for(let o of cell[_0x59c5('0x2f3')]){let edgeSegment=o instanceof DrawingGrid[_0x59c5('0x2f0')]?o:null;if(edgeSegment!=null&&edgeSegment['horizontal'])sortedLane[permutation[edgeSegment[_0x59c5('0x305')]]]=edgeSegment;let bend=o instanceof DrawingGrid[_0x59c5('0x2d6')]?o:null;if(bend!=null)sortedLane[permutation[bend['horizontalLane']]]=bend;}let edgesToTheTop=0x0;let downBendsToTheTop=0x0;for(let j=0x0;j<edges;++j){let o=sortedLane[j];let edgeSegment=o instanceof DrawingGrid[_0x59c5('0x2f0')]?o:null;if(edgeSegment!=null&&edgeSegment['horizontal']){edgesToTheTop++;cellCrossings+=downBendsToTheTop;}let bend=o instanceof DrawingGrid[_0x59c5('0x2d6')]?o:null;if(bend!=null){if(this[_0x59c5('0x304')](bend,i,row))cellCrossings+=edgesToTheTop;else downBendsToTheTop++;}}totalCrossings+=cellCrossings;}}return totalCrossings;}[_0x59c5('0x30d')](edges,column,r1,r2,permutation){let totalCrossings=0x0;for(let i=r1;i<=r2;i++){let p=new Point(column,i);let cell=this[_0x59c5('0x2cd')][_0x59c5('0xac')](p)?this[_0x59c5('0x2cd')]['get'](p):null;if(cell!=null){let cellCrossings=0x0;let sortedLane=[];for(let o of cell[_0x59c5('0x2f3')]){let edgeSegment=o instanceof DrawingGrid[_0x59c5('0x2f0')]?o:null;if(edgeSegment!=null&&!edgeSegment[_0x59c5('0x218')])sortedLane[permutation[edgeSegment[_0x59c5('0x305')]]]=edgeSegment;let bend=o instanceof DrawingGrid[_0x59c5('0x2d6')]?o:null;if(bend!=null)sortedLane[permutation[bend[_0x59c5('0x2e5')]]]=bend;}let edgesToTheLeft=0x0;let rightBendsToTheLeft=0x0;for(let j=0x0;j<edges;++j){let o=sortedLane[j];let edgeSegment=o instanceof DrawingGrid[_0x59c5('0x2f0')]?o:null;if(edgeSegment!=null&&!edgeSegment['horizontal']){edgesToTheLeft++;cellCrossings+=rightBendsToTheLeft;}let bend=o instanceof DrawingGrid[_0x59c5('0x2d6')]?o:null;if(bend!=null){if(this['bendsToTheLeft'](bend,column,i))cellCrossings+=edgesToTheLeft;else rightBendsToTheLeft++;}}totalCrossings+=cellCrossings;}}return totalCrossings;}[_0x59c5('0x30f')](row,c1,c2,permutation){let laneObjects=new Set();for(let i=c1;i<=c2;i++){let p=new Point(i,row);let cell=this[_0x59c5('0x2cd')][_0x59c5('0xac')](p)?this[_0x59c5('0x2cd')]['get'](p):null;if(cell!=null){for(let o of cell[_0x59c5('0x2f3')]){let s=o instanceof DrawingGrid[_0x59c5('0x2f0')]?o:null;if(s!=null&&s['horizontal']&&!laneObjects[_0x59c5('0xac')](s))laneObjects['add'](s);let b=o instanceof DrawingGrid[_0x59c5('0x2d6')]?o:null;if(b!=null&&!laneObjects[_0x59c5('0xac')](b))laneObjects['add'](b);}}}for(let o of laneObjects){let s=o instanceof DrawingGrid[_0x59c5('0x2f0')]?o:null;if(s!=null)s[_0x59c5('0x305')]=permutation[s['lane']];let b=o instanceof DrawingGrid[_0x59c5('0x2d6')]?o:null;if(b!=null)b[_0x59c5('0x307')]=permutation[b['horizontalLane']];}}[_0x59c5('0x30e')](column,r1,r2,permutation){let laneObjects=new Set();for(let i=r1;i<=r2;i++){let p=new Point(column,i);let cell=this[_0x59c5('0x2cd')][_0x59c5('0xac')](p)?this[_0x59c5('0x2cd')]['get'](p):null;if(cell!=null){for(let o of cell[_0x59c5('0x2f3')]){let s=o instanceof DrawingGrid[_0x59c5('0x2f0')]?o:null;if(s!=null&&!s[_0x59c5('0x218')]&&!laneObjects['has'](s))laneObjects[_0x59c5('0x60')](s);let b=o instanceof DrawingGrid[_0x59c5('0x2d6')]?o:null;if(b!=null&&!laneObjects[_0x59c5('0xac')](b))laneObjects[_0x59c5('0x60')](b);}}}for(let o of laneObjects){let s=o instanceof DrawingGrid[_0x59c5('0x2f0')]?o:null;if(s!=null)s[_0x59c5('0x305')]=permutation[s[_0x59c5('0x305')]];let b=o instanceof DrawingGrid[_0x59c5('0x2d6')]?o:null;if(b!=null)b['verticalLane']=permutation[b[_0x59c5('0x2e5')]];}}[_0x59c5('0x2d5')](column,row){let i=new Point(column,row);if(!this['cells']['has'](i))this['cells'][_0x59c5('0xa7')](i,new DrawingGrid[(_0x59c5('0x310'))]());return this[_0x59c5('0x2cd')][_0x59c5('0x5d')](i);}}DrawingGrid['Cell']=class{constructor(){this['content']=[];}[_0x59c5('0x60')](item){this[_0x59c5('0x2f3')][_0x59c5('0x16')](item);}['removeEdgeOrBend'](e,horizontal){for(let i=0x0;i<this[_0x59c5('0x2f3')][_0x59c5('0x19')];i++){let item=this[_0x59c5('0x2f3')][i];let s=item instanceof DrawingGrid[_0x59c5('0x2f0')]?item:null;if(s!=null&&s[_0x59c5('0x128')]==e&&s[_0x59c5('0x218')]==horizontal){this[_0x59c5('0x2f3')][_0x59c5('0x9c')](i,0x1);break;}let b=item instanceof DrawingGrid[_0x59c5('0x2d6')]?item:null;if(b!=null&&b[_0x59c5('0x128')]==e){this[_0x59c5('0x2f3')][_0x59c5('0x9c')](i,0x1);break;}}}['countEdges'](horizontal){let count=0x0;for(let item of this['content']){let s=item instanceof DrawingGrid[_0x59c5('0x2f0')]?item:null;if(s!=null&&s['horizontal']==horizontal)count++;let b=item instanceof DrawingGrid[_0x59c5('0x2d6')]?item:null;if(b!=null)count++;}return count;}[_0x59c5('0x2fe')](){for(let item of this['content']){if(item instanceof Vertex)return!![];}return![];}[_0x59c5('0x2f4')](){for(let item of this['content']){if(item instanceof Vertex||item instanceof DrawingGrid[_0x59c5('0x2d6')])return!![];}return![];}[_0x59c5('0x30b')](edge){for(let item of this[_0x59c5('0x2f3')]){let s=item instanceof DrawingGrid[_0x59c5('0x2f0')]?item:null;if(s!=null&&s['edge']==edge)return!![];let b=item instanceof DrawingGrid['Bend']?item:null;if(b!=null&&b[_0x59c5('0x128')]==edge)return!![];}return![];}[_0x59c5('0x2fa')](edge,horizontal){for(let item of this['content']){let s=item instanceof DrawingGrid['EdgeSegment']?item:null;if(s!=null&&s[_0x59c5('0x128')]==edge&&s[_0x59c5('0x218')]==horizontal)return!![];}return![];}[_0x59c5('0x311')](edge,horizontal){for(let item of this['content']){let s=item instanceof DrawingGrid[_0x59c5('0x2f0')]?item:null;if(s!=null&&s[_0x59c5('0x128')]==edge&&s[_0x59c5('0x218')]==horizontal)return s;}return null;}[_0x59c5('0x2e3')](edge){for(let item of this['content']){let b=item instanceof DrawingGrid[_0x59c5('0x2d6')]?item:null;if(b!=null&&b[_0x59c5('0x128')]==edge)return b;}return null;}[_0x59c5('0x2e7')](edge,horizontal,neighbors){for(let item of this[_0x59c5('0x2f3')]){let s=item instanceof DrawingGrid[_0x59c5('0x2f0')]?item:null;if(s!=null&&s['edge']==edge&&s[_0x59c5('0x218')]==horizontal){neighbors['val']=s[_0x59c5('0x306')];return s['lane'];}let b=item instanceof DrawingGrid['Bend']?item:null;if(b!=null&&b[_0x59c5('0x128')]==edge){neighbors[_0x59c5('0x2e8')]=horizontal?b[_0x59c5('0x2e6')]:b[_0x59c5('0x2e4')];return horizontal?b[_0x59c5('0x307')]:b[_0x59c5('0x2e5')];}}return-0x1;}[_0x59c5('0x312')](permutation,horizontal){for(let item of this[_0x59c5('0x2f3')]){let s=item instanceof DrawingGrid['EdgeSegment']?item:null;if(s!=null&&s[_0x59c5('0x218')]==horizontal)s[_0x59c5('0x305')]=permutation[s[_0x59c5('0x305')]];let b=item instanceof DrawingGrid['Bend']?item:null;if(b!=null){if(horizontal)b[_0x59c5('0x307')]=permutation[b[_0x59c5('0x307')]];else b[_0x59c5('0x2e5')]=permutation[b[_0x59c5('0x2e5')]];}}}};DrawingGrid[_0x59c5('0x2d0')]=class{constructor(left,top,right,bottom){this[_0x59c5('0x6a')]=left;this[_0x59c5('0x1c0')]=top;this[_0x59c5('0x71')]=right;this['bottom']=bottom;}};DrawingGrid['Size']=class{constructor(width,height){this[_0x59c5('0xf1')]=width;this['height']=height;}};DrawingGrid[_0x59c5('0x2f0')]=class{constructor(edge,dx,dy){this[_0x59c5('0x128')]=edge;this['dx']=dx;this['dy']=dy;this[_0x59c5('0x305')]=-0x1;this[_0x59c5('0x306')]=0x1;}get[_0x59c5('0x218')](){return this['dy']==0x0;}};DrawingGrid[_0x59c5('0x2d6')]=class{constructor(edge){this[_0x59c5('0x128')]=edge;this[_0x59c5('0x307')]=-0x1;this['maxHNeighbors']=0x1;this[_0x59c5('0x2e5')]=-0x1;this['maxVNeighbors']=0x1;this[_0x59c5('0x302')]=null;}};DrawingGrid['PointMap']=class extends Map{['has'](point){let key=this[_0x59c5('0x313')](point);return super[_0x59c5('0xac')](key);}['get'](point){let key=this['key'](point);return super['get'](key);}['set'](point,value){let key=this[_0x59c5('0x313')](point);super[_0x59c5('0xa7')](key,value);}['delete'](point){let key=this[_0x59c5('0x313')](point);return super[_0x59c5('0xad')](key);}['key'](point){return String(point['x'])+':'+String(point['y']);}};DrawingGrid[_0x59c5('0x309')]=class{constructor(n){this[_0x59c5('0x314')]=[];this[_0x59c5('0x315')]=[];for(let i=0x0;i<n;++i)this[_0x59c5('0x315')][i]=i;this[_0x59c5('0x316')](n);}[_0x59c5('0x316')](n){if(n==0x1){this[_0x59c5('0x317')]();}else{for(let i=0x0;i<n;i++){this['heapPermute'](n-0x1);if(n%0x2==0x1)this['swap'](0x0,n-0x1);else this['swap'](i,n-0x1);}}}[_0x59c5('0x317')](){this[_0x59c5('0x314')][_0x59c5('0x16')](this[_0x59c5('0x315')]['slice']());}['swap'](i,j){let t=this['current'][i];this[_0x59c5('0x315')][i]=this[_0x59c5('0x315')][j];this[_0x59c5('0x315')][j]=t;}['get'](i){return this[_0x59c5('0x314')][i];}[_0x59c5('0x30c')](){return this[_0x59c5('0x314')];}};class Representation{constructor(stGraph,weighted,xOrdering,stEmbedding){this[_0x59c5('0x318')]=stGraph[_0x59c5('0x161')]();if(weighted)this['Y']=stGraph[_0x59c5('0x162')](this[_0x59c5('0x318')],0x0);else{this['Y']=[];for(let i=0x0;i<stGraph[_0x59c5('0xe3')]['length'];++i)this['Y'][this[_0x59c5('0x318')][i]]=i;}if(stEmbedding==null){this['s']=stGraph[_0x59c5('0xe3')][this[_0x59c5('0x318')][0x0]];this['t']=stGraph[_0x59c5('0xe3')][this['stsort'][this['stsort']['length']-0x1]];this['d']=stGraph[_0x59c5('0x155')](!![]);this['d'][_0x59c5('0x17b')](this['s'],this['t']);}else{this['s']=stEmbedding['s'];this['t']=stEmbedding['t'];this['d']=stGraph[_0x59c5('0x15d')](stEmbedding[_0x59c5('0xa6')],this['s'],this['t']);}if(xOrdering){if(weighted)this['X']=this['d'][_0x59c5('0x160')]();else{let dsort=this['d']['topologicalSort']();this['X']=[];for(let i=0x0;i<this['d']['vertices'][_0x59c5('0x19')];++i)this['X'][dsort[i]]=i;}}}[_0x59c5('0x6a')](e){return e[_0x59c5('0x21')]?this['d'][_0x59c5('0x176')][_0x59c5('0x5d')](this['d'][_0x59c5('0xa6')][_0x59c5('0x180')](e)):this['d'][_0x59c5('0x176')]['get'](e);}[_0x59c5('0x71')](e){return e['reversed']?this['d']['edgeToFaceMap']['get'](e):this['d'][_0x59c5('0x176')][_0x59c5('0x5d')](this['d'][_0x59c5('0xa6')][_0x59c5('0x180')](e));}[_0x59c5('0x319')](v){if(v==this['s']||v==this['t'])return this['d'][_0x59c5('0x17d')];let edges=this['d'][_0x59c5('0xa6')]['get'](v);for(let i=0x0;i<edges['length'];++i){let e=edges[i];let n=edges[(i+0x1)%edges['length']];if(this['Y'][v[_0x59c5('0x22')]]>this['Y'][e['getOtherEnd'](v)[_0x59c5('0x22')]]&&this['Y'][v['index']]<this['Y'][n[_0x59c5('0x10')](v)[_0x59c5('0x22')]])return this['left'](n);}return null;}['rightV'](v){if(v==this['s']||v==this['t'])return this['d'][_0x59c5('0x17c')];let edges=this['d']['embedding'][_0x59c5('0x5d')](v);for(let i=0x0;i<edges[_0x59c5('0x19')];++i){let e=edges[i];let n=edges[(i+0x1)%edges['length']];if(this['Y'][v['index']]<this['Y'][e[_0x59c5('0x10')](v)['index']]&&this['Y'][v['index']]>this['Y'][n[_0x59c5('0x10')](v)[_0x59c5('0x22')]])return this[_0x59c5('0x71')](e);}return null;}[_0x59c5('0x31a')](e){return e[_0x59c5('0x8')];}[_0x59c5('0x31b')](e){return e[_0x59c5('0xb')];}['origF'](f){if(f==this['d'][_0x59c5('0x17c')]||f==this['d'][_0x59c5('0x17d')])return this['s'];let min=f['edges'][0x0][_0x59c5('0x8')];for(let e of f['edges']){if(this['Y'][min[_0x59c5('0x22')]]>this['Y'][e[_0x59c5('0x8')][_0x59c5('0x22')]])min=e['origin'];}return min;}[_0x59c5('0x31c')](f){if(f==this['d']['leftExFace']||f==this['d'][_0x59c5('0x17d')])return this['t'];let max=f[_0x59c5('0x0')][0x0][_0x59c5('0x8')];for(let e of f[_0x59c5('0x0')]){if(this['Y'][max[_0x59c5('0x22')]]<this['Y'][e['origin'][_0x59c5('0x22')]])max=e[_0x59c5('0x8')];}return max;}['leftMostIncoming'](v){if(v==this['t']){for(let e of this['t'][_0x59c5('0x1')])if(this['d'][_0x59c5('0x176')][_0x59c5('0x5d')](e)==this['d'][_0x59c5('0x17c')])return e;}let edges=this['d'][_0x59c5('0xa6')]['get'](v);for(let i=0x0;i<edges[_0x59c5('0x19')];++i){let e=edges[i];let n=edges[(i+0x1)%edges[_0x59c5('0x19')]];if(this['Y'][v[_0x59c5('0x22')]]>this['Y'][e['getOtherEnd'](v)['index']]&&this['Y'][v['index']]<this['Y'][n['getOtherEnd'](v)[_0x59c5('0x22')]])return this['d'][_0x59c5('0xa6')][_0x59c5('0x180')](e);}return null;}['leftMostOutgoing'](v){if(v==this['s']){for(let e of this['s']['outEdges'])if(this['d'][_0x59c5('0x176')]['get'](e)==this['d'][_0x59c5('0x17c')])return e;}let edges=this['d'][_0x59c5('0xa6')][_0x59c5('0x5d')](v);for(let i=0x0;i<edges[_0x59c5('0x19')];++i){let e=edges[i];let n=edges[(i+0x1)%edges['length']];if(this['Y'][v[_0x59c5('0x22')]]>this['Y'][e[_0x59c5('0x10')](v)[_0x59c5('0x22')]]&&this['Y'][v[_0x59c5('0x22')]]<this['Y'][n[_0x59c5('0x10')](v)[_0x59c5('0x22')]])return n;}return null;}['rightMostOutgoing'](v){let edges=this['d'][_0x59c5('0xa6')]['get'](v);for(let i=0x0;i<edges[_0x59c5('0x19')];++i){let e=edges[i];let n=edges[(i+0x1)%edges[_0x59c5('0x19')]];if(this['Y'][v['index']]<this['Y'][e[_0x59c5('0x10')](v)[_0x59c5('0x22')]]&&this['Y'][v['index']]>this['Y'][n['getOtherEnd'](v)[_0x59c5('0x22')]])return e;}return null;}[_0x59c5('0x31d')](v){let outEdges=[];let e=this[_0x59c5('0x31e')](v);if(e!=null){do{outEdges['push'](e);e=this['d']['embedding'][_0x59c5('0xb3')](v,e);}while(e[_0x59c5('0x8')]==v&&outEdges['length']<v[_0x59c5('0xa')][_0x59c5('0x19')]);}return outEdges;}['getInEdges'](v){let inEdges=[];let e=this['leftMostIncoming'](v);if(e!=null){do{inEdges[_0x59c5('0x16')](e);e=this['d'][_0x59c5('0xa6')][_0x59c5('0xb4')](v,e);}while(e[_0x59c5('0xb')]==v&&inEdges[_0x59c5('0x19')]<v[_0x59c5('0x1')][_0x59c5('0x19')]);}return inEdges;}[_0x59c5('0x31f')](v){let edges=this[_0x59c5('0x31d')](v);return edges[Math['floor'](edges[_0x59c5('0x19')]/0x2)];}[_0x59c5('0x320')](v){let edges=this[_0x59c5('0x321')](v);return edges[Math[_0x59c5('0xd4')](edges['length']/0x2)];}[_0x59c5('0x322')](){return{'y':0x0,'x1':0x0,'x2':0x0};}[_0x59c5('0x323')](){return{'x':0x0,'y1':0x0,'y2':0x0};}get[_0x59c5('0x324')](){return this['d'];}get['source'](){return this['s'];}get[_0x59c5('0xd1')](){return this['t'];}get[_0x59c5('0x161')](){return this[_0x59c5('0x318')];}}class ConstrainedVisibility extends Representation{constructor(stGraph,vpaths){super(stGraph,!![],![],null);this['d'][_0x59c5('0xef')]();this[_0x59c5('0x325')]=new Map();this[_0x59c5('0x326')]=new Map();for(let p of vpaths){let v=new Vertex();this['d'][_0x59c5('0xe3')][_0x59c5('0x16')](v);this[_0x59c5('0x326')]['set'](p,v);for(let e of p)this[_0x59c5('0x325')]['set'](e,p);}for(let e of stGraph[_0x59c5('0x0')]){if(!this[_0x59c5('0x325')][_0x59c5('0xac')](e)){let p=[];p['push'](e);this['edgeToPathMap'][_0x59c5('0xa7')](e,p);vpaths[_0x59c5('0x16')](p);let v=new Vertex();this['d'][_0x59c5('0xe3')][_0x59c5('0x16')](v);this[_0x59c5('0x326')]['set'](p,v);}}for(const [e,p]of this['edgeToPathMap']['entries']()){let pv=this[_0x59c5('0x326')][_0x59c5('0x5d')](p);let l=this['left'](e);let r=this['right'](e);let lv=this['d'][_0x59c5('0x178')][_0x59c5('0x5d')](l);let rv=this['d'][_0x59c5('0x178')][_0x59c5('0x5d')](r);if(!lv['adjacentTo'](pv))this['d'][_0x59c5('0xf6')](lv,pv)[_0x59c5('0x2')]=0.5;if(!pv['adjacentTo'](rv))this['d'][_0x59c5('0xf6')](pv,rv)['weight']=0.5;}this[_0x59c5('0x327')]=new Map();this['vSegments']=new Map();this['X']=this['d']['getWeightedTopologicalNumbering'](-0.5);for(let p of vpaths){for(let e of p){let vs=this[_0x59c5('0x323')]();vs['x']=this['X'][this[_0x59c5('0x326')]['get'](p)[_0x59c5('0x22')]];vs['y2']=this['Y'][this['orig'](e)['index']];vs['y1']=this['Y'][this['dest'](e)[_0x59c5('0x22')]];this[_0x59c5('0x328')][_0x59c5('0xa7')](e,vs);}}for(let v of stGraph['vertices']){let hs=this[_0x59c5('0x322')]();hs['y']=this['Y'][v[_0x59c5('0x22')]];let x1=Number['POSITIVE_INFINITY'];let x2=Number[_0x59c5('0x285')];for(let e of v[_0x59c5('0x0')]){let p=this[_0x59c5('0x325')][_0x59c5('0x5d')](e);x1=Math[_0x59c5('0xc5')](x1,this['X'][this[_0x59c5('0x326')][_0x59c5('0x5d')](p)[_0x59c5('0x22')]]);x2=Math['max'](x2,this['X'][this[_0x59c5('0x326')]['get'](p)[_0x59c5('0x22')]]);}hs['x1']=x1;hs['x2']=x2;this[_0x59c5('0x327')][_0x59c5('0xa7')](v,hs);}}get['vertexSegments'](){return this['hSegments'];}get['edgeSegments'](){return this[_0x59c5('0x328')];}}class OrthogonalLayout extends Layout{constructor(){super();this['refine']=!![];this['padding']=0xf;this[_0x59c5('0x329')]=0xa;this['mm']=0x1;}get[_0x59c5('0x1b3')](){return!![];}[_0x59c5('0x1b5')](graph){graph[_0x59c5('0xf5')]();this[_0x59c5('0xa5')]=graph;for(let edge of graph[_0x59c5('0x0')])edge[_0x59c5('0x2')]=0x1;if(graph[_0x59c5('0xe3')][_0x59c5('0x19')]==0x0||graph[_0x59c5('0x0')][_0x59c5('0x19')]==0x0){this[_0x59c5('0x2cc')]=new Map();for(let v of graph['vertices'])this[_0x59c5('0x2cc')]['set'](v,new Point(0x0,0x0));this['edgePoints']=new Map();this['drawingGrid']=new DrawingGrid(graph,this[_0x59c5('0x2cc')],this[_0x59c5('0x2f1')]);return this[_0x59c5('0x32a')](this[_0x59c5('0x32b')]);}let nonplanarReplacement=new Map();let stGraph=graph[_0x59c5('0x154')](nonplanarReplacement);for(let edge of stGraph['edges'])edge[_0x59c5('0xf7')]=![];let biconnectionEdges=stGraph[_0x59c5('0x111')]();let maxDegreeeReplacement=stGraph[_0x59c5('0x163')](0x4,stGraph[_0x59c5('0x13d')]());stGraph[_0x59c5('0xf5')]();let reversedEdges=stGraph[_0x59c5('0x32c')]();let r=new Representation(stGraph,!![]);let vertexToPathMap=new Map();let startEdges=new Map();let endEdges=new Map();for(let i=0x1;i<stGraph[_0x59c5('0xe3')][_0x59c5('0x19')]-0x1;++i){let ts=r[_0x59c5('0x161')][i];let v=stGraph['vertices'][ts];let path=[];switch(v[_0x59c5('0x1')]['length']){case 0x1:path[_0x59c5('0x16')](v[_0x59c5('0x1')][0x0]);path['push'](r[_0x59c5('0x31f')](v));break;case 0x2:path[_0x59c5('0x16')](r[_0x59c5('0x32d')](v));path['push'](r['rightMostOutgoing'](v));break;case 0x3:path[_0x59c5('0x16')](r[_0x59c5('0x320')](v));path[_0x59c5('0x16')](v[_0x59c5('0xa')][0x0]);break;}vertexToPathMap[_0x59c5('0xa7')](v,path[_0x59c5('0x9d')]());startEdges[_0x59c5('0xa7')](path[0x0],path);endEdges[_0x59c5('0xa7')](path[0x1],path);}for(let e of stGraph[_0x59c5('0x0')]){if(endEdges[_0x59c5('0xac')](e)&&startEdges[_0x59c5('0xac')](e)){let p1=endEdges[_0x59c5('0x5d')](e);let p2=startEdges[_0x59c5('0x5d')](e);p1[_0x59c5('0x9c')](p1[_0x59c5('0x19')]-0x1,0x1);p1[_0x59c5('0x16')](...p2);startEdges[_0x59c5('0xa7')](p1[0x0],p1);endEdges[_0x59c5('0xa7')](p1[p1['length']-0x1],p1);}}let unifiedPaths=[];for(const [edge,path]of endEdges[_0x59c5('0xa9')]()){if(edge==path[path[_0x59c5('0x19')]-0x1])unifiedPaths[_0x59c5('0x16')](path);}let cv=new ConstrainedVisibility(stGraph,unifiedPaths);this[_0x59c5('0x2cc')]=new Map();for(let v of stGraph[_0x59c5('0xe3')]){if(v==r[_0x59c5('0xd1')]||v==r[_0x59c5('0x32e')])continue;let vertexSegment=cv['vertexSegments'][_0x59c5('0x5d')](v);let e=vertexToPathMap[_0x59c5('0x5d')](v)[0x0];let edgeSegment=cv[_0x59c5('0x32f')][_0x59c5('0x5d')](e);let vPoint=new Point(Math[_0x59c5('0xd4')](edgeSegment['x']),Math[_0x59c5('0xd4')](vertexSegment['y']));this[_0x59c5('0x2cc')][_0x59c5('0xa7')](v,vPoint);}let s=r[_0x59c5('0x32e')];let sSegment=cv[_0x59c5('0x330')][_0x59c5('0x5d')](s);let sem=r[_0x59c5('0x31d')](s);let sMedian=sem[Math['floor'](sem['length']/0x2)];let sMedianSegment=cv[_0x59c5('0x32f')][_0x59c5('0x5d')](sMedian);let sPoint=new Point(Math[_0x59c5('0xd4')](sMedianSegment['x']),Math[_0x59c5('0xd4')](sSegment['y']));this[_0x59c5('0x2cc')]['set'](s,sPoint);let t=r['sink'];let tSegment=cv[_0x59c5('0x330')]['get'](t);let tem=r[_0x59c5('0x321')](t);let tMedian=tem[Math['floor'](tem[_0x59c5('0x19')]/0x2)];let tMedianSegment=cv[_0x59c5('0x32f')][_0x59c5('0x5d')](tMedian);let tPoint=new Point(Math['floor'](tMedianSegment['x']),Math[_0x59c5('0xd4')](tSegment['y']));this[_0x59c5('0x2cc')][_0x59c5('0xa7')](t,tPoint);this[_0x59c5('0x2f1')]=new Map();for(let e of stGraph[_0x59c5('0x0')]){let points=[];let eSegment=cv[_0x59c5('0x32f')]['get'](e);if(e[_0x59c5('0x8')]==s&&s['outEdges'][_0x59c5('0x19')]==0x4&&e==sem[0x0]){points[_0x59c5('0x16')](this[_0x59c5('0x2cc')]['get'](s));points[_0x59c5('0x16')](new Point(points[0x0]['x'],points[0x0]['y']-0x1));points[_0x59c5('0x16')](new Point(Math['floor'](eSegment['x']),points[0x0]['y']-0x1));if(e['destination']==t&&t[_0x59c5('0x1')][_0x59c5('0x19')]==0x4&&e==tem[0x0]){points[_0x59c5('0x16')](new Point(Math[_0x59c5('0xd4')](eSegment['x']),this[_0x59c5('0x2cc')]['get'](e[_0x59c5('0xb')])['y']+0x1));points[_0x59c5('0x16')](new Point(this[_0x59c5('0x2cc')][_0x59c5('0x5d')](e[_0x59c5('0xb')])['x'],this[_0x59c5('0x2cc')][_0x59c5('0x5d')](e[_0x59c5('0xb')])['y']+0x1));}else{points[_0x59c5('0x16')](new Point(Math[_0x59c5('0xd4')](eSegment['x']),this[_0x59c5('0x2cc')][_0x59c5('0x5d')](e[_0x59c5('0xb')])['y']));}points[_0x59c5('0x16')](this[_0x59c5('0x2cc')][_0x59c5('0x5d')](e[_0x59c5('0xb')]));this[_0x59c5('0x2f1')][_0x59c5('0xa7')](e,points);continue;}if(e['destination']==t&&t['inEdges'][_0x59c5('0x19')]==0x4&&e==tem[0x0]){points[_0x59c5('0x16')](this[_0x59c5('0x2cc')][_0x59c5('0x5d')](e[_0x59c5('0x8')]));points[_0x59c5('0x16')](new Point(Math[_0x59c5('0xd4')](eSegment['x']),points[0x0]['y']));points[_0x59c5('0x16')](new Point(Math[_0x59c5('0xd4')](eSegment['x']),this['vertexPoints']['get'](t)['y']+0x1));points[_0x59c5('0x16')](new Point(this[_0x59c5('0x2cc')][_0x59c5('0x5d')](t)['x'],this[_0x59c5('0x2cc')][_0x59c5('0x5d')](t)['y']+0x1));points['push'](this[_0x59c5('0x2cc')]['get'](t));this[_0x59c5('0x2f1')][_0x59c5('0xa7')](e,points);continue;}let u=e[_0x59c5('0x8')];let uSegment=cv[_0x59c5('0x330')]['get'](u);let v=e[_0x59c5('0xb')];let vSegment=cv[_0x59c5('0x330')][_0x59c5('0x5d')](v);points[_0x59c5('0x16')](this['vertexPoints'][_0x59c5('0x5d')](u));points[_0x59c5('0x16')](new Point(Math['floor'](eSegment['x']),Math[_0x59c5('0xd4')](uSegment['y'])));points['push'](new Point(Math['floor'](eSegment['x']),Math[_0x59c5('0xd4')](vSegment['y'])));points[_0x59c5('0x16')](this[_0x59c5('0x2cc')]['get'](v));this['edgePoints'][_0x59c5('0xa7')](e,points);}for(let e of reversedEdges){e[_0x59c5('0xa2')]();this[_0x59c5('0x2f1')][_0x59c5('0x5d')](e)[_0x59c5('0xa2')]();}for(const [v,c]of maxDegreeeReplacement['entries']()){let m=Math[_0x59c5('0xd4')](c['vertices'][_0x59c5('0x19')]/0x2);this[_0x59c5('0x331')](v,c,0x1,m+0x1,+0x1);this[_0x59c5('0x331')](v,c,c[_0x59c5('0xe3')][_0x59c5('0x19')]-0x1,m,-0x1);}for(const [v,c]of maxDegreeeReplacement[_0x59c5('0xa9')]()){for(let e of c['edges'])stGraph[_0x59c5('0x7')](e);for(let i=0x1;i<c['vertices']['length'];i++)stGraph[_0x59c5('0xf3')](c[_0x59c5('0xe3')][i]);}for(let e of biconnectionEdges)stGraph['removeEdge'](e);let stgVertexPoints=this[_0x59c5('0x2cc')];this[_0x59c5('0x2cc')]=new Map();for(let v of graph['vertices']){this[_0x59c5('0x2cc')][_0x59c5('0xa7')](v,stgVertexPoints[_0x59c5('0x5d')](stGraph[_0x59c5('0xdd')]['get'](v)));}let stgEdgePoints=this[_0x59c5('0x2f1')];this['edgePoints']=new Map();for(let e of graph[_0x59c5('0x0')]){if(stgEdgePoints['has'](stGraph[_0x59c5('0xde')][_0x59c5('0x5d')](e))){this[_0x59c5('0x2f1')]['set'](e,stgEdgePoints[_0x59c5('0x5d')](stGraph[_0x59c5('0xde')][_0x59c5('0x5d')](e)));}}for(const [edge,path]of nonplanarReplacement[_0x59c5('0xa9')]())this[_0x59c5('0x2f1')][_0x59c5('0xa7')](edge,this[_0x59c5('0x332')](path,stgEdgePoints));this[_0x59c5('0x32b')]=new DrawingGrid(graph,this[_0x59c5('0x2cc')],this['edgePoints']);return this[_0x59c5('0x32a')](this['drawingGrid']);}[_0x59c5('0x32a')](grid){let graph=this['graph'];if(this[_0x59c5('0x2ea')])grid['refine'](0x1);grid[_0x59c5('0x2d9')](v=>({'width':v[_0x59c5('0xf1')],'height':v[_0x59c5('0xf2')]}),this[_0x59c5('0x2b7')],this[_0x59c5('0x2b7')]+this['minLaneSize']);for(let v of graph[_0x59c5('0xe3')]){let gp=grid[_0x59c5('0x2cc')]['get'](v);let p=grid['getPosition'](gp);v['x']=p['x'];v['y']=p['y'];}for(let edge of graph[_0x59c5('0x0')]){var points=[];let gp=grid[_0x59c5('0x2f1')][_0x59c5('0x5d')](edge);for(let i=0x0;i<gp[_0x59c5('0x19')];++i){let p=grid[_0x59c5('0x2e1')](gp[i],edge,this[_0x59c5('0x329')],this[_0x59c5('0x329')]);if(i==0x0||!gp[i][_0x59c5('0x2d4')](gp[i-0x1]))points[_0x59c5('0x16')](new Point(p['x'],p['y']));}edge['points']=points;this[_0x59c5('0x333')](edge);}return!![];}[_0x59c5('0x333')](edge){let p=edge[_0x59c5('0x1d0')];let e=p[_0x59c5('0x19')]-0x1;let x=p[0x0]['x'];let y=p[0x0]['y'];let orect=Rect[_0x59c5('0x1bf')](edge[_0x59c5('0x8')]);if(p[0x0]['x']<p[0x1]['x'])x=orect[_0x59c5('0x71')]();else if(p[0x0]['x']>p[0x1]['x'])x=orect['left']();else if(p[0x0]['y']<p[0x1]['y'])y=orect['bottom']();else if(p[0x0]['y']>p[0x1]['y'])y=orect['top']();p[0x0]=new Point(x,y);x=p[e]['x'];y=p[e]['y'];let drect=Rect[_0x59c5('0x1bf')](edge[_0x59c5('0xb')]);if(p[e]['x']<p[e-0x1]['x'])x=drect[_0x59c5('0x71')]();else if(p[e]['x']>p[e-0x1]['x'])x=drect['left']();else if(p[e]['y']<p[e-0x1]['y'])y=drect[_0x59c5('0x1c2')]();else if(p[e]['y']>p[e-0x1]['y'])y=drect[_0x59c5('0x1c0')]();p[e]=new Point(x,y);}[_0x59c5('0x1c3')](){return this['constructor'][_0x59c5('0x1c5')];}[_0x59c5('0x334')](array,l,r){let d=Math[_0x59c5('0xd4')]((r-l+0x1)/0x2);for(let i=0x0;i<d;i++){let t=array[l+i];array[l+i]=array[r-i];array[r-i]=t;}}[_0x59c5('0x331')](v,c,rs,re,step){let dummyPath=[];let p=v;for(let i=rs;i!=re;i+=step){let d=c[_0x59c5('0xe3')][i];for(let e of d[_0x59c5('0x0')]){if(e['origin']==p){dummyPath['push'](...this['edgePoints'][_0x59c5('0x5d')](e));break;}if(e[_0x59c5('0xb')]==p){let destPoints=this[_0x59c5('0x2f1')]['get'](e);destPoints[_0x59c5('0xa2')]();dummyPath[_0x59c5('0x16')](...destPoints);break;}}let realEdges=[];for(let e of d[_0x59c5('0x0')])if(!e[_0x59c5('0xf7')])realEdges[_0x59c5('0x16')](e);for(let e of realEdges){if(e[_0x59c5('0x8')]==d){e[_0x59c5('0x1f')](v);let path=dummyPath[_0x59c5('0x9d')]();path[_0x59c5('0x16')](...this[_0x59c5('0x2f1')][_0x59c5('0x5d')](e));this[_0x59c5('0x2f1')][_0x59c5('0xa7')](e,path);}else if(e['destination']==d){e[_0x59c5('0x1d')](v);let path=this[_0x59c5('0x2f1')][_0x59c5('0x5d')](e);let destPoints=dummyPath[_0x59c5('0x9d')]();destPoints[_0x59c5('0xa2')]();path[_0x59c5('0x16')](...destPoints);}}p=d;}}['mergePath'](edges,stgEdgePoints){let path=[];for(let e of edges)path[_0x59c5('0x16')](...stgEdgePoints[_0x59c5('0x5d')](e));return path;}get[_0x59c5('0x2ea')](){return this[_0x59c5('0x335')];}set[_0x59c5('0x2ea')](value){this[_0x59c5('0x335')]=value;}get[_0x59c5('0x2b7')](){return this[_0x59c5('0x2c9')];}set[_0x59c5('0x2b7')](value){this[_0x59c5('0x2c9')]=value;}get[_0x59c5('0x329')](){return this[_0x59c5('0x336')];}set[_0x59c5('0x329')](value){this[_0x59c5('0x336')]=value;}}class RadialTreeLayout extends Layout{constructor(){super();this[_0x59c5('0x1ad')]=0xa;this['keepRootPosition']=![];this['direction']=LayoutDirection[_0x59c5('0x1b0')];this[_0x59c5('0x337')]=0x1;this[_0x59c5('0xd5')]=![];}[_0x59c5('0x1b5')](graph){var root;var th=new TreeHelper(this[_0x59c5('0xd5')]);this[_0x59c5('0x2ae')]=th;graph[_0x59c5('0xe3')][_0x59c5('0x15')](function(v){let parentEdges=th[_0x59c5('0x1b6')](v);if(parentEdges[_0x59c5('0x19')]==0x0){root=v;return $break;}});if(!root)return $skipLayout;this[_0x59c5('0xdf')]=graph[_0x59c5('0xdf')](root,this[_0x59c5('0xd5')]);if(!this[_0x59c5('0xdf')])return $skipLayout;var rootX=root['x'];var rootY=root['y'];root['x']=0x0;root['y']=0x0;var deg=0x0;switch(this[_0x59c5('0x94')]){case LayoutDirection[_0x59c5('0x1b0')]:deg=0x10e;break;case LayoutDirection[_0x59c5('0x1c1')]:deg=0x5a;break;case LayoutDirection[_0x59c5('0x1bd')]:deg=0xb4;break;case LayoutDirection['RightToLeft']:deg=0x0;break;}root['leftBisectorData']=deg;root[_0x59c5('0x338')]=deg+0x168;for(var l=0x0;l<this['tree'][_0x59c5('0xea')][_0x59c5('0x19')]-0x1;l++){this[_0x59c5('0x339')](l);}var xoff=0x0;var yoff=0x0;if(this[_0x59c5('0x1af')]){var newRootX=root['x'];var newRootY=root['y'];xoff=rootX-newRootX;yoff=rootY-newRootY;}else{var rc=this[_0x59c5('0x33a')]();xoff=-rc['x']+this['margins'];yoff=-rc['y']+this[_0x59c5('0x1a2')];}for(var i=0x0;i<this[_0x59c5('0xdf')]['treeLevels']['length'];i++){var treeLevel=this[_0x59c5('0xdf')]['treeLevels'][i];for(var j=0x0;j<treeLevel[_0x59c5('0x19')];j++){var node=treeLevel[j];node['x']+=xoff;node['y']+=yoff;var soff=(node['x']-this[_0x59c5('0xdf')]['root']['x'])*this[_0x59c5('0x337')];node['x']=this['tree']['root']['x']+soff;}}return!![];}[_0x59c5('0x339')](parentLevel){var rad=this['calcRadius'](parentLevel+0x1);var nrad=this[_0x59c5('0x33b')](parentLevel+0x2);var angle=0x5a-Math[_0x59c5('0x33c')](rad/nrad)*0xb4/Math['PI'];var parents=this[_0x59c5('0xdf')][_0x59c5('0xea')][parentLevel];for(var i=0x0;i<parents[_0x59c5('0x19')];i++){var parent=parents[i];var children=this[_0x59c5('0xdf')][_0x59c5('0xec')](parent);if(children[_0x59c5('0x19')]==0x0)continue;var lbis=parent[_0x59c5('0x33d')];var rbis=parent[_0x59c5('0x338')];var dist;var deg;if(parentLevel!=0x0){if(children[_0x59c5('0x19')]==0x1){dist=0x0;deg=parent[_0x59c5('0x33e')];}else{dist=(rbis-lbis)/children[_0x59c5('0x19')];deg=lbis+dist/0x2;}}else{dist=(rbis-lbis)/children[_0x59c5('0x19')];deg=lbis;}children['forEach'](child=>{var x=rad*Math[_0x59c5('0x25d')](Math['PI']*deg/0xb4);var y=-rad*Math[_0x59c5('0x25c')](Math['PI']*deg/0xb4);child['x']=x;child['y']=y;child['angleData']=deg;deg+=dist;});}if(parentLevel==this[_0x59c5('0xdf')]['treeLevels'][_0x59c5('0x19')]-0x1)return $skipLayout;for(var p=0x0;p<parents[_0x59c5('0x19')];p++){var parent=parents[p];var children=this[_0x59c5('0xdf')]['childrenOf'](parent);for(var i=0x0;i<children[_0x59c5('0x19')];i++){var n1=null,n3=null;var n2=children[i];var level=this[_0x59c5('0xdf')][_0x59c5('0xea')][parentLevel+0x1];var i2=level['indexOf'](n2);var i1=i2-0x1;var i3=i2+0x1;if(this[_0x59c5('0xdf')][_0x59c5('0xec')](n2)['length']==0x0)continue;var turned1=![],turned2=![];while(!![]){if(i1<0x0){i1=level[_0x59c5('0x19')]-0x1;turned1=!![];}n1=level[i1--];if(this[_0x59c5('0xdf')][_0x59c5('0xec')](n1)[_0x59c5('0x19')]==0x0)continue;break;}while(!![]){if(i3>=level[_0x59c5('0x19')]){i3=0x0;turned2=!![];}n3=level[i3++];if(this[_0x59c5('0xdf')]['childrenOf'](n3)['length']==0x0)continue;break;}var a1,a2,a3;var b1,b2;var t1,t2;a1=n1[_0x59c5('0x33e')];a2=n2['angleData'];a3=n3[_0x59c5('0x33e')];if(turned1)a1-=0x168;if(turned2)a3+=0x168;b1=(a1+a2)/0x2;b2=(a2+a3)/0x2;if(nrad>0x0){t1=a2-angle;t2=a2+angle;if(this[_0x59c5('0xdf')][_0x59c5('0xec')](parent)['length']==0x1&&parentLevel==0x0){b1=t1;b2=t2;}else{b1=Math[_0x59c5('0xc6')](b1,t1);b2=Math[_0x59c5('0xc5')](b2,t2);}if(n1==n2&&i!=0x0)b1=t1;if(n2==n3)b2=t2;b1+=0.001;b2-=0.001;}n2['leftBisectorData']=Math[_0x59c5('0xc5')](b1,b2);n2['rightBisectorData']=Math['max'](b1,b2);}}}[_0x59c5('0x33a')](){var rect;for(var i=0x0;i<this[_0x59c5('0xdf')]['treeLevels'][_0x59c5('0x19')];i++){var treeLevel=this[_0x59c5('0xdf')]['treeLevels'][i];for(var j=0x0;j<treeLevel[_0x59c5('0x19')];j++){var node=treeLevel[j];var nodeRect=Rect[_0x59c5('0x1bf')](node);if(!rect)rect=nodeRect;else rect=rect[_0x59c5('0x1cf')](nodeRect);}}return rect;}['calcRadius'](level){if(level>=this['tree'][_0x59c5('0xea')][_0x59c5('0x19')])return this[_0x59c5('0x1ad')];if(level-0x1<0x0)return 0x0;var maxRad1=0x0,maxRad2=0x0;this['tree']['treeLevels'][level-0x1][_0x59c5('0x15')](node=>{var maxSide=Math[_0x59c5('0xc6')](node[_0x59c5('0xf1')],node[_0x59c5('0xf2')]);var radius=maxSide/0x2;maxRad1=Math[_0x59c5('0xc6')](maxRad1,radius);});this['tree']['treeLevels'][level]['forEach'](node=>{var maxSide=Math['max'](node[_0x59c5('0xf1')],node[_0x59c5('0xf2')]);var radius=maxSide/0x2;maxRad2=Math[_0x59c5('0xc6')](maxRad2,radius);});return maxRad1+maxRad2+this['levelDistance']+this[_0x59c5('0x33b')](level-0x1);}['getType'](){return this['constructor'][_0x59c5('0x1c5')];}get[_0x59c5('0x1ad')](){return this[_0x59c5('0x1c6')];}set[_0x59c5('0x1ad')](value){this[_0x59c5('0x1c6')]=value;}get['keepRootPosition'](){return this[_0x59c5('0x1c8')];}set[_0x59c5('0x1af')](value){this[_0x59c5('0x1c8')]=value;}get[_0x59c5('0x94')](){return this[_0x59c5('0x1c9')];}set[_0x59c5('0x94')](value){this[_0x59c5('0x1c9')]=value;}get[_0x59c5('0x337')](){return this['_stretchFactor'];}set['stretchFactor'](value){this['_stretchFactor']=value;}get[_0x59c5('0xd5')](){return this['_reversedLinks'];}set[_0x59c5('0xd5')](value){this[_0x59c5('0x1cd')]=value;}}export{Anchoring,AssistantPosition,AssistantType,BorderedTreeLayout,FlowchartLayout,FractalLayout,Graph,LayeredLayout,LayoutDirection,MultipleGraphsPlacement,Orientation,OrthogonalLayout,PathFinder,RadialTreeLayout,SpringLayout,TopologicalLayout,TreeLayout,TreeLayoutLinkType,TreeMapLayout};
